import{m as t}from"./p-29b5bd7f.js";import{I as s}from"./p-23929c27.js";class i{constructor(s,i,h){this.el=s,this.attributes=i,this.onLoad=h,this.hasLoaded=!1,t(this.el)||(this.intersectionObs=this.canObserveIntersection()?new IntersectionObserver(this.onIntersection.bind(this)):void 0,this.mutationObs=this.canObserveMutations()?new MutationObserver(this.onMutation.bind(this)):void 0,this.mutationObs?.observe(this.el,{childList:!0,subtree:!0,attributeFilter:this.attributes}),this.lazyLoad())}didLoad(){return this.hasLoaded}destroy(){this.intersectionObs?.disconnect(),this.mutationObs?.disconnect()}canObserveIntersection(){return s&&window.IntersectionObserver}canObserveMutations(){return s&&window.MutationObserver}lazyLoad(){this.canObserveIntersection()?this.intersectionObs?.observe(this.el):this.load()}onIntersection(t){t.forEach((t=>{(t.intersectionRatio>0||t.isIntersecting)&&(this.load(),this.intersectionObs.unobserve(t.target))}))}onMutation(){this.hasLoaded&&this.load()}getLazyElements(){return(t(this.el.shadowRoot)?this.el:this.el.shadowRoot).querySelectorAll(".lazy")}load(){window.requestAnimationFrame((()=>{this.getLazyElements().forEach(this.loadEl.bind(this))}))}loadEl(t){this.intersectionObs?.unobserve(t),this.hasLoaded=!0,this.onLoad?.(t)}}export{i as L}