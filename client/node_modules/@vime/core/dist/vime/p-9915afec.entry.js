import{g as t,a as i,w as s,r as e,c as a,h as n,H as h}from"./p-f8abe418.js";import{i as r,s as o,a as l,e as c}from"./p-8acb8eb5.js";import{D as u,l as d,o as m,h as y,q as g,r as f,s as v,i as p,e as b}from"./p-29b5bd7f.js";import{S as w}from"./p-c21e749f.js";import{f as C,L as k}from"./p-0cbaf141.js";import{V as P}from"./p-415151d7.js";import{M as T}from"./p-8b74fa0e.js";import"./p-121aab6e.js";import{P as x,a as F}from"./p-dff73e1a.js";import{c as E,o as S,a as R,b as M,d as V}from"./p-23929c27.js";var A=new Map,j=function(t,i){var s=t.updater;t.fields.forEach((function(t){s(t,i[t])}))},z=function(t,s){var e=t.state,a=i();if(A.has(a)){var n=A.get(a);n.state=e,n.wormholes.forEach((function(t){j(t,e)}))}return s};const Q=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror","fullscreen"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror","-webkit-full-screen"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror","-moz-full-screen"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError","-ms-fullscreen"]];class D{constructor(t,i){this.el=t,this.listener=i,this.disposal=new u,this.api=(()=>{const t={prefixed:!1},i=Q[0];let s;for(let t=0;t<Q.length;t+=1)if(Q[t][1]in document){s=Q[t];break}if(s){for(let e=0;e<s.length;e+=1)t[i[e]]=s[e];t.prefixed=s[0]!==i[0]}return t})(),this.isSupported&&(this.disposal.add(d(this.el,this.api.fullscreenchange,this.onFullscreenChange.bind(this))),document.webkitExitFullscreen&&this.disposal.add(d(this.el,"webkitfullscreenchange",this.onFullscreenChange.bind(this))),document.mozCancelFullScreen&&this.disposal.add(d(this.el,"mozfullscreenchange",this.onFullscreenChange.bind(this))))}async enterFullscreen(t){if(!this.isSupported)throw Error("Fullscreen API is not available.");return this.el[this.api.requestFullscreen](t)}async exitFullscreen(){if(!this.isSupported)throw Error("Fullscreen API is not available.");if(!this.isActive)throw Error("Player is not currently in fullscreen mode to exit.");return document[this.api.exitFullscreen]()}get isActive(){if(!this.isSupported)return!1;const t=document[this.api.fullscreenElement];return this.el===t||this.el.matches(":"+this.api.fullscreen)||this.el.contains(t)}get isSupported(){return!m(this.api.requestFullscreen)}onFullscreenChange(){this.listener(this.isActive)}destroy(){this.disposal.empty()}}class L{constructor(){this.silent=!1}log(...t){this.silent||m(console)||console.log("[Vime tip]:",...t)}warn(...t){this.silent||m(console)||console.error("[Vime warn]:",...t)}}const $=new Set;const I=new Set(["currentTime","paused"]);let O=0;const q=class{constructor(i){e(this,i),this.vmThemeChange=a(this,"vmThemeChange",7),this.vmPausedChange=a(this,"vmPausedChange",7),this.vmPlay=a(this,"vmPlay",7),this.vmPlayingChange=a(this,"vmPlayingChange",7),this.vmSeekingChange=a(this,"vmSeekingChange",7),this.vmSeeked=a(this,"vmSeeked",7),this.vmBufferingChange=a(this,"vmBufferingChange",7),this.vmDurationChange=a(this,"vmDurationChange",7),this.vmCurrentTimeChange=a(this,"vmCurrentTimeChange",7),this.vmReady=a(this,"vmReady",7),this.vmPlaybackReady=a(this,"vmPlaybackReady",7),this.vmPlaybackStarted=a(this,"vmPlaybackStarted",7),this.vmPlaybackEnded=a(this,"vmPlaybackEnded",7),this.vmBufferedChange=a(this,"vmBufferedChange",7),this.vmError=a(this,"vmError",7),this.vmLoadStart=a(this,"vmLoadStart",7),this.vmCurrentProviderChange=a(this,"vmCurrentProviderChange",7),this.vmCurrentSrcChange=a(this,"vmCurrentSrcChange",7),this.vmCurrentPosterChange=a(this,"vmCurrentPosterChange",7),this.vmMediaTitleChange=a(this,"vmMediaTitleChange",7),this.vmControlsChange=a(this,"vmControlsChange",7),this.vmPlaybackRateChange=a(this,"vmPlaybackRateChange",7),this.vmPlaybackRatesChange=a(this,"vmPlaybackRatesChange",7),this.vmPlaybackQualityChange=a(this,"vmPlaybackQualityChange",7),this.vmPlaybackQualitiesChange=a(this,"vmPlaybackQualitiesChange",7),this.vmMutedChange=a(this,"vmMutedChange",7),this.vmVolumeChange=a(this,"vmVolumeChange",7),this.vmViewTypeChange=a(this,"vmViewTypeChange",7),this.vmMediaTypeChange=a(this,"vmMediaTypeChange",7),this.vmLiveChange=a(this,"vmLiveChange",7),this.vmTouchChange=a(this,"vmTouchChange",7),this.vmLanguageChange=a(this,"vmLanguageChange",7),this.vmI18nChange=a(this,"vmI18nChange",7),this.vmTranslationsChange=a(this,"vmTranslationsChange",7),this.vmLanguagesChange=a(this,"vmLanguagesChange",7),this.vmFullscreenChange=a(this,"vmFullscreenChange",7),this.vmPiPChange=a(this,"vmPiPChange",7),this.vmTextTracksChange=a(this,"vmTextTracksChange",7),this.vmCurrentTextTrackChange=a(this,"vmCurrentTextTrackChange",7),this.vmTextTrackVisibleChange=a(this,"vmTextTrackVisibleChange",7),this.vmAudioTracksChange=a(this,"vmAudioTracksChange",7),this.vmCurrentAudioTrackChange=a(this,"vmCurrentAudioTrackChange",7),this.disposal=new u,this.logger=new L,this.icons="vime",this.paused=!0,this.playing=!1,this.duration=-1,this.currentTime=0,this.autoplay=!1,this.ready=!1,this.playbackReady=!1,this.loop=!1,this.muted=!1,this.buffered=0,this.playbackRate=1,this.lastRateCheck=1,this.playbackRates=[1],this.playbackQualities=[],this.seeking=!1,this.debug=!1,this.playbackStarted=!1,this.playbackEnded=!1,this.buffering=!1,this.controls=!1,this.isControlsActive=!1,this.isSettingsActive=!1,this.volume=50,this.isFullscreenActive=!1,this.aspectRatio="16:9",this.isAudioView=!1,this.isVideoView=!1,this.isAudio=!1,this.isVideo=!1,this.isLive=!1,this.isMobile=!1,this.isTouch=!1,this.isPiPActive=!1,this.textTracks=[],this.currentTextTrack=-1,this.isTextTrackVisible=!0,this.shouldRenderNativeTextTracks=!0,this.audioTracks=[],this.currentAudioTrack=-1,this.autopause=!0,this.playsinline=!1,this.language="en",this.translations={en:c},this.languages=["en"],this.i18n=c,f(this),v(this),function(i){const s=t(i);y(i,(()=>{$.add(s)}),(()=>{$.delete(s)}))}(this),F(this),function(i){const s=t(i),e=new Map;y(i,(()=>{Object.keys(r).forEach((t=>{e.set(t,i[t])}))}),(()=>{e.clear()}));const{componentDidRender:a}=i;i.componentDidRender=function(){a?.();const t=Array.from(e.keys());for(let a=0;a<t.length;a+=1){const n=t[a],h=e.get(n),r=i[n];h!==r&&(C(s,n,r,h),e.set(n,r))}}}(this),this.safeAdapterCall=function(i){const e=t(i),a=new Map,n=new u;let h=[],c=!1;function f(t){t?.stopImmediatePropagation(),c?(h=[],s((()=>{Object.keys(r).filter(o).forEach((t=>{i[t]=r[t]}))}))):c=!0}async function v(t){t.stopImmediatePropagation();const{by:e,prop:a,value:n}=t.detail;if(l(a)){if(!i.playbackStarted&&I.has(a)){const t=await i.adapter;"paused"!==a||n||t?.play(),"currentTime"===a&&(t?.play(),t?.setCurrentTime(n))}s((()=>{i[a]=n}))}else i.logger?.warn(`${e.nodeName} tried to change \`${a}\` but it is readonly.`)}const{onProviderDisconnect:p}=i;return i.onProviderDisconnect=function(){f(),p&&p.call(i)},y(i,(()=>{Object.keys(r).forEach((t=>{a.set(t,i[t])})),n.add(d(e,k,f)),n.add(d(e,w,v))}),(()=>{a.clear(),n.empty()})),g(i,"componentWillRender",(async()=>{i.playbackReady&&h.length>0&&await async function(){const t=await i.adapter;if(!m(t)){for(let i=0;i<h.length;i+=1)await h[i](t);h=[]}}()})),async function(t,s){if(!function(t,s){return s!==i[x]?.get(t)}(t,i[t]))return;const a=i[t],n=async t=>{try{await(t?.[s]?.(a))}catch(t){e.dispatchEvent(new CustomEvent("vmError",{detail:t}))}};i.playbackReady?await n(await i.adapter):h.push(n)}}(this)}get adapter(){return this.provider?.getAdapter()}onContainerChange(){this.fullscreen?.destroy(),m(this.container)||(this.fullscreen=new D(this.container,(t=>{this.isFullscreenActive=t,this.rotateDevice()})))}onPausedChange(){this.paused?this.playing=!1:function(i){const s=t(i);$.forEach((t=>{t!==s&&t.autopause&&(t.paused=!0)}))}(this),this.safeAdapterCall("paused",this.paused?"pause":"play")}onDurationChange(){this.isLive=this.duration===1/0}onCurrentTimeChange(){this.currentTime=Math.max(0,Math.min(this.currentTime,this.playbackReady?this.duration:1/0)),this.safeAdapterCall("currentTime","setCurrentTime")}onPlaybackReadyChange(){this.ready||(this.ready=!0)}onMutedChange(){this.safeAdapterCall("muted","setMuted")}async onPlaybackRateChange(t,i){if(t!==this.lastRateCheck){if(!await((await this.adapter)?.canSetPlaybackRate?.()))return this.logger.log("provider cannot change `playbackRate`."),this.lastRateCheck=i,void(this.playbackRate=i);if(!this.playbackRates.includes(t))return this.logger.log(`invalid \`playbackRate\` of ${t}, valid values are [${this.playbackRates.join(", ")}]`),this.lastRateCheck=i,void(this.playbackRate=i);this.lastRateCheck=t,this.safeAdapterCall("playbackRate","setPlaybackRate")}}async onPlaybackQualityChange(t,i){if(!m(t)&&t!==this.lastQualityCheck){if(!await((await this.adapter)?.canSetPlaybackQuality?.()))return this.logger.log("provider cannot change `playbackQuality`."),this.lastQualityCheck=i,void(this.playbackQuality=i);if(!this.playbackQualities.includes(t))return this.logger.log(`invalid \`playbackQuality\` of ${t}, valid values are [${this.playbackQualities.join(", ")}]`),this.lastQualityCheck=i,void(this.playbackQuality=i);this.lastQualityCheck=t,this.safeAdapterCall("playbackQuality","setPlaybackQuality")}}onDebugChange(){this.logger.silent=!this.debug}async onVolumeChange(){this.volume=Math.max(0,Math.min(this.volume,100)),this.safeAdapterCall("volume","setVolume")}onViewTypeChange(){this.isAudioView=this.viewType===P.Audio,this.isVideoView=this.viewType===P.Video}onMediaTypeChange(){this.isAudio=this.mediaType===T.Audio,this.isVideo=this.mediaType===T.Video}onLanguageChange(t,i){if(!this.languages.includes(this.language))return this.logger.log(`invalid \`language\` of ${this.language}, valid values are [${this.languages.join(", ")}]`),void(this.language=i);this.i18n=this.translations[this.language]}onTranslationsChange(){Object.assign(this.translations,{en:c}),this.languages=Object.keys(this.translations),this.i18n=this.translations[this.language]}onError(t){this.logger.warn(t.detail)}async getProvider(){return this.provider}async getAdapter(){return this.adapter}async play(){return(await this.adapter)?.play()}async pause(){return(await this.adapter)?.pause()}async canPlay(t){return(await this.adapter)?.canPlay(t)??!1}async canAutoplay(){return E()}async canMutedAutoplay(){return E(!0)}async canSetPlaybackRate(){return(await this.adapter)?.canSetPlaybackRate?.()??!1}async canSetPlaybackQuality(){return(await this.adapter)?.canSetPlaybackQuality?.()??!1}async canSetFullscreen(){return this.fullscreen.isSupported||((await this.adapter)?.canSetFullscreen?.()??!1)}async enterFullscreen(t){if(!this.isVideoView)throw Error("Cannot enter fullscreen on an audio player view.");if(this.fullscreen.isSupported)return this.fullscreen.enterFullscreen(t);if(await((await this.adapter)?.canSetFullscreen?.()))return(await this.adapter)?.enterFullscreen?.(t);throw Error("Fullscreen API is not available.")}async exitFullscreen(){return this.fullscreen.isSupported?this.fullscreen.exitFullscreen():(await this.adapter)?.exitFullscreen?.()}async canSetPiP(){return(await this.adapter)?.canSetPiP?.()??!1}async enterPiP(){if(!this.isVideoView)throw Error("Cannot enter PiP mode on an audio player view.");if(!await this.canSetPiP())throw Error("Picture-in-Picture API is not available.");return(await this.adapter)?.enterPiP?.()}async exitPiP(){return(await this.adapter)?.exitPiP?.()}async canSetAudioTrack(){return!m((await this.adapter)?.setCurrentAudioTrack)}async setCurrentAudioTrack(t){(await this.adapter)?.setCurrentAudioTrack?.(t)}async canSetTextTrack(){return!m((await this.adapter)?.setCurrentTextTrack)}async setCurrentTextTrack(t){(await this.adapter)?.setCurrentTextTrack?.(t)}async canSetTextTrackVisibility(){return!m((await this.adapter)?.setTextTrackVisibility)}async setTextTrackVisibility(t){(await this.adapter)?.setTextTrackVisibility?.(t)}async extendLanguage(t,i){const s={...this.translations,[t]:{...this.translations[t]??{},...i}};this.translations=s}connectedCallback(){this.onPausedChange(),this.onCurrentTimeChange(),this.onVolumeChange(),this.onMutedChange(),this.onDebugChange(),this.onContainerChange(),this.onTranslationsChange(),this.onLanguageChange(this.language,r.language),this.disposal.add(S((t=>{this.isMobile=t}))),this.disposal.add(R((t=>{this.isTouch=t})))}componentWillLoad(){!function(i,s){var e=t(i),a=new Map,n={wormholes:a,state:s};A.set(i,n);var h=i.connectedCallback;i.connectedCallback=function(){A.set(i,n),h&&h.call(i)};var r=i.disconnectedCallback;i.disconnectedCallback=function(){A.delete(i),r&&r.call(i)},e.addEventListener("openWormhole",(function(t){t.stopPropagation();var i=t.detail,s=i.consumer,e=i.onOpen;if(!a.has(s)){if("symbol"!=typeof s){var h=s.connectedCallback,r=s.disconnectedCallback;s.connectedCallback=function(){a.set(s,t.detail),h&&h.call(s)},s.disconnectedCallback=function(){a.delete(s),r&&r.call(s)}}a.set(s,t.detail),j(t.detail,n.state),null==e||e.resolve((function(){a.delete(s)}))}})),e.addEventListener("closeWormhole",(function(t){a.delete(t.detail)}))}(this,this.getPlayerState())}disconnectedCallback(){this.fullscreen?.destroy(),this.disposal.empty()}async rotateDevice(){if(this.isMobile&&M())try{this.isFullscreenActive?await window.screen.orientation.lock("landscape"):await window.screen.orientation.unlock()}catch(t){this.vmError.emit(t)}}getPlayerState(){const t={},i=Object.keys(r);for(let s=0;s<i.length;s+=1)t[i[s]]=this[i[s]];return t}calcAspectRatio(){const[t,i]=/\d{1,2}:\d{1,2}/.test(this.aspectRatio)?this.aspectRatio.split(":"):[16,9];return 100/Number(t)*Number(i)}async getContainer(){return this.container}async callAdapter(t,i){return(await this.adapter)[t](i)}hasCustomControls(){return p(this,"vm-controls")}genId(){const t=this.host?.id;return b(t)&&t.length>0?t:(O+=1,"vm-player-"+O)}render(){const t=(this.isAudioView?"Audio Player":"Video Player")+(m(this.mediaTitle)?"":" - "+this.mediaTitle),i=!V||!this.isVideoView||this.playsinline&&!this.isFullscreenActive;i||(this.controls=!0);const e=i&&this.hasCustomControls()&&this.isVideoView&&!this.paused&&!this.isControlsActive,a=!this.controls&&i&&this.isVideoView;return n(h,{id:this.genId(),idle:e,mobile:this.isMobile,touch:this.isTouch,live:this.isLive,audio:this.isAudioView,video:this.isVideoView,pip:this.isPiPActive,fullscreen:this.isFullscreenActive},n("div",{"aria-label":t,"aria-hidden":this.ready?"false":"true","aria-busy":this.playbackReady?"false":"true",class:{player:!0,idle:e,audio:this.isAudioView,video:this.isVideoView,fullscreen:this.isFullscreenActive},style:{paddingBottom:this.isVideoView?this.calcAspectRatio()+"%":void 0},ref:t=>{s((()=>{this.container=t}))}},a&&n("div",{class:"blocker"}),n(z,{state:this.getPlayerState()},n("slot",null))))}get host(){return t(this)}static get watchers(){return{container:["onContainerChange"],paused:["onPausedChange"],duration:["onDurationChange"],currentTime:["onCurrentTimeChange"],playbackReady:["onPlaybackReadyChange"],muted:["onMutedChange"],playbackRate:["onPlaybackRateChange"],playbackQuality:["onPlaybackQualityChange"],debug:["onDebugChange"],volume:["onVolumeChange"],viewType:["onViewTypeChange"],isAudioView:["onViewTypeChange"],isVideoView:["onViewTypeChange"],mediaType:["onMediaTypeChange"],language:["onLanguageChange"],translations:["onTranslationsChange"]}}};q.style=".player{box-sizing:border-box;direction:ltr;font-family:var(--vm-player-font-family);-moz-osx-font-smoothing:auto;-webkit-font-smoothing:subpixel-antialiased;-webkit-tap-highlight-color:transparent;font-variant-numeric:tabular-nums;font-weight:500;line-height:1.7;width:100%;display:block;max-width:100%;min-width:275px;min-height:40px;position:relative;text-shadow:none;outline:0;transition:box-shadow 0.3s ease;box-shadow:var(--vm-player-box-shadow);border-radius:var(--vm-player-border-radius)}.player.idle{cursor:none}.player.audio{background-color:transparent !important}.player.video{height:0;overflow:hidden;background-color:var(--vm-player-bg, #000)}.player.fullscreen{margin:0;border-radius:0;width:100%;height:100%;padding-bottom:0 !important}.blocker{position:absolute;top:0;left:0;width:100%;height:100%;display:inline-block;z-index:var(--vm-blocker-z-index)}";export{q as vm_player}