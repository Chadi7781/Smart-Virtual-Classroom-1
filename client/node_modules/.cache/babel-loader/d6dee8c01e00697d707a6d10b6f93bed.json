{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Class\\\\MemberComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Header, Icon, Image, Segment } from \"semantic-ui-react\";\nimport { AddclassApi, getclassApi, ClassInvitationApi } from \"../../api/api\";\nimport { fetchclass, fetchInvitationclassId, selectrequestclassId } from \"../../redux/slices/classsline\";\nimport AddUserToClassComponent from \"./AddUserToClassComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MemberComponent() {\n  _s();\n\n  var _classinvit$classUser;\n\n  const history = useHistory();\n  const [requestmembers, errr] = useSelector(selectrequestclassId);\n  const classinvit = JSON.parse(localStorage.getItem(\"idClass\"));\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchInvitationclassId(classinvit._id));\n  }, [dispatch]);\n\n  const Remove = async (idclass, email) => {\n    try {\n      const res = await AddclassApi.removeUserFromClass(idclass, email);\n      console.log(res);\n      const res2 = await getclassApi.getclassById(classinvit._id);\n      localStorage.setItem(\"idClass\", JSON.stringify(res2));\n      dispatch(fetchclass(documentData.role, documentData._id));\n      history.push(\"/members\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n  /*const RemoveInvitation = async (idq) => {\r\n    try {\r\n      const res = await ClassInvitationApi.deleteClassInvitation(idq);\r\n      dispatch(fetchInvitationclassId(classinvit._id));\r\n      } catch (error) {\r\n      alert(error);\r\n    }\r\n  };*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [classinvit.classOwner._id === documentData._id && /*#__PURE__*/_jsxDEV(AddUserToClassComponent, {\n      floated: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      icon: true,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"users\",\n        size: \"big\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \"Accounts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      raised: true,\n      color: \"red\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Header.Subheader, {\n          children: (_classinvit$classUser = classinvit.classUsers) === null || _classinvit$classUser === void 0 ? void 0 : _classinvit$classUser.map((co, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              stackable: true,\n              children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 1,\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    circular: true,\n                    size: \"mini\",\n                    src: co.picture\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 14,\n                  children: co.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 1,\n                  children: classinvit.classOwner._id === documentData._id ? /*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"delete\",\n                    size: \"tiny\",\n                    link: true,\n                    onClick: () => Remove(classinvit._id, co.email)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MemberComponent, \"y5ndrXRjH4bqtYCwPxP+zR09i0Q=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c = MemberComponent;\nexport default MemberComponent;\n/*\r\n <Header as=\"h2\" icon textAlign=\"center\">\r\n        <Icon name=\"add user\" size=\"big\" />\r\n        Pending Accounts\r\n      </Header>\r\n      <Segment raised color=\"orange\">\r\n        <div>\r\n          <Header.Subheader>\r\n            {requestmembers.userOb?.map((co, i) => (\r\n              <div key={i}>\r\n                <Grid stackable>\r\n                  <Grid.Row>\r\n                    <Grid.Column width={1}>\r\n                      <Image\r\n                        circular\r\n                        size=\"mini\"\r\n                        src={co.picture}\r\n                      />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={14}>{co.name}</Grid.Column>\r\n                    <Grid.Column width={1}> \r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </div>\r\n            ))}\r\n          </Header.Subheader>\r\n        </div>\r\n      </Segment>*/\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberComponent\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Class/MemberComponent.js"],"names":["React","useEffect","useDispatch","useSelector","useHistory","Grid","Header","Icon","Image","Segment","AddclassApi","getclassApi","ClassInvitationApi","fetchclass","fetchInvitationclassId","selectrequestclassId","AddUserToClassComponent","MemberComponent","history","requestmembers","errr","classinvit","JSON","parse","localStorage","getItem","documentData","dispatch","_id","Remove","idclass","email","res","removeUserFromClass","console","log","res2","getclassById","setItem","stringify","role","push","error","alert","classOwner","classUsers","map","co","i","picture","name"],"mappings":"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","sourcesContent":["import React , {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { AddclassApi, getclassApi,ClassInvitationApi } from \"../../api/api\";\r\nimport {\r\n  fetchclass,\r\n  fetchInvitationclassId,\r\n  selectrequestclassId,\r\n} from \"../../redux/slices/classsline\";\r\nimport AddUserToClassComponent from \"./AddUserToClassComponent\";\r\n\r\nfunction MemberComponent() {\r\n  const history = useHistory();\r\n  const [requestmembers, errr] = useSelector(selectrequestclassId);\r\n  const classinvit = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchInvitationclassId(classinvit._id));\r\n  }, [dispatch]);\r\n  const Remove = async (idclass, email) => {\r\n    try {\r\n      const res = await AddclassApi.removeUserFromClass(idclass, email);\r\n      console.log(res);\r\n      const res2 = await getclassApi.getclassById(classinvit._id);\r\n      localStorage.setItem(\"idClass\", JSON.stringify(res2));\r\n      dispatch(fetchclass(documentData.role, documentData._id));\r\n      history.push(\"/members\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  /*const RemoveInvitation = async (idq) => {\r\n    try {\r\n      const res = await ClassInvitationApi.deleteClassInvitation(idq);\r\n      dispatch(fetchInvitationclassId(classinvit._id));\r\n\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };*/\r\n  return (\r\n    <div>\r\n      {classinvit.classOwner._id === documentData._id && (\r\n        <AddUserToClassComponent floated=\"right\" />\r\n      )}\r\n      <Header as=\"h2\" icon textAlign=\"center\">\r\n        <Icon name=\"users\" size=\"big\" />\r\n        Accounts\r\n      </Header>\r\n      <Segment raised color=\"red\">\r\n        <div>\r\n          <Header.Subheader>\r\n            {classinvit.classUsers?.map((co, i) => (\r\n              <div key={i}>\r\n                <Grid stackable>\r\n                  <Grid.Row>\r\n                    <Grid.Column width={1}>\r\n                      <Image\r\n                        circular\r\n                        size=\"mini\"\r\n                        src={co.picture}\r\n                      />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={14}>{co.name}</Grid.Column>\r\n                    <Grid.Column width={1}>\r\n                      {classinvit.classOwner._id === documentData._id ? (\r\n                        <Icon\r\n                          name=\"delete\"\r\n                          size=\"tiny\"\r\n                          link\r\n                          onClick={() => Remove(classinvit._id, co.email)}\r\n                        />\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </div>\r\n            ))}\r\n          </Header.Subheader>\r\n        </div>\r\n      </Segment>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemberComponent;\r\n/*\r\n <Header as=\"h2\" icon textAlign=\"center\">\r\n        <Icon name=\"add user\" size=\"big\" />\r\n        Pending Accounts\r\n      </Header>\r\n      <Segment raised color=\"orange\">\r\n        <div>\r\n          <Header.Subheader>\r\n            {requestmembers.userOb?.map((co, i) => (\r\n              <div key={i}>\r\n                <Grid stackable>\r\n                  <Grid.Row>\r\n                    <Grid.Column width={1}>\r\n                      <Image\r\n                        circular\r\n                        size=\"mini\"\r\n                        src={co.picture}\r\n                      />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={14}>{co.name}</Grid.Column>\r\n                    <Grid.Column width={1}> \r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </div>\r\n            ))}\r\n          </Header.Subheader>\r\n        </div>\r\n      </Segment>*/"]},"metadata":{},"sourceType":"module"}