{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\UncorrectedTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactPlayer from \"react-player\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Button, Card, Grid, Header, Icon, Image, Input, Loader, Segment } from 'semantic-ui-react';\nimport { isAuth } from '../../helpers/auth';\nimport { assignGradeToStudent } from '../../redux/slices/Grade';\nimport { getDetailTask } from '../../redux/slices/Task';\nimport CorrectedTask from './CorrectedTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UncorrectedTask(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [grade, setGrade] = useState();\n  const [_id, setIdTask] = useState();\n  const [objgrade, setObjGrade] = useState({\n    \"_id\": null,\n    \"grade\": null\n  });\n\n  const submitGrade = (e, data) => {\n    setObjGrade({\n      \"_id\": data,\n      \"grade\": e.target.value\n    });\n    console.log(objgrade);\n  };\n\n  const dispatch = useDispatch();\n\n  const assignGrade = () => {\n    dispatch(assignGradeToStudent(objgrade)).then(() => {\n      dispatch(getDetailTask(id));\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getDetailTask(id));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card.Group, {\n      children: props.uncorrectTasks.length <= 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" vide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 57\n      }, this) : props.uncorrectTasks.map((task, index) => task.grade === null ? /*#__PURE__*/_jsxDEV(Card, {\n        color: \"red\",\n        raised: true,\n        children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            floated: \"right\",\n            size: \"mini\",\n            src: task.student.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n            children: task.student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: task.taskStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: \"File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"grade\",\n            type: \"number\",\n            size: \"mini\",\n            onChange: e => submitGrade(e, task._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            onClick: () => assignGrade(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UncorrectedTask, \"k8G1MmIgH2gFB0o2whD3e1JTt4I=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = UncorrectedTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"UncorrectedTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/UncorrectedTask.js"],"names":["React","useEffect","useState","ReactPlayer","useDispatch","useSelector","useParams","Button","Card","Grid","Header","Icon","Image","Input","Loader","Segment","isAuth","assignGradeToStudent","getDetailTask","CorrectedTask","UncorrectedTask","props","id","grade","setGrade","_id","setIdTask","objgrade","setObjGrade","submitGrade","e","data","target","value","console","log","dispatch","assignGrade","then","uncorrectTasks","length","map","task","index","student","picture","name","taskStatus"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactPlayer from \"react-player\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router';\nimport { Button, Card, Grid, Header, Icon, Image, Input, Loader, Segment } from 'semantic-ui-react'\nimport { isAuth } from '../../helpers/auth';\nimport { assignGradeToStudent } from '../../redux/slices/Grade';\nimport { getDetailTask } from '../../redux/slices/Task';\nimport CorrectedTask from './CorrectedTask';\n\n\n\nexport default function UncorrectedTask(props) {\n  const {id} = useParams();\n    const [grade , setGrade] = useState();\n    const [_id, setIdTask] = useState();\n    const [objgrade , setObjGrade] =useState({\"_id\" : null , \"grade\" :null});\n\n    const submitGrade =   ( e ,data) => {\n        \n            setObjGrade({\"_id\" :data,\"grade\" : e.target.value });\n    \n  console.log(objgrade);\n    };\n    const  dispatch = useDispatch();\n\n    const assignGrade = () =>{\n  \n        dispatch(assignGradeToStudent(objgrade)).then(()=>{\n          dispatch(getDetailTask(id));\n        });\n        \n    }\n      \n    useEffect(() => {\n     \n      \n      dispatch(getDetailTask(id));\n    }, [id])\n\n    return (\n        <div>\n              <Card.Group>\n                  { props.uncorrectTasks.length<= 0  ? (<div> vide</div>)  : (\n\n props.uncorrectTasks.map((task,index) =>\n    task.grade ===null ? (\n  <Card key={index} color='red' raised>\n\n   \n\n    <Card.Content>\n      <Image\n        floated='right'\n        size='mini'\n        \n        src={task.student.picture}\n      />\n      <Card.Header>{task.student.name}\n   \n      </Card.Header>\n     \n      <Card.Meta >\n          <strong>{task.taskStatus}</strong>\n          \n  \n  </Card.Meta>\n      <Card.Description>\n  \n    File\n             \n\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n  \n    <Input\n   \n  name=\"grade\"\n   type=\"number\"\n  size='mini'\n  \n\n\nonChange={(e) => submitGrade(e , task._id)}\n\n\n/><Button color=\"red\" onClick={()=>assignGrade()} >Send</Button>\n    \n    </Card.Content>\n  </Card>\n    ): (\n      \n<></>\n    )) \n                   )}\n  \n  </Card.Group>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}