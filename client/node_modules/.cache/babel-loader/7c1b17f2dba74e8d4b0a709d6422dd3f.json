{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\authentification\\\\ModalChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Feed, Form, Header, Icon, Message, Modal } from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { ChangePassword } from \"../../redux/slices/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalChangePassword(pops) {\n  _s();\n\n  const [currentPass, setCurrentPass] = useState(\"\");\n  const [newPass, setnewPass] = useState(\"\");\n  const [confirmPass, setConfirmPass] = useState(\"\");\n  const [formClassName, SetFormClassName] = useState(\"\");\n  const [formSuccessMessage, SetFormSuccessMessage] = useState(\"\");\n  const [formErrorMessage, SetFormErrorMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleChangeCurrent = e => {\n    setCurrentPass(e.target.value);\n  };\n\n  const handleChangeNew = e => {\n    setnewPass(e.target.value);\n  };\n\n  const handleChangeConfirm = e => {\n    setConfirmPass(e.target.value);\n  };\n\n  const ResetPassword = () => {\n    if (newPass !== confirmPass) {\n      SetFormClassName(\"warning\");\n      SetFormErrorMessage(\"new password and confirm password didnt Match !\");\n    } else {\n      const obj = {\n        password: currentPass,\n        salt: isAuth().salt,\n        idUser: isAuth()._id,\n        newPassword: newPass\n      };\n      console.log(obj);\n      dispatch(ChangePassword(obj)).then(response => {\n        console.log(response);\n\n        if (response.payload.msg === \"Password Successfully Changed! you can login with your new password\") {\n          SetFormClassName(\"success\");\n          SetFormSuccessMessage(response.payload.msg);\n        } else {\n          SetFormClassName(\"warning\");\n          SetFormErrorMessage(response.payload.msg);\n        }\n      }).catch(err => {\n        if (err.response) {\n          if (err.response.data) {\n            SetFormClassName(\"warning\");\n            SetFormErrorMessage(err.response.msg);\n          }\n        } else {\n          SetFormClassName(\"warning\");\n          SetFormErrorMessage(\"Something wen wrong \" + err);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      trigger: /*#__PURE__*/_jsxDEV(Link, {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h6\",\n          icon: \"lock\",\n          content: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this),\n      dimmer: \"inverted\",\n      size: \"tiny\",\n      closeIcon: \"close\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Reset your password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: formClassName,\n          onSubmit: ResetPassword,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"CurrentPassword\",\n            type: \"password\",\n            placeholder: \"Current Password here ...\",\n            name: \"Titre\",\n            maxLength: \"40\",\n            required: true,\n            value: currentPass,\n            onChange: handleChangeCurrent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"NewPassword\",\n            type: \"password\",\n            placeholder: \" New Password here ...\",\n            name: \"Titre\",\n            maxLength: \"40\",\n            required: true,\n            value: newPass,\n            onChange: handleChangeNew\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"ConfirmNewPassword\",\n            type: \"password\",\n            placeholder: \"Confirm New Password here ...\",\n            name: \"Titre\",\n            maxLength: \"40\",\n            required: true,\n            value: confirmPass,\n            onChange: handleChangeConfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            success: true,\n            color: \"green\",\n            header: \"Nice one! \\uD83D\\uDE1B \\uD83D\\uDE1D\",\n            content: formSuccessMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            warning: true,\n            color: \"yellow\",\n            header: \"Woah! \\uD83D\\uDE31 \\uD83D\\uDE28\",\n            content: formErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"black\",\n            floated: \"right\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalChangePassword, \"sKUCsrCcEl7QIEkfUGpgMBm8c+U=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModalChangePassword;\nexport default ModalChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalChangePassword\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/authentification/ModalChangePassword.js"],"names":["React","useState","useDispatch","Link","Button","Feed","Form","Header","Icon","Message","Modal","isAuth","ChangePassword","ModalChangePassword","pops","currentPass","setCurrentPass","newPass","setnewPass","confirmPass","setConfirmPass","formClassName","SetFormClassName","formSuccessMessage","SetFormSuccessMessage","formErrorMessage","SetFormErrorMessage","dispatch","handleChangeCurrent","e","target","value","handleChangeNew","handleChangeConfirm","ResetPassword","obj","password","salt","idUser","_id","newPassword","console","log","then","response","payload","msg","catch","err","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Feed,\r\n  Form,\r\n  Header,\r\n  Icon,\r\n  Message,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport { ChangePassword } from \"../../redux/slices/User\";\r\n\r\nfunction ModalChangePassword(pops) {\r\n  const [currentPass, setCurrentPass] = useState(\"\");\r\n  const [newPass, setnewPass] = useState(\"\");\r\n  const [confirmPass, setConfirmPass] = useState(\"\");\r\n  const [formClassName, SetFormClassName] = useState(\"\");\r\n  const [formSuccessMessage, SetFormSuccessMessage] = useState(\"\");\r\n  const [formErrorMessage, SetFormErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const handleChangeCurrent = (e) => {\r\n    setCurrentPass(e.target.value);\r\n  };\r\n  const handleChangeNew = (e) => {\r\n    setnewPass(e.target.value);\r\n  };\r\n  const handleChangeConfirm = (e) => {\r\n    setConfirmPass(e.target.value);\r\n  };\r\n\r\n  const ResetPassword = () => {\r\n    if (newPass !== confirmPass) {\r\n      SetFormClassName(\"warning\");\r\n      SetFormErrorMessage(\"new password and confirm password didnt Match !\");\r\n    } else {\r\n      const obj = {\r\n        password: currentPass,\r\n        salt: isAuth().salt,\r\n        idUser: isAuth()._id,\r\n        newPassword: newPass,\r\n      };\r\n\r\n      console.log(obj);\r\n      dispatch(ChangePassword(obj))\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (\r\n            response.payload.msg ===\r\n            \"Password Successfully Changed! you can login with your new password\"\r\n          ) {\r\n            SetFormClassName(\"success\");\r\n            SetFormSuccessMessage(response.payload.msg);\r\n          } else {\r\n            SetFormClassName(\"warning\");\r\n            SetFormErrorMessage(response.payload.msg);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) {\r\n            if (err.response.data) {\r\n              SetFormClassName(\"warning\");\r\n              SetFormErrorMessage(err.response.msg);\r\n            }\r\n          } else {\r\n            SetFormClassName(\"warning\");\r\n            SetFormErrorMessage(\"Something wen wrong \" + err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        trigger={\r\n          <Link>\r\n            <Header as=\"h6\" icon=\"lock\" content=\"Change Password\" />\r\n          </Link>\r\n        }\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n      >\r\n        <Modal.Header>Reset your password </Modal.Header>\r\n        <Modal.Content>\r\n          <Form className={formClassName} onSubmit={ResetPassword}>\r\n            <Form.Input\r\n              label=\"CurrentPassword\"\r\n              type=\"password\"\r\n              placeholder={\"Current Password here ...\"}\r\n              name=\"Titre\"\r\n              maxLength=\"40\"\r\n              required\r\n              value={currentPass}\r\n              onChange={handleChangeCurrent}\r\n            />\r\n            <Form.Input\r\n              label=\"NewPassword\"\r\n              type=\"password\"\r\n              placeholder={\" New Password here ...\"}\r\n              name=\"Titre\"\r\n              maxLength=\"40\"\r\n              required\r\n              value={newPass}\r\n              onChange={handleChangeNew}\r\n            />\r\n            <Form.Input\r\n              label=\"ConfirmNewPassword\"\r\n              type=\"password\"\r\n              placeholder={\"Confirm New Password here ...\"}\r\n              name=\"Titre\"\r\n              maxLength=\"40\"\r\n              required\r\n              value={confirmPass}\r\n              onChange={handleChangeConfirm}\r\n            />\r\n            <Message\r\n              success\r\n              color=\"green\"\r\n              header=\"Nice one! 😛 😝\"\r\n              content={formSuccessMessage}\r\n            />\r\n            <Message\r\n              warning\r\n              color=\"yellow\"\r\n              header=\"Woah! 😱 😨\"\r\n              content={formErrorMessage}\r\n            />\r\n            <br />\r\n            <Button color=\"black\" floated=\"right\">\r\n              Update\r\n            </Button>\r\n            <br />\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default ModalChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}