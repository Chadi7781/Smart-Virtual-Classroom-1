{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Quiz\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Icon, Image, Button, Form, Segment, Progress, Container, Header, Divider } from 'semantic-ui-react';\nimport { isAuth } from '../../helpers/auth.js';\nimport { getListQuestionTasksById, assignGradeToStudent, getDetailByTaskByStudent } from '../../redux/slices/Grade.js';\nimport { getQuizzes } from \"../../redux/slices/Quiz.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const quizzes = useSelector(state => state.grades.listQuestion);\n  const grade = useSelector(state => state.grades.grade);\n  const [objgrade, setObjGrade] = useState({\n    \"_id\": null,\n    \"grade\": 0,\n    \"listReponse\": []\n  });\n  const [score, setScore] = useState(0);\n  const [cuurQuestion, setCurrQuestion] = useState(0);\n  const [optionChosen, setOptionChosen] = useState('');\n  const [listReponse] = useState([]);\n\n  const nextQuestion = () => {\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) setScore(score + 1);\n    setCurrQuestion(cuurQuestion + 1);\n    listReponse.push(optionChosen);\n    console.log(listReponse);\n    setOptionChosen(\"\");\n  };\n\n  console.log(quizzes);\n  const dispatch = useDispatch();\n\n  const handleResult = () => {\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) {\n      setScore(score + 1);\n    }\n\n    listReponse.push(optionChosen);\n    console.log(\"cchneee\");\n    console.log(listReponse);\n    dispatch(assignGradeToStudent({\n      \"_id\": id,\n      \"grade\": score,\n      \"listReponse\": listReponse\n    })).then(() => {\n      dispatch(getDetailByTaskByStudent(id));\n    });\n  };\n\n  const handleChosen = option => {\n    setOptionChosen(optionChosen != option ? option : \"\");\n  };\n\n  useEffect(() => {\n    // dispatch(getQuizzes());\n    dispatch(getListQuestionTasksById(id));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      raised: true,\n      children: [/*#__PURE__*/_jsxDEV(Progress, {\n        active: true,\n        color: \"red\",\n        percent: (1 + cuurQuestion) * 100 / quizzes.length,\n        attached: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), quizzes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", quizzes[cuurQuestion].fquestion + \"?\", \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", cuurQuestion + 1, \" of \", quizzes.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          section: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionA,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionA),\n          children: quizzes[cuurQuestion].foptionA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionB,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionB),\n          children: quizzes[cuurQuestion].foptionB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionC,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionC),\n          children: quizzes[cuurQuestion].foptionC\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionD,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionD),\n          children: quizzes[cuurQuestion].foptionD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          section: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), cuurQuestion == quizzes.length - 1 ? /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Result/\" + id,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleResult(),\n            animated: \"fade\",\n            children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n              visible: true,\n              children: \"Finish Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n              hidden: true,\n              children: \"View result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => nextQuestion(),\n              disabled: !optionChosen,\n              content: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 10\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Segment, {\n        loading: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No Qts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 38\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        active: true,\n        color: \"red\",\n        percent: (1 + cuurQuestion) * 100 / quizzes.length,\n        attached: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"bZKE0+LcJXcyRq9dJvGhls+D4gk=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Quiz/Quiz.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","Link","Icon","Image","Button","Form","Segment","Progress","Container","Header","Divider","isAuth","getListQuestionTasksById","assignGradeToStudent","getDetailByTaskByStudent","getQuizzes","Quiz","id","quizzes","state","grades","listQuestion","grade","objgrade","setObjGrade","score","setScore","cuurQuestion","setCurrQuestion","optionChosen","setOptionChosen","listReponse","nextQuestion","correct_answer","push","console","log","dispatch","handleResult","then","handleChosen","option","length","fquestion","foptionA","foptionB","foptionC","foptionD"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport {Icon, Image,Button, Form, Segment,Progress, Container,Header, Divider} from 'semantic-ui-react';\r\nimport { isAuth } from '../../helpers/auth.js';\r\nimport { getListQuestionTasksById,assignGradeToStudent, getDetailByTaskByStudent } from '../../redux/slices/Grade.js';\r\nimport { getQuizzes } from \"../../redux/slices/Quiz.js\";\r\n\r\n\r\nexport default function Quiz() {\r\n\r\n  const {id} = useParams();\r\n  const quizzes = useSelector( state => state.grades.listQuestion);\r\n  const grade = useSelector( state => state.grades.grade);\r\n  const [objgrade , setObjGrade] =useState({\"_id\" : null , \"grade\" :0,\"listReponse\":[]})\r\n     const [score,setScore] = useState(0);\r\n    const [cuurQuestion,setCurrQuestion] = useState(0);\r\n    const [optionChosen,setOptionChosen]= useState('');\r\n    const [listReponse] = useState([]);\r\n\r\n   \r\n    const nextQuestion = () =>{\r\n   \r\n      if(optionChosen===quizzes[cuurQuestion].correct_answer)\r\n  setScore(score+1);\r\n      setCurrQuestion(cuurQuestion+1);\r\n      listReponse.push(optionChosen);\r\nconsole.log(listReponse);\r\n      setOptionChosen(\"\")\r\n    \r\n  \r\n      \r\n    }\r\n    console.log(quizzes)\r\n    const dispatch = useDispatch();\r\n    const handleResult = () =>{\r\n      if(optionChosen===quizzes[cuurQuestion].correct_answer){\r\n        setScore(score+1);\r\n      }\r\n\r\n     \r\n      \r\n      listReponse.push(optionChosen);\r\n        console.log(\"cchneee\");\r\n        console.log(listReponse);\r\n\r\n      dispatch(assignGradeToStudent({\"_id\" :id,\"grade\" : score,\"listReponse\" : listReponse })).then(()=>{\r\n        dispatch(getDetailByTaskByStudent(id));\r\n      });\r\n\r\n   \r\n    \r\n    }\r\nconst handleChosen = (option) =>{\r\n \r\n\r\n  setOptionChosen(optionChosen!= option ? option  : \"\")\r\n\r\n\r\n  \r\n\r\n  \r\n}\r\n\r\n useEffect(()=>{\r\n  \r\n // dispatch(getQuizzes());\r\n dispatch(getListQuestionTasksById(id));\r\n },[id]);\r\n\r\n    return (\r\n   \r\n        <div className=\"Quiz\" >\r\n   \r\n    \r\n<Divider hidden />\r\n     <Segment raised>\r\n     \r\n         <Progress active color=\"red\" percent={(1+cuurQuestion)*100/quizzes.length} attached='top' />\r\n  \r\n                {\r\n                quizzes.length>0 ? (\r\n               \r\n                  <div>\r\n              \r\n                <h1> {quizzes[cuurQuestion].fquestion+\"?\"}   </h1>\r\n                <p>Question { cuurQuestion+1} of { quizzes.length}</p>\r\n                <Divider section />\r\n   \r\n    \r\n    <Button size=\"big\"fluid basic={optionChosen!=quizzes[cuurQuestion].foptionA} color='grey' onClick={()=>handleChosen(quizzes[cuurQuestion].foptionA)}>{quizzes[cuurQuestion].foptionA}</Button>\r\n    <Divider hidden />\r\n    <br/>\r\n        <Button size=\"big\"  fluid basic={optionChosen!=quizzes[cuurQuestion].foptionB} color='grey' onClick={()=>handleChosen(quizzes[cuurQuestion].foptionB)}>{quizzes[cuurQuestion].foptionB}</Button>\r\n      \r\n <br/>\r\n        <Divider hidden />\r\n   \r\n        \r\n        <Button size=\"big\" fluid basic={optionChosen!=quizzes[cuurQuestion].foptionC} color='grey' onClick={()=>handleChosen(quizzes[cuurQuestion].foptionC)}>{quizzes[cuurQuestion].foptionC}</Button>\r\n        <Divider hidden />\r\n        <br/>\r\n        <Button size=\"big\" fluid basic={optionChosen!=quizzes[cuurQuestion].foptionD} color='grey' onClick={()=>handleChosen(quizzes[cuurQuestion].foptionD)}>{quizzes[cuurQuestion].foptionD}</Button>\r\n    \r\n      <Divider section />\r\n      {cuurQuestion == quizzes.length-1 ? (\r\n        <Link to={\"/Result/\"+id}>\r\n        <Button onClick={()=>handleResult()} animated='fade'>\r\n         <Button.Content visible>Finish Quiz</Button.Content>\r\n      <Button.Content hidden>View result</Button.Content>\r\n        </Button>\r\n        </Link>\r\n      ) :(\r\n        <>\r\n         <Button.Group>\r\n        <Button onClick={()=>nextQuestion()} disabled={!optionChosen} content='Continue'/> \r\n        \r\n        </Button.Group>\r\n        </>\r\n      )}\r\n   \r\n     \r\n                </div>\r\n                    \r\n                  \r\n                 \r\n    \r\n         \r\n                ) : <Segment loading><h1>No Qts</h1> </Segment>\r\n                }\r\n          \r\n          <Progress   active  color=\"red\" percent={(1+cuurQuestion)*100/quizzes.length} attached='bottom' />\r\n          </Segment>\r\n    \r\n        </div>\r\n       \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}