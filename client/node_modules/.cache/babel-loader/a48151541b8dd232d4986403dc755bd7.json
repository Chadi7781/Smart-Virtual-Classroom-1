{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\authentification\\\\UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Checkbox, Divider, Form, Grid, GridColumn, Header, Icon, Image, Message } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ModalChangeProfilePicture from \"./ModalChangeProfilePicture\";\nimport axios from \"axios\";\nimport { getCookie, isAuth, setLocalStorage } from \"../../helpers/auth\";\nimport { getUserById, UpdateUserState } from \"../../redux/slices/User\";\nimport { useParams } from \"react-router\";\nimport ModalChangePassword from \"./ModalChangePassword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateProfile() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [linkedIn, setLinkedIn] = useState(\"\");\n  const [github, setGithub] = useState(\"\");\n  const [formSuccessMessage, setFormSuccessMessage] = useState(\"\");\n  const [formClassName, SetFormClassName] = useState(\"\");\n  const Resources = useSelector(state => state.user.Resources);\n  const userById = useSelector(state => state.user.UserById);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUserById(id)).then(res => {\n      console.log(res.payload);\n      setName(res.payload.name);\n      setEmail(res.payload.email);\n\n      if (res.payload.bio) {\n        setBio(res.payload.bio);\n      }\n\n      if (res.payload.linkedInUrl) {\n        setLinkedIn(res.payload.linkedInUrl);\n      }\n\n      if (res.payload.GithubUrl) {\n        setGithub(res.payload.GithubUrl);\n      }\n    });\n    console.log(userById);\n  }, []);\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleBioChange = e => {\n    setBio(e.target.value);\n  };\n\n  const handleLinkedInChange = e => {\n    setLinkedIn(e.target.value);\n  };\n\n  const handleGithubChange = e => {\n    setGithub(e.target.value);\n    console.log(Resources);\n  };\n\n  const updateProfile = () => {\n    axios.put(`${process.env.REACT_APP_API_URL}/api/user/updateProfile/${isAuth()._id}`, {\n      name: name,\n      bio: bio,\n      linkedInUrl: linkedIn,\n      GithubUrl: github,\n      picture: Resources\n    }).then(res => {\n      console.log(res.data);\n      dispatch(UpdateUserState());\n      setLocalStorage(\"user\", res.data.result);\n      setFormSuccessMessage(\"Your profile was updated successfully !\");\n      SetFormClassName(\"success\");\n    }).catch(err => {\n      console.log(err);\n      setFormSuccessMessage(\"Something went wrong !!\");\n      SetFormClassName(\"warning\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      dividing: true,\n      children: \"Profile Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      doubling: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            className: formClassName,\n            children: [/*#__PURE__*/_jsxDEV(Message, {\n              success: true,\n              color: \"green\",\n              header: \"Nice one! \\uD83D\\uDE1B \\uD83D\\uDE1D\",\n              content: formSuccessMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              warning: true,\n              color: \"red\",\n              header: \"Woah! \\uD83D\\uDE31 \\uD83D\\uDE28\",\n              content: formSuccessMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              label: \"Full Name\",\n              type: \"text\",\n              placeholder: \"Mr Foulen\",\n              name: \"Full Name\",\n              maxLength: \"40\",\n              required: true,\n              value: name,\n              onChange: handleNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              label: \"Email\",\n              type: \"text\",\n              placeholder: \"example@example.fr\",\n              name: \"Email\",\n              maxLength: \"40\",\n              icon: \"mail\",\n              iconPosition: \"right\",\n              required: true,\n              readOnly: true,\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n              label: \"Bio\",\n              type: \"text\",\n              placeholder: \"Tell us about your self ...\",\n              name: \"Bio\",\n              maxLength: \"5000\",\n              value: bio,\n              onChange: handleBioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              label: \"LinkedIn URL\",\n              type: \"text\",\n              icon: \"linkedin\",\n              iconPosition: \"right\",\n              placeholder: \"your LinkedIn account Link\",\n              name: \"LinkedIn URL\",\n              maxLength: \"40\",\n              value: linkedIn,\n              onChange: handleLinkedInChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              label: \"Github URL\",\n              type: \"text\",\n              icon: \"github\",\n              iconPosition: \"right\",\n              placeholder: \"your Github account Link\",\n              name: \"Github URL\",\n              maxLength: \"40\",\n              value: github,\n              onChange: handleGithubChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalChangePassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            warning: true,\n            children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n              children: \"why is it important to change passwords regularly ? \\uD83E\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"It can be difficult to figure out if someone else is using your account, so by changing your password consistently, you reduce the risk that other people will have frequent access to your accounts.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            floated: \"center\",\n            onClick: updateProfile,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), \"Update\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          vertical: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            as: \"h3\",\n            dividing: true,\n            children: \"Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalChangeProfilePicture, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            color: \"grey\",\n            children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n              children: \"Why profile picture is important ? \\uD83E\\uDDD0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"One is to help other people to identify you. Another is to help you express yourself\\u2026 and to help others to develop the right impression of you\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateProfile, \"hAdI6BlwSSXDf2rumKnZAOCjhVw=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/authentification/UpdateProfile.js"],"names":["React","useState","useEffect","Button","Checkbox","Divider","Form","Grid","GridColumn","Header","Icon","Image","Message","useSelector","useDispatch","ModalChangeProfilePicture","axios","getCookie","isAuth","setLocalStorage","getUserById","UpdateUserState","useParams","ModalChangePassword","UpdateProfile","id","name","setName","email","setEmail","bio","setBio","linkedIn","setLinkedIn","github","setGithub","formSuccessMessage","setFormSuccessMessage","formClassName","SetFormClassName","Resources","state","user","userById","UserById","dispatch","then","res","console","log","payload","linkedInUrl","GithubUrl","handleNameChange","e","target","value","handleBioChange","handleLinkedInChange","handleGithubChange","updateProfile","put","process","env","REACT_APP_API_URL","_id","picture","data","result","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  GridColumn,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ModalChangeProfilePicture from \"./ModalChangeProfilePicture\";\r\nimport axios from \"axios\";\r\nimport { getCookie, isAuth, setLocalStorage } from \"../../helpers/auth\";\r\nimport { getUserById, UpdateUserState } from \"../../redux/slices/User\";\r\nimport { useParams } from \"react-router\";\r\nimport ModalChangePassword from \"./ModalChangePassword\";\r\n\r\nfunction UpdateProfile() {\r\n  const { id } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [linkedIn, setLinkedIn] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const [formSuccessMessage, setFormSuccessMessage] = useState(\"\");\r\n  const [formClassName, SetFormClassName] = useState(\"\");\r\n  const Resources = useSelector((state) => state.user.Resources);\r\n  const userById = useSelector((state) => state.user.UserById);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUserById(id)).then((res) => {\r\n      console.log(res.payload);\r\n      setName(res.payload.name);\r\n      setEmail(res.payload.email);\r\n      if (res.payload.bio) {\r\n        setBio(res.payload.bio);\r\n      }\r\n      if (res.payload.linkedInUrl) {\r\n        setLinkedIn(res.payload.linkedInUrl);\r\n      }\r\n      if (res.payload.GithubUrl) {\r\n        setGithub(res.payload.GithubUrl);\r\n      }\r\n    });\r\n\r\n    console.log(userById);\r\n  }, []);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleBioChange = (e) => {\r\n    setBio(e.target.value);\r\n  };\r\n  const handleLinkedInChange = (e) => {\r\n    setLinkedIn(e.target.value);\r\n  };\r\n  const handleGithubChange = (e) => {\r\n    setGithub(e.target.value);\r\n    console.log(Resources);\r\n  };\r\n\r\n  const updateProfile = () => {\r\n    axios\r\n      .put(\r\n        `${process.env.REACT_APP_API_URL}/api/user/updateProfile/${\r\n          isAuth()._id\r\n        }`,\r\n        {\r\n          name: name,\r\n          bio: bio,\r\n          linkedInUrl: linkedIn,\r\n          GithubUrl: github,\r\n          picture: Resources,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch(UpdateUserState());\r\n        setLocalStorage(\"user\", res.data.result);\r\n        setFormSuccessMessage(\"Your profile was updated successfully !\");\r\n        SetFormClassName(\"success\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setFormSuccessMessage(\"Something went wrong !!\");\r\n        SetFormClassName(\"warning\");\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Header as=\"h1\" dividing>\r\n        Profile Update\r\n      </Header>\r\n      <br />\r\n      <Grid doubling>\r\n        <Grid.Row>\r\n          <Grid.Column width={10}>\r\n            <Form className={formClassName}>\r\n              <Message\r\n                success\r\n                color=\"green\"\r\n                header=\"Nice one! 😛 😝\"\r\n                content={formSuccessMessage}\r\n              />\r\n              <Message\r\n                warning\r\n                color=\"red\"\r\n                header=\"Woah! 😱 😨\"\r\n                content={formSuccessMessage}\r\n              />\r\n              <Form.Input\r\n                label=\"Full Name\"\r\n                type=\"text\"\r\n                placeholder={\"Mr Foulen\"}\r\n                name=\"Full Name\"\r\n                maxLength=\"40\"\r\n                required\r\n                value={name}\r\n                onChange={handleNameChange}\r\n              />\r\n              <Form.Input\r\n                label=\"Email\"\r\n                type=\"text\"\r\n                placeholder={\"example@example.fr\"}\r\n                name=\"Email\"\r\n                maxLength=\"40\"\r\n                icon=\"mail\"\r\n                iconPosition=\"right\"\r\n                required\r\n                readOnly\r\n                value={email}\r\n              />\r\n              <Form.TextArea\r\n                label=\"Bio\"\r\n                type=\"text\"\r\n                placeholder=\"Tell us about your self ...\"\r\n                name=\"Bio\"\r\n                maxLength=\"5000\"\r\n                value={bio}\r\n                onChange={handleBioChange}\r\n              />\r\n\r\n              <Form.Input\r\n                label=\"LinkedIn URL\"\r\n                type=\"text\"\r\n                icon=\"linkedin\"\r\n                iconPosition=\"right\"\r\n                placeholder={\"your LinkedIn account Link\"}\r\n                name=\"LinkedIn URL\"\r\n                maxLength=\"40\"\r\n                value={linkedIn}\r\n                onChange={handleLinkedInChange}\r\n              />\r\n              <Form.Input\r\n                label=\"Github URL\"\r\n                type=\"text\"\r\n                icon=\"github\"\r\n                iconPosition=\"right\"\r\n                placeholder={\"your Github account Link\"}\r\n                name=\"Github URL\"\r\n                maxLength=\"40\"\r\n                value={github}\r\n                onChange={handleGithubChange}\r\n              />\r\n            </Form>\r\n            <br />\r\n            <br />\r\n            <ModalChangePassword></ModalChangePassword>\r\n\r\n            <Message warning>\r\n              <Message.Header>\r\n                why is it important to change passwords regularly ? 🤔\r\n              </Message.Header>\r\n              <p>\r\n                It can be difficult to figure out if someone else is using your\r\n                account, so by changing your password consistently, you reduce\r\n                the risk that other people will have frequent access to your\r\n                accounts.\r\n              </p>\r\n            </Message>\r\n            <br />\r\n\r\n            <Button color=\"red\" floated=\"center\" onClick={updateProfile}>\r\n              <Icon name=\"edit\"></Icon>\r\n              Update\r\n            </Button>\r\n          </Grid.Column>\r\n          <Divider vertical></Divider>\r\n          <Grid.Column width={6}>\r\n            <Header as=\"h3\" dividing>\r\n              Profile Picture\r\n            </Header>\r\n            <ModalChangeProfilePicture></ModalChangeProfilePicture>\r\n\r\n            <Message color=\"grey\">\r\n              <Message.Header>\r\n                Why profile picture is important ? 🧐\r\n              </Message.Header>\r\n              <p>\r\n                One is to help other people to identify you. Another is to help\r\n                you express yourself… and to help others to develop the right\r\n                impression of you\r\n              </p>\r\n            </Message>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n"]},"metadata":{},"sourceType":"module"}