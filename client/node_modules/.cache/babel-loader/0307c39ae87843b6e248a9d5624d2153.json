{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TaskFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dropzone from \"react-dropzone-uploader\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport { Button, Divider } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport { addUploadFile, uploadFile } from '../../redux/slices/Task';\nimport { useDispatch } from 'react-redux';\nimport FileUpload from '../../utlis/FileUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskFile(props) {\n  _s();\n\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator\n  });\n  const [Images, setImages] = useState([]);\n  const [enableUpload, setEnableUpload] = useState(false);\n  const [file] = useState(false);\n\n  const updateImages = newImages => {\n    setImages(newImages);\n  };\n\n  var step = 2;\n\n  const onclicNext = () => {\n    setEnableUpload(true);\n    props.addTask(tasks.listQuestion = Images);\n    props.addTask(tasks);\n    console.log(enableUpload);\n    props.nextStep(step + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FileUpload, {\n        refreshFunction: updateImages,\n        listfile: null,\n        Enbale: file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"red\",\n      type: \"submit\",\n      floated: \"right\",\n      onClick: () => onclicNext(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskFile, \"LSGa3aeSoMKE7o0nJqLFwUxPOLY=\");\n\n_c = TaskFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFile\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TaskFile.js"],"names":["React","useState","Dropzone","Button","Divider","axios","addUploadFile","uploadFile","useDispatch","FileUpload","TaskFile","props","tasks","setTask","title","data","description","theme","typeTask","listQuestion","listStudents","endDate","creator","Images","setImages","enableUpload","setEnableUpload","file","updateImages","newImages","step","onclicNext","addTask","console","log","nextStep"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAO,yCAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,yBAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,KAAD,EAASC,OAAT,IAAoBZ,QAAQ,CAAC;AAE/Ba,IAAAA,KAAK,EAAGH,KAAK,CAACI,IAAN,CAAWD,KAFY;AAG/BE,IAAAA,WAAW,EAAGL,KAAK,CAACI,IAAN,CAAWC,WAHM;AAI/BC,IAAAA,KAAK,EAAGN,KAAK,CAACI,IAAN,CAAWE,KAJY;AAK/BC,IAAAA,QAAQ,EAAGP,KAAK,CAACI,IAAN,CAAWG,QALS;AAM/BC,IAAAA,YAAY,EAAGR,KAAK,CAACI,IAAN,CAAWI,YANK;AAO/BC,IAAAA,YAAY,EAAGT,KAAK,CAACI,IAAN,CAAWK,YAPK;AAQ/BC,IAAAA,OAAO,EAAGV,KAAK,CAACI,IAAN,CAAWM,OARU;AAS/BC,IAAAA,OAAO,EAAGX,KAAK,CAACI,IAAN,CAAWO;AATU,GAAD,CAAlC;AAaA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC0B,IAAD,IAAS1B,QAAQ,CAAC,KAAD,CAAvB;;AACF,QAAM2B,YAAY,GAAIC,SAAD,IAAe;AAElCL,IAAAA,SAAS,CAACK,SAAD,CAAT;AAGD,GALD;;AAOE,MAAIC,IAAI,GAAC,CAAT;;AACA,QAAMC,UAAU,GAAG,MAAM;AAEvBL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAf,IAAAA,KAAK,CAACqB,OAAN,CAAcpB,KAAK,CAACO,YAAN,GAAqBI,MAAnC;AACAZ,IAAAA,KAAK,CAACqB,OAAN,CAAcpB,KAAd;AAIAqB,IAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACEd,IAAAA,KAAK,CAACwB,QAAN,CAAeL,IAAI,GAAC,CAApB;AAED,GAXH;;AAaA,sBACI;AAAA,4BACE;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,eAAe,EAAEF,YAA7B;AAA2C,QAAA,QAAQ,EAAE,IAArD;AAA2D,QAAA,MAAM,EAAED;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAKC,QAAC,OAAD;AAAS,MAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,YALD,eAMN,QAAC,MAAD;AAEU,MAAA,KAAK,EAAC,KAFhB;AAGY,MAAA,IAAI,EAAC,QAHjB;AAIY,MAAA,OAAO,EAAC,OAJpB;AAKY,MAAA,OAAO,EAAE,MAAII,UAAU,EALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANM;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAxDuBrB,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from 'react'\nimport Dropzone from \"react-dropzone-uploader\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport { Button, Divider } from 'semantic-ui-react';\nimport axios from \"axios\"\nimport { addUploadFile, uploadFile } from '../../redux/slices/Task';\nimport { useDispatch } from 'react-redux';\nimport FileUpload from '../../utlis/FileUpload';\n\nexport default function TaskFile(props) {\n\n    const [tasks , setTask] = useState({\n           \n        title : props.data.title,\n        description : props.data.description,\n        theme : props.data.theme,\n        typeTask : props.data.typeTask,\n        listQuestion : props.data.listQuestion,\n        listStudents : props.data.listStudents,\n        endDate : props.data.endDate,\n        creator : props.data.creator\n     \n    });\n\n    const [Images, setImages] = useState([]);\n\n    const [enableUpload, setEnableUpload] = useState(false);\n    const [file] = useState(false)\n  const updateImages = (newImages) => {\n  \n    setImages(newImages);\n    \n   \n  };\n  \n    var step=2;\n    const onclicNext = () => {  \n     \n      setEnableUpload(true);\n      props.addTask(tasks.listQuestion = Images);\n      props.addTask(tasks);\n      \n     \n\n      console.log(enableUpload);\n        props.nextStep(step+1);\n\n      }\n \n    return (\n        <div>\n          <div>       \n              <FileUpload refreshFunction={updateImages} listfile={null} Enbale={file}/>\n          </div>\n \n         <Divider hidden></Divider>\n  <Button\n      \n            color=\"red\"\n              type=\"submit\" \n              floated='right'\n              onClick={()=>onclicNext()}\n             >Next</Button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}