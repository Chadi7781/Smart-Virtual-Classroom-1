{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TaskQuizDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\nimport { Button, Card, Container, Divider, Grid, Header, Icon, Image, List, Message, Modal } from \"semantic-ui-react\";\nimport { getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\nimport CommentComponent from \"../Comment/CommentComponent\";\nimport ModalTask from \"./ModalTask\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskQuizDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const state = useSelector(state => state.grades.grades); //const files = useSelector((state) => state.tasks.files);\n\n  const [task, setTask] = useState(state[0]);\n  const grade = {\n    id: id,\n    taskStatus: \"remis\" //  listReponse: files,\n\n  };\n  const dispatch = useDispatch();\n\n  const submitTask = () => {\n    console.log(\"grade : \");\n    console.log(grade);\n    dispatch(rendreTask(grade)).then(() => {\n      dispatch(getDetailByTaskByStudent(id)).then(response => {\n        setTask(response.payload[0]);\n      });\n    });\n  }; // console.log(task);\n\n\n  useEffect(() => {\n    dispatch(getDetailByTaskByStudent(id)).then(response => {\n      setTask(response.payload[0]);\n    });\n    console.log(task);\n  }, []);\n  const [openModal, setOpenModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !task ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 14,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 12,\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h1\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    circular: true,\n                    name: \"file alternate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                    children: [task.task.title, /*#__PURE__*/_jsxDEV(Header.Subheader, {\n                      children: /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                        date: task.task.DateAt,\n                        locale: \"en-US\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Container, {\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: task.task.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(CommentComponent, {\n                  taskID: task._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: \"Your Task\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                      children: task.taskStatus === \"Remis\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(Message, {\n                          positive: true,\n                          children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                            children: \"Task Added Succesfully\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\" \", /*#__PURE__*/_jsxDEV(Message, {\n                          header: \"Upload Your File Here \",\n                          content: \"Good Luck For your assignment\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 110,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                    extra: true,\n                    children: /*#__PURE__*/_jsxDEV(Modal, {\n                      trigger: task.taskStatus === \"Remis\" ? /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"/Result/\" + task._id,\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => setOpenModal(true),\n                          color: \"red\",\n                          compact: true,\n                          fluid: true,\n                          content: \"View Result\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 40\n                        }, this), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 9\n                      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => setOpenModal(true),\n                        color: \"red\",\n                        compact: true,\n                        fluid: true,\n                        content: \"Start Quiz\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 15\n                      }, this),\n                      dimmer: \"inverted\",\n                      size: \"tiny\",\n                      closeIcon: \"close\",\n                      open: openModal,\n                      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                        children: \"Quiz \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 11\n                      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"Once you start this Quiz you will no longer be able to do this Quiz Again.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 13\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 9\n                      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n                        children: [/*#__PURE__*/_jsxDEV(Link, {\n                          to: \"/TaskQuiz/\" + task._id,\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            color: \"red\",\n                            children: \"Start\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 145,\n                            columnNumber: 11\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 144,\n                          columnNumber: 11\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          color: \"black\",\n                          onClick: () => setOpenModal(false),\n                          children: \"Back\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 11\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 7\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskQuizDetail, \"mIO2yLZdN0Alw8FLUMTc8ms9HuM=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = TaskQuizDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskQuizDetail\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TaskQuizDetail.js"],"names":["React","useEffect","useState","ReactPlayer","useDispatch","useSelector","useParams","Link","ReactTimeAgo","Button","Card","Container","Divider","Grid","Header","Icon","Image","List","Message","Modal","getDetailByTaskByStudent","rendreTask","CommentComponent","ModalTask","TaskQuizDetail","id","state","grades","task","setTask","grade","taskStatus","dispatch","submitTask","console","log","then","response","payload","openModal","setOpenModal","title","DateAt","description","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Message,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\r\nimport CommentComponent from \"../Comment/CommentComponent\";\r\nimport ModalTask from \"./ModalTask\";\r\n\r\nexport default function TaskQuizDetail() {\r\n  const { id } = useParams();\r\n  const state = useSelector((state) => state.grades.grades);\r\n  //const files = useSelector((state) => state.tasks.files);\r\n  const [task ,setTask] = useState(state[0]);\r\n\r\n  const grade = {\r\n    id: id,\r\n    taskStatus: \"remis\",\r\n  //  listReponse: files,\r\n  };\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const submitTask = () => {\r\n    console.log(\"grade : \");\r\n    console.log(grade);\r\n  \r\n    dispatch(rendreTask(grade)).then(() => {\r\n      dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n  setTask(response.payload[0]);\r\n      });\r\n    });\r\n  };\r\n // console.log(task);\r\n  useEffect(() => {\r\n    \r\n    dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n      setTask(response.payload[0]);\r\n          });\r\n          console.log(task);\r\n    \r\n  }, []);\r\nconst [openModal , setOpenModal] = useState(false);\r\n  return (\r\n    <div>\r\n      {!task ? (\r\n        <></>\r\n      ) : (\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={1}></Grid.Column>\r\n            <Grid.Column width={14}>\r\n              <Grid>\r\n                {\" \"}\r\n                <Grid.Row>\r\n                  {\" \"}\r\n                  <Grid.Column width={12}>\r\n                    <Header as=\"h1\">\r\n                      <Icon circular name=\"file alternate\" />\r\n                      <Header.Content>\r\n                        {task.task.title}\r\n                        <Header.Subheader>\r\n                          <ReactTimeAgo\r\n                            date={task.task.DateAt}\r\n                            locale=\"en-US\"\r\n                          />\r\n                        </Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n                    <Divider></Divider>\r\n                    <br />\r\n                    <Container>\r\n                      <h5>{task.task.description}</h5>\r\n                    </Container><br/>\r\n                    <CommentComponent taskID={task._id} />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={4}>\r\n                    <Card>\r\n                      <Card.Content>\r\n                        <Card.Header>Your Task</Card.Header>\r\n\r\n                        <Card.Description>\r\n                          {task.taskStatus === \"Remis\" ? (\r\n                            <>\r\n                              <Message positive>\r\n                                <Message.Header>\r\n                                  Task Added Succesfully\r\n                                </Message.Header>\r\n                              </Message>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {\" \"}\r\n                              <Message\r\n                                header=\"Upload Your File Here \"\r\n                                content=\"Good Luck For your assignment\"\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Card.Description>\r\n                        <br />\r\n                   \r\n                      </Card.Content>\r\n                      <Card.Content extra>\r\n                          \r\n                          <Modal\r\n        trigger={ \r\n        ( task.taskStatus === \"Remis\" ? (\r\n        (\r\n        <Link to={\"/Result/\"+task._id}><Button onClick={()=>setOpenModal(true)} color=\"red\" compact  fluid content={\"View Result\"} /> </Link>)\r\n\r\n        ) : ( <Button onClick={()=>setOpenModal(true)} color=\"red\" compact  fluid content={\"Start Quiz\"} /> ) )\r\n      }\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n        open={openModal}\r\n      >\r\n          <Modal.Header>Quiz </Modal.Header>\r\n        <Modal.Content>\r\n            <p>Once you start this Quiz you will no longer be able to do this Quiz Again.\r\n              \r\n            </p>\r\n        </Modal.Content>\r\n\r\n    \r\n      <Modal.Actions>\r\n          <Link to={\"/TaskQuiz/\"+task._id}>\r\n          <Button color=\"red\">Start</Button>\r\n          </Link>\r\n          <Button color=\"black\"\r\n          onClick={()=>setOpenModal(false)}\r\n          \r\n          >Back</Button>\r\n      </Modal.Actions>\r\n      </Modal>             \r\n                    \r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={1}></Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}