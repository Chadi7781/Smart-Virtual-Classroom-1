{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\ModalTaskFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Select from \"react-select\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport { Dropdown, Button, Form, Grid, Rail, Segment, TextArea, Label, Modal, Confirm, Header } from \"semantic-ui-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isAuth } from \"../../helpers/auth\";\nimport FileUpload from \"../../utlis/FileUpload\";\nimport { assignTask, getTaskByTeacher, postTasks } from \"../../redux/slices/Task\";\nimport { AddquestionsApi } from \"../../api/api\";\nimport { addQuestion } from \"../../redux/slices/questionslice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalTaskFile(props) {\n  _s();\n\n  const seanceChosen = [];\n  const [cancel, setCancel] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [opensave, setOpensave] = useState(false);\n  const [close, setClose] = useState(false);\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const seances = useSelector(state => state.seance.seance);\n  const [studentChosen] = useState(currentClass.classUsers);\n  const [selectedSeance, setSelectedSeance] = useState(null);\n  const [listStud, setListStud] = useState([]);\n  const [theme, setTheme] = useState([]);\n  seances.forEach(element => {\n    seanceChosen.push({\n      label: element.titre,\n      value: element\n    });\n  });\n  const [tasks, setTask] = useState({\n    title: \"\",\n    description: \"\",\n    theme: \"\",\n    cour: currentClass._id,\n    typeTask: \"File\",\n    listQuestion: [],\n    listStudents: [],\n    endDate: null,\n    creator: isAuth()._id\n  });\n  const taskDetail = {\n    \"idUser\": isAuth()._id,\n    \"idClass\": currentClass._id\n  };\n  const dispatch = useDispatch();\n\n  const clicCancel = () => {\n    setCancel(true);\n  };\n\n  const clicOpen = () => {\n    setOpen(true);\n  };\n\n  const clicOpensave = () => {\n    setOpensave(true);\n  };\n\n  const clicConfirmCancel = () => {\n    //dispatch(postTasks(props.data));\n    // props.nextStep(step + 1);\n    setCancel(false);\n  };\n\n  const clicConfirm = () => {\n    console.log(selectedSeance);\n    setTask(tasks.theme = selectedSeance.value);\n    setTask(...(tasks.listStudents = listStud));\n    setTask(...(tasks.listQuestion = Images));\n    setEnableUpload(true);\n    dispatch(postTasks(tasks)).then(() => {\n      dispatch(getTaskByTeacher(taskDetail));\n    });\n    setOpensave(false);\n  };\n\n  const clicConfirmAssign = () => {\n    setTask(...(tasks.theme = selectedSeance.value));\n    setTask(...(tasks.listStudents = listStud));\n    setTask(...(tasks.listQuestion = Images));\n    setEnableUpload(true);\n    dispatch(assignTask(tasks)).then(() => {\n      dispatch(getTaskByTeacher(taskDetail));\n    });\n    ;\n    setOpen(false);\n  };\n\n  const clicClose = () => {\n    setOpen(false);\n  };\n\n  const clicClosesave = () => {\n    setOpensave(false);\n  };\n\n  const clicCloseCancel = () => {\n    setCancel(false);\n  };\n\n  const event = selectedList => {\n    //prop(tasks);\n    setTask(...(tasks.theme = theme._id));\n    setTask(...(tasks.listStudents = listStud));\n    setTask(...(tasks.listQuestion = Images));\n    console.log(tasks.listStudents);\n  };\n\n  const onSelect = (selectedList, selectedItem) => {\n    console.log(selectedItem);\n    setListStud(selectedList);\n    console.log(listStud);\n  };\n\n  const onRemove = (selectedList, removedItem) => {\n    listStud.filter(item => item._id !== removedItem._id);\n    setListStud(selectedList);\n    console.log(listStud);\n  };\n\n  const selectedTheme = (selectedList, selectedItem) => {\n    setTheme(selectedItem);\n  };\n\n  const [enableUpload, setEnableUpload] = useState(false);\n  const [Images, setImages] = useState([]);\n\n  const updateImages = newImages => {\n    setImages(newImages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      trigger: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        icon: \"file text\",\n        text: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 18\n      }, this),\n      dimmer: \"inverted\",\n      size: \"tiny\",\n      closeIcon: \"close\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: props.headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 10,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                    label: \"Title\",\n                    required: true,\n                    onChange: e => setTask({ ...tasks,\n                      title: e.target.value\n                    }),\n                    placeholder: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n                    required: true,\n                    label: \"Description\",\n                    onChange: e => setTask({ ...tasks,\n                      description: e.target.value\n                    }),\n                    placeholder: \"Description..\",\n                    style: {\n                      minHeight: 50\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Due\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(SemanticDatepicker, {\n                    onChange: (e, data) => setTask({ ...tasks,\n                      endDate: data.value\n                    }),\n                    value: tasks.endDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 6,\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                as: \"h5\",\n                icon: \"check square outline\",\n                content: \"Choose Theme  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedSeance,\n                onChange: setSelectedSeance,\n                options: seanceChosen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"For : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n                  placeholder: \"Select Student\",\n                  style: {\n                    chips: {\n                      background: \"red\"\n                    },\n                    option: {\n                      color: \"black\"\n                    },\n                    searchBox: {\n                      // To change search box element look\n                      border: \"none\"\n                    },\n                    chips: {\n                      // To change css chips(Selected options)\n                      background: \"red\"\n                    }\n                  },\n                  loadingMessage: true,\n                  showArrow: true,\n                  fluid: true,\n                  selection: true,\n                  multiple: true,\n                  displayValue: \"name\",\n                  options: studentChosen,\n                  selectedValues: tasks.listStudents,\n                  onSelect: onSelect,\n                  onRemove: onRemove,\n                  hidePlaceholder: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n          refreshFunction: updateImages,\n          listfile: null,\n          Enbale: enableUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n        floated: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => clicCancel(),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n          header: \"Cancel Add \",\n          content: \"Are you sure?\",\n          open: cancel,\n          onCancel: clicCloseCancel,\n          onConfirm: clicConfirmCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          type: \"submit\",\n          onClick: () => clicOpensave() //onClick={onSubmitSaveTask}\n          ,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n          header: \"Save Task To Assign\",\n          content: \"Are you sure?\",\n          open: opensave,\n          onCancel: clicClosesave,\n          onConfirm: clicConfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          type: \"submit\" // onClick={onSubmitAssignTask}\n          ,\n          onClick: () => clicOpen(),\n          children: \"Assign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n          header: \"Assign Task To Student\",\n          content: \"Are you sure?\",\n          open: open,\n          onCancel: clicClose,\n          onConfirm: clicConfirmAssign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalTaskFile, \"QEDLBNSZj7E2FKzOfMHApWimNPk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ModalTaskFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTaskFile\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/ModalTaskFile.js"],"names":["React","useState","Multiselect","Select","SemanticDatepicker","Dropdown","Button","Form","Grid","Rail","Segment","TextArea","Label","Modal","Confirm","Header","useDispatch","useSelector","isAuth","FileUpload","assignTask","getTaskByTeacher","postTasks","AddquestionsApi","addQuestion","ModalTaskFile","props","seanceChosen","cancel","setCancel","open","setOpen","opensave","setOpensave","close","setClose","currentClass","JSON","parse","localStorage","getItem","seances","state","seance","studentChosen","classUsers","selectedSeance","setSelectedSeance","listStud","setListStud","theme","setTheme","forEach","element","push","label","titre","value","tasks","setTask","title","description","cour","_id","typeTask","listQuestion","listStudents","endDate","creator","taskDetail","dispatch","clicCancel","clicOpen","clicOpensave","clicConfirmCancel","clicConfirm","console","log","Images","setEnableUpload","then","clicConfirmAssign","clicClose","clicClosesave","clicCloseCancel","event","selectedList","onSelect","selectedItem","onRemove","removedItem","filter","item","selectedTheme","enableUpload","setImages","updateImages","newImages","headerTitle","e","target","minHeight","data","chips","background","option","color","searchBox","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\n\r\nimport {\r\n  Dropdown,\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Rail,\r\n  Segment,\r\n  TextArea,\r\n  Label,\r\n  Modal,\r\n  Confirm,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport { assignTask, getTaskByTeacher, postTasks } from \"../../redux/slices/Task\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\nimport { addQuestion } from \"../../redux/slices/questionslice\";\r\n\r\nexport default function ModalTaskFile(props) {\r\n  \r\n  const seanceChosen = [];\r\n    const [cancel, setCancel] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [opensave, setOpensave] = useState(false);\r\n  \r\n    const [close, setClose] = useState(false);\r\n    const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n    const seances = useSelector((state) => state.seance.seance);\r\n    const [studentChosen] = useState(currentClass.classUsers);\r\n    const [selectedSeance, setSelectedSeance] = useState(null);\r\n    const [listStud , setListStud] = useState([]);\r\n\r\n    const [theme, setTheme] = useState([]);\r\n   \r\n    seances.forEach((element) => {\r\n      seanceChosen.push({ label: element.titre, value: element });\r\n    });\r\n    const [tasks , setTask] = useState({\r\n   \r\n        title : \"\",\r\n        description : \"\",\r\n        theme : \"\",\r\n        cour : currentClass._id,\r\n        typeTask : \"File\",\r\n        listQuestion : [],\r\n        listStudents : [],\r\n        endDate : null,\r\n        creator : isAuth()._id\r\n     \r\n    });\r\n\r\n    const taskDetail={\r\n      \"idUser\":isAuth()._id,\r\n      \"idClass\" : currentClass._id,\r\n      \r\n    }\r\n  \r\n    const  dispatch = useDispatch();\r\n    const clicCancel = () => {\r\n      setCancel(true);\r\n    };\r\n    const clicOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const clicOpensave = () => {\r\n      setOpensave(true);\r\n    };\r\n    const clicConfirmCancel = () => {\r\n      //dispatch(postTasks(props.data));\r\n     // props.nextStep(step + 1);\r\n     setCancel(false);\r\n    };\r\n    const clicConfirm = () => {\r\n      console.log(selectedSeance);\r\n      setTask(tasks.theme = selectedSeance.value);\r\n      setTask(...tasks.listStudents = listStud);\r\n      setTask(...tasks.listQuestion = Images);\r\n      setEnableUpload(true);\r\n      dispatch(postTasks(tasks)).then(()=>{\r\n        dispatch(getTaskByTeacher(taskDetail));\r\n      });\r\n     \r\n    \r\n      setOpensave(false);\r\n    };\r\n    const clicConfirmAssign = () => {\r\n\r\n      setTask(...tasks.theme = selectedSeance.value);\r\n      setTask(...tasks.listStudents = listStud);\r\n      setTask(...tasks.listQuestion = Images);\r\n      setEnableUpload(true);\r\n      dispatch(assignTask(tasks)).then(()=>{\r\n        dispatch(getTaskByTeacher(taskDetail));\r\n      });;\r\n    \r\n      setOpen(false);\r\n    };\r\n    const clicClose = () => {\r\n      setOpen(false);\r\n    };\r\n    const clicClosesave = () => {\r\n      setOpensave(false);\r\n    };\r\n    const clicCloseCancel = () => {\r\n      setCancel(false);\r\n    };\r\n\r\n      const event = (selectedList) => {\r\n        //prop(tasks);\r\n\r\n        setTask(...tasks.theme = theme._id);\r\n        setTask(...tasks.listStudents = listStud);\r\n        setTask(...tasks.listQuestion = Images);\r\n        \r\n        console.log(tasks.listStudents);\r\n    \r\n     \r\n      };\r\n    \r\n      const onSelect = (selectedList, selectedItem) => {\r\n       console.log(selectedItem);\r\n       setListStud(selectedList);\r\n\r\n    console.log(listStud);\r\n      };\r\n      const onRemove = (selectedList, removedItem) => {\r\n    \r\n         listStud.filter(\r\n            (item) => item._id !== removedItem._id\r\n          );\r\n          setListStud(selectedList);\r\n        \r\n        console.log(listStud);\r\n      \r\n      };\r\n    \r\n      const selectedTheme = (selectedList, selectedItem) => {\r\n       \r\n       setTheme(selectedItem);\r\n  \r\n      };\r\n      const [enableUpload, setEnableUpload] = useState(false);\r\n      const [Images, setImages] = useState([]);\r\n      const updateImages = (newImages) => {\r\n    \r\n        setImages(newImages);\r\n        \r\n       \r\n      };\r\n    return (\r\n        <div>\r\n               <Modal\r\n        trigger={<Dropdown.Item icon=\"file text\" text=\"Add Task\" />}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={10}>\r\n              <Form >\r\n                <Form.Field>\r\n                  <Form.Input\r\n                    label=\"Title\"\r\n                    required\r\n                   \r\n                    onChange={(e) =>\r\n                      setTask({ ...tasks, title: e.target.value })\r\n                    }\r\n                    placeholder=\"Title\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>Description</label>\r\n                  <TextArea\r\n                  required\r\n                    label=\"Description\"\r\n              \r\n                    onChange={(e) =>\r\n                      setTask({ ...tasks, description: e.target.value })\r\n                    }\r\n                    placeholder=\"Description..\"\r\n                    style={{ minHeight: 50 }}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Due</label>\r\n                  <SemanticDatepicker\r\n                    onChange={(e, data) =>\r\n                      setTask({ ...tasks, endDate: data.value })\r\n                    }\r\n                    value={tasks.endDate}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n            <Header\r\n                as=\"h5\"\r\n                icon=\"check square outline\"\r\n                content={\"Choose Theme  \"}\r\n              />\r\n              <Select\r\n                value={selectedSeance}\r\n                onChange={setSelectedSeance}\r\n                options={seanceChosen}\r\n              />\r\n              <br/>\r\n              <Form.Field required>\r\n                           <label>For : </label>\r\n              <Multiselect\r\n                placeholder=\"Select Student\"\r\n                style={{\r\n                  chips: { background: \"red\" },\r\n                  option: { color: \"black\" },\r\n                  searchBox: {\r\n                    // To change search box element look\r\n                    border: \"none\",\r\n                  },\r\n                  chips: { // To change css chips(Selected options)\r\n                    background: \"red\"\r\n                    }\r\n                }}\r\n                loadingMessage\r\n                showArrow\r\n                fluid\r\n                selection\r\n                multiple\r\n                displayValue=\"name\"\r\n                options={studentChosen}\r\n                selectedValues={tasks.listStudents}\r\n                onSelect={onSelect}\r\n                onRemove={onRemove}\r\n                hidePlaceholder\r\n              />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n\r\n               \r\n        <FileUpload refreshFunction={updateImages} listfile={null} Enbale={enableUpload}/>\r\n      \r\n      \r\n     \r\n        </Modal.Content>\r\n     \r\n        <Button.Group floated=\"right\">\r\n        <Button onClick={() => clicCancel()}>Cancel</Button>\r\n        <Confirm\r\n          header=\"Cancel Add \"\r\n          content=\"Are you sure?\"\r\n          open={cancel}\r\n          onCancel={clicCloseCancel}\r\n          onConfirm={clicConfirmCancel}\r\n        />\r\n        <Button.Or />\r\n        <Button\r\n          color=\"red\"\r\n          type=\"submit\"\r\n          onClick={() => clicOpensave()}\r\n          //onClick={onSubmitSaveTask}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Confirm\r\n          header=\"Save Task To Assign\"\r\n          content=\"Are you sure?\"\r\n          open={opensave}\r\n          onCancel={clicClosesave}\r\n          onConfirm={clicConfirm}\r\n        />\r\n        <Button.Or />\r\n      \r\n        <Button\r\n          color=\"red\"\r\n          type=\"submit\"\r\n          // onClick={onSubmitAssignTask}\r\n          onClick={() => clicOpen()}\r\n        >\r\n          Assign\r\n        </Button>\r\n   \r\n        <Confirm\r\n          header=\"Assign Task To Student\"\r\n          content=\"Are you sure?\"\r\n          open={open}\r\n          onCancel={clicClose}\r\n          onConfirm={clicConfirmAssign}\r\n        />\r\n      </Button.Group>\r\n     \r\n      <br/>\r\n      <br/>\r\n      <br/>\r\n    \r\n      </Modal>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}