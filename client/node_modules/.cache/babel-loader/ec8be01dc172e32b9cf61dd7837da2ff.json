{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\ModalTaskFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Select from \"react-select\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport { Dropdown, Button, Form, Grid, Rail, Segment, TextArea, Label } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalTaskFile(props) {\n  _s();\n\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const seances = useSelector(state => state.seance.seance);\n  const [studentChosen] = useState(currentClass.classUsers);\n  const [theme, setTheme] = useState(seances);\n  const [tasks, setTask] = useState({\n    title: \"\",\n    description: \"\",\n    theme: \"\",\n    cour: currentClass._id,\n    typeTask: \"File\",\n    listQuestion: [],\n    listStudents: [],\n    endDate: null,\n    creator: isAuth()._id\n  });\n\n  const event = () => {\n    props.addTask(tasks);\n    console.log(tasks.listStudents);\n  };\n\n  const onSelect = (selectedList, selectedItem) => {\n    console.log(selectedItem);\n    setTask(tasks.listStudents.push(selectedItem));\n    console.log(tasks.listStudents);\n  };\n\n  const onRemove = (selectedList, removedItem) => {\n    setTask(tasks.listStudents = selectedList.filter(item => item._id !== removedItem._id));\n    console.log(tasks.listStudents);\n  };\n\n  const selectedTheme = (selectedList, selectedItem) => {\n    console.log(selectedItem);\n    setTheme(selectedItem);\n    setTask(tasks.theme = selectedItem._id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      trigger: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        icon: \"file text\",\n        text: \"Add courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this),\n      dimmer: \"inverted\",\n      size: \"tiny\",\n      closeIcon: \"close\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: props.headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 11,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                    label: \"Title\",\n                    required: true,\n                    value: tasks.title,\n                    onChange: e => setTask({ ...tasks,\n                      title: e.target.value\n                    }),\n                    placeholder: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n                    required: true,\n                    label: \"Description\",\n                    value: tasks.description,\n                    onChange: e => setTask({ ...tasks,\n                      description: e.target.value\n                    }),\n                    placeholder: \"Description..\",\n                    style: {\n                      minHeight: 50\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Type of Task \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                    onChange: (e, data) => setTask({ ...tasks,\n                      typeTask: data.value\n                    }),\n                    placeholder: \"I open on focus\",\n                    openOnFocus: true,\n                    options: options,\n                    selection: true,\n                    required: true,\n                    value: tasks.typeTask\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 19\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Due\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(SemanticDatepicker, {\n                    onChange: (e, data) => setTask({ ...tasks,\n                      endDate: data.value\n                    }),\n                    value: tasks.endDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 5,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"For : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n                required: true,\n                placeholder: \"Select seance\",\n                style: {\n                  chips: {\n                    background: \"red\"\n                  },\n                  option: {\n                    color: \"black\"\n                  },\n                  searchBox: {\n                    border: \"none\"\n                  },\n                  chips: {\n                    // To change css chips(Selected options)\n                    background: \"red\"\n                  }\n                },\n                onSelect: selectedTheme,\n                fluid: true,\n                options: seances,\n                selection: true,\n                singleSelect: true,\n                hidePlaceholder: true,\n                displayValue: \"titre\",\n                selectedValues: tasks.theme.titre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"For : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n                  placeholder: \"Select Student\",\n                  style: {\n                    chips: {\n                      background: \"red\"\n                    },\n                    option: {\n                      color: \"black\"\n                    },\n                    searchBox: {\n                      // To change search box element look\n                      border: \"none\"\n                    },\n                    chips: {\n                      // To change css chips(Selected options)\n                      background: \"red\"\n                    }\n                  },\n                  loadingMessage: true,\n                  showArrow: true,\n                  fluid: true,\n                  selection: true,\n                  multiple: true,\n                  displayValue: \"name\",\n                  options: studentChosen,\n                  selectedValues: tasks.listStudents,\n                  onSelect: onSelect,\n                  onRemove: onRemove,\n                  hidePlaceholder: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalTaskFile, \"u4JqT8aPkCyTzg2CNYXe59Vx6Wk=\", false, function () {\n  return [useSelector];\n});\n\n_c = ModalTaskFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTaskFile\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/ModalTaskFile.js"],"names":["React","useState","Multiselect","Select","SemanticDatepicker","Dropdown","Button","Form","Grid","Rail","Segment","TextArea","Label","useSelector","isAuth","ModalTaskFile","props","currentClass","JSON","parse","localStorage","getItem","seances","state","seance","studentChosen","classUsers","theme","setTheme","tasks","setTask","title","description","cour","_id","typeTask","listQuestion","listStudents","endDate","creator","event","addTask","console","log","onSelect","selectedList","selectedItem","push","onRemove","removedItem","filter","item","selectedTheme","headerTitle","e","target","value","minHeight","data","options","chips","background","option","color","searchBox","border","titre"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AAEA,SACEC,QADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,OANF,EAOEC,QAPF,EAQEC,KARF,QASO,mBATP;AAUA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,oBAAvB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAEzC,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAArB;AACA,QAAMC,OAAO,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaA,MAAzB,CAA3B;AACA,QAAM,CAACC,aAAD,IAAkBxB,QAAQ,CAACgB,YAAY,CAACS,UAAd,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAACqB,OAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,OAAR,IAAmB7B,QAAQ,CAAC;AAC9B8B,IAAAA,KAAK,EAAE,EADuB;AAE9BC,IAAAA,WAAW,EAAE,EAFiB;AAG9BL,IAAAA,KAAK,EAAE,EAHuB;AAI9BM,IAAAA,IAAI,EAAGhB,YAAY,CAACiB,GAJU;AAK9BC,IAAAA,QAAQ,EAAE,MALoB;AAM9BC,IAAAA,YAAY,EAAE,EANgB;AAO9BC,IAAAA,YAAY,EAAE,EAPgB;AAQ9BC,IAAAA,OAAO,EAAE,IARqB;AAS9BC,IAAAA,OAAO,EAAEzB,MAAM,GAAGoB;AATY,GAAD,CAAjC;;AAYE,QAAMM,KAAK,GAAG,MAAM;AAClBxB,IAAAA,KAAK,CAACyB,OAAN,CAAcZ,KAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACQ,YAAlB;AAGD,GALD;;AAOA,QAAMO,QAAQ,GAAG,CAACC,YAAD,EAAeC,YAAf,KAAgC;AAC/CJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACAhB,IAAAA,OAAO,CAACD,KAAK,CAACQ,YAAN,CAAmBU,IAAnB,CAAwBD,YAAxB,CAAD,CAAP;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACQ,YAAlB;AACD,GALD;;AAMA,QAAMW,QAAQ,GAAG,CAACH,YAAD,EAAeI,WAAf,KAA+B;AAC9CnB,IAAAA,OAAO,CACJD,KAAK,CAACQ,YAAN,GAAqBQ,YAAY,CAACK,MAAb,CACnBC,IAAD,IAAUA,IAAI,CAACjB,GAAL,KAAae,WAAW,CAACf,GADf,CADjB,CAAP;AAMAQ,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACQ,YAAlB;AACD,GARD;;AAUA,QAAMe,aAAa,GAAG,CAACP,YAAD,EAAeC,YAAf,KAAgC;AACpDJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACAlB,IAAAA,QAAQ,CAACkB,YAAD,CAAR;AACAhB,IAAAA,OAAO,CAAED,KAAK,CAACF,KAAN,GAAcmB,YAAY,CAACZ,GAA7B,CAAP;AACD,GAJD;;AAMF,sBACI;AAAA,2BACO,QAAC,KAAD;AACP,MAAA,OAAO,eAAE,QAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAC,WAApB;AAAgC,QAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF;AAEP,MAAA,MAAM,EAAC,UAFA;AAGP,MAAA,IAAI,EAAC,MAHE;AAIP,MAAA,SAAS,EAAC,OAJH;AAAA,8BAMP,QAAC,KAAD,CAAO,MAAP;AAAA,kBAAelB,KAAK,CAACqC;AAArB;AAAA;AAAA;AAAA;AAAA,cANO,eAOP,QAAC,KAAD,CAAO,OAAP;AAAA,+BACA,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,GAAN;AAAA,oCACE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,EAApB;AAAA,qCACE,QAAC,IAAD;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA,yCACE,QAAC,IAAD,CAAM,KAAN;AACE,oBAAA,KAAK,EAAC,OADR;AAEE,oBAAA,QAAQ,MAFV;AAGE,oBAAA,KAAK,EAAExB,KAAK,CAACE,KAHf;AAIE,oBAAA,QAAQ,EAAGuB,CAAD,IACRxB,OAAO,CAAC,EAAE,GAAGD,KAAL;AAAYE,sBAAAA,KAAK,EAAEuB,CAAC,CAACC,MAAF,CAASC;AAA5B,qBAAD,CALX;AAOE,oBAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,QAAQ,MAApB;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,QAAD;AACA,oBAAA,QAAQ,MADR;AAEE,oBAAA,KAAK,EAAC,aAFR;AAGE,oBAAA,KAAK,EAAE3B,KAAK,CAACG,WAHf;AAIE,oBAAA,QAAQ,EAAGsB,CAAD,IACRxB,OAAO,CAAC,EAAE,GAAGD,KAAL;AAAYG,sBAAAA,WAAW,EAAEsB,CAAC,CAACC,MAAF,CAASC;AAAlC,qBAAD,CALX;AAOE,oBAAA,WAAW,EAAC,eAPd;AAQE,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,SAAS,EAAE;AAAb;AART;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,eAyBE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,QAAQ,MAApB;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,QAAD;AACE,oBAAA,QAAQ,EAAE,CAACH,CAAD,EAAII,IAAJ,KACR5B,OAAO,CAAC,EAAE,GAAGD,KAAL;AAAYM,sBAAAA,QAAQ,EAAEuB,IAAI,CAACF;AAA3B,qBAAD,CAFX;AAIE,oBAAA,WAAW,EAAC,iBAJd;AAKE,oBAAA,WAAW,MALb;AAME,oBAAA,OAAO,EAAEG,OANX;AAOE,oBAAA,SAAS,MAPX;AAQE,oBAAA,QAAQ,MARV;AASE,oBAAA,KAAK,EAAE9B,KAAK,CAACM;AATf;AAAA;AAAA;AAAA;AAAA,0BAFF,EAYK,GAZL;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBF,eAuCE,QAAC,IAAD,CAAM,KAAN;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,kBAAD;AACE,oBAAA,QAAQ,EAAE,CAACmB,CAAD,EAAII,IAAJ,KACR5B,OAAO,CAAC,EAAE,GAAGD,KAAL;AAAYS,sBAAAA,OAAO,EAAEoB,IAAI,CAACF;AAA1B,qBAAD,CAFX;AAIE,oBAAA,KAAK,EAAE3B,KAAK,CAACS;AAJf;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAoDE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,CAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,WAAD;AACA,gBAAA,QAAQ,MADR;AAEE,gBAAA,WAAW,EAAC,eAFd;AAGE,gBAAA,KAAK,EAAE;AACLsB,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBADF;AAELC,kBAAAA,MAAM,EAAE;AAAEC,oBAAAA,KAAK,EAAE;AAAT,mBAFH;AAGLC,kBAAAA,SAAS,EAAE;AAETC,oBAAAA,MAAM,EAAE;AAFC,mBAHN;AAOLL,kBAAAA,KAAK,EAAE;AAAE;AACPC,oBAAAA,UAAU,EAAE;AADP;AAPF,iBAHT;AAcE,gBAAA,QAAQ,EAAET,aAdZ;AAeE,gBAAA,KAAK,MAfP;AAgBE,gBAAA,OAAO,EAAE9B,OAhBX;AAiBE,gBAAA,SAAS,MAjBX;AAkBE,gBAAA,YAAY,EAAE,IAlBhB;AAmBE,gBAAA,eAAe,MAnBjB;AAoBE,gBAAA,YAAY,EAAC,OApBf;AAqBE,gBAAA,cAAc,EAAEO,KAAK,CAACF,KAAN,CAAYuC;AArB9B;AAAA;AAAA;AAAA;AAAA,sBAFF,eAyBE;AAAA;AAAA;AAAA;AAAA,sBAzBF,eA0BE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,QAAQ,MAApB;AAAA,wCACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADb,eAEA,QAAC,WAAD;AACE,kBAAA,WAAW,EAAC,gBADd;AAEE,kBAAA,KAAK,EAAE;AACLN,oBAAAA,KAAK,EAAE;AAAEC,sBAAAA,UAAU,EAAE;AAAd,qBADF;AAELC,oBAAAA,MAAM,EAAE;AAAEC,sBAAAA,KAAK,EAAE;AAAT,qBAFH;AAGLC,oBAAAA,SAAS,EAAE;AACT;AACAC,sBAAAA,MAAM,EAAE;AAFC,qBAHN;AAOLL,oBAAAA,KAAK,EAAE;AAAE;AACPC,sBAAAA,UAAU,EAAE;AADP;AAPF,mBAFT;AAaE,kBAAA,cAAc,MAbhB;AAcE,kBAAA,SAAS,MAdX;AAeE,kBAAA,KAAK,MAfP;AAgBE,kBAAA,SAAS,MAhBX;AAiBE,kBAAA,QAAQ,MAjBV;AAkBE,kBAAA,YAAY,EAAC,MAlBf;AAmBE,kBAAA,OAAO,EAAEpC,aAnBX;AAoBE,kBAAA,cAAc,EAAEI,KAAK,CAACQ,YApBxB;AAqBE,kBAAA,QAAQ,EAAEO,QArBZ;AAsBE,kBAAA,QAAQ,EAAEI,QAtBZ;AAuBE,kBAAA,eAAe;AAvBjB;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,oBApDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,UADJ;AA4HH;;GA3KuBjC,a;UAGJF,W;;;KAHIE,a","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\n\r\nimport {\r\n  Dropdown,\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Rail,\r\n  Segment,\r\n  TextArea,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\n\r\nexport default function ModalTaskFile(props) {\r\n\r\n    const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n    const seances = useSelector((state) => state.seance.seance);\r\n    const [studentChosen] = useState(currentClass.classUsers);\r\n    const [theme, setTheme] = useState(seances);\r\n    const [tasks, setTask] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        theme: \"\",\r\n        cour : currentClass._id,\r\n        typeTask: \"File\",\r\n        listQuestion: [],\r\n        listStudents: [],\r\n        endDate: null,\r\n        creator: isAuth()._id,\r\n      });\r\n\r\n      const event = () => {\r\n        props.addTask(tasks);\r\n        console.log(tasks.listStudents);\r\n    \r\n     \r\n      };\r\n    \r\n      const onSelect = (selectedList, selectedItem) => {\r\n        console.log(selectedItem);\r\n        setTask(tasks.listStudents.push(selectedItem));\r\n    \r\n        console.log(tasks.listStudents);\r\n      };\r\n      const onRemove = (selectedList, removedItem) => {\r\n        setTask(\r\n          (tasks.listStudents = selectedList.filter(\r\n            (item) => item._id !== removedItem._id\r\n          ))\r\n        );\r\n    \r\n        console.log(tasks.listStudents);\r\n      };\r\n    \r\n      const selectedTheme = (selectedList, selectedItem) => {\r\n        console.log(selectedItem);\r\n        setTheme(selectedItem);\r\n        setTask((tasks.theme = selectedItem._id));\r\n      };\r\n\r\n    return (\r\n        <div>\r\n               <Modal\r\n        trigger={<Dropdown.Item icon=\"file text\" text=\"Add courses\" />}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={11}>\r\n              <Form >\r\n                <Form.Field>\r\n                  <Form.Input\r\n                    label=\"Title\"\r\n                    required\r\n                    value={tasks.title}\r\n                    onChange={(e) =>\r\n                      setTask({ ...tasks, title: e.target.value })\r\n                    }\r\n                    placeholder=\"Title\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>Description</label>\r\n                  <TextArea\r\n                  required\r\n                    label=\"Description\"\r\n                    value={tasks.description}\r\n                    onChange={(e) =>\r\n                      setTask({ ...tasks, description: e.target.value })\r\n                    }\r\n                    placeholder=\"Description..\"\r\n                    style={{ minHeight: 50 }}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>Type of Task </label>\r\n                  <Dropdown\r\n                    onChange={(e, data) =>\r\n                      setTask({ ...tasks, typeTask: data.value })\r\n                    }\r\n                    placeholder=\"I open on focus\"\r\n                    openOnFocus\r\n                    options={options}\r\n                    selection\r\n                    required\r\n                    value={tasks.typeTask}\r\n                  />{\" \"}\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Due</label>\r\n                  <SemanticDatepicker\r\n                    onChange={(e, data) =>\r\n                      setTask({ ...tasks, endDate: data.value })\r\n                    }\r\n                    value={tasks.endDate}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <label>For : </label>\r\n              <Multiselect\r\n              required\r\n                placeholder=\"Select seance\"\r\n                style={{\r\n                  chips: { background: \"red\" },\r\n                  option: { color: \"black\" },\r\n                  searchBox: {\r\n                  \r\n                    border: \"none\",\r\n                  },\r\n                  chips: { // To change css chips(Selected options)\r\n                    background: \"red\"\r\n                    }\r\n                }}\r\n                onSelect={selectedTheme}\r\n                fluid\r\n                options={seances}\r\n                selection\r\n                singleSelect={true}\r\n                hidePlaceholder\r\n                displayValue=\"titre\"\r\n                selectedValues={tasks.theme.titre}\r\n              />\r\n              <br/>\r\n              <Form.Field required>\r\n                           <label>For : </label>\r\n              <Multiselect\r\n                placeholder=\"Select Student\"\r\n                style={{\r\n                  chips: { background: \"red\" },\r\n                  option: { color: \"black\" },\r\n                  searchBox: {\r\n                    // To change search box element look\r\n                    border: \"none\",\r\n                  },\r\n                  chips: { // To change css chips(Selected options)\r\n                    background: \"red\"\r\n                    }\r\n                }}\r\n                loadingMessage\r\n                showArrow\r\n                fluid\r\n                selection\r\n                multiple\r\n                displayValue=\"name\"\r\n                options={studentChosen}\r\n                selectedValues={tasks.listStudents}\r\n                onSelect={onSelect}\r\n                onRemove={onRemove}\r\n                hidePlaceholder\r\n              />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        </Modal.Content>\r\n      </Modal>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}