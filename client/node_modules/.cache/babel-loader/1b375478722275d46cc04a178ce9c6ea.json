{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\ModalTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Dropdown, Feed, Grid, Header, Icon, Image, List, Modal } from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { DeleteResources, UpdateResources, uploadFile } from \"../../redux/slices/Task\";\nimport { UpdateProfilePicture } from \"../../redux/slices/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalTask(props) {\n  _s();\n\n  const Resources = useSelector(state => state.tasks.files);\n  const [open, setOpen] = React.useState(false);\n  const [picture, setPicture] = React.useState([]);\n  const dispatch = useDispatch();\n\n  const closeModel = () => {\n    setOpen(false);\n  };\n\n  const handleChangeStatus = async ({\n    meta,\n    file\n  }, status) => {\n    console.log(status, meta, file);\n\n    if (status === \"done\") {\n      //setPicture(picture.concat(file))\n      var formData = new FormData();\n      formData.append(\"listQuestion\", file);\n      dispatch(uploadFile(formData));\n      console.log(file);\n    }\n  };\n\n  const handleRemoveUpload = (e, res) => {\n    console.log(res);\n    dispatch(DeleteResources(res));\n    console.log(\"Trigger remove photo\");\n    console.log(Resources);\n  };\n\n  const Preview = ({\n    meta\n  }) => {\n    const {\n      name,\n      percent,\n      status\n    } = meta;\n    return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui two buttons\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"cloud upload\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"cloud upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), \"upload File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Select a Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n            inputContent: \"Drop Files here or click to choose ...\",\n            onChangeStatus: handleChangeStatus,\n            canCancel: false,\n            canRemove: false,\n            canRestart: false,\n            PreviewComponent: Preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 12,\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  divided: true,\n                  verticalAlign: \"middle\",\n                  children: Resources.map((files, index) => /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Content, {\n                      floated: \"right\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        circular: true,\n                        size: \"small\",\n                        color: \"red\",\n                        icon: \"trash\",\n                        onClick: e => {\n                          handleRemoveUpload(e, files[0]);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 21\n                    }, this), files[0].split(\".\").pop() === \"png\" || files[0].split(\".\").pop() === \"jpg\" || files[0].split(\".\").pop() === \"jpeg\" || files[0].split(\".\").pop() === \"gif\" ? /*#__PURE__*/_jsxDEV(Image, {\n                      src: files[0],\n                      rounded: true,\n                      size: \"mini\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this) : files[0].split(\".\").pop() === \"pdf\" || files[0].split(\".\").pop() === \"docx\" || files[0].split(\".\").pop() === \"pptx\" || files[0].split(\".\").pop() === \"mp4\" || files[0].split(\".\").pop() === \"mp3\" ? /*#__PURE__*/_jsxDEV(Image, {\n                      rounded: true,\n                      size: \"mini\",\n                      src: process.env.PUBLIC_URL + \"/files-type/\" + files[0].split(\".\").pop() + \".png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this) : /*#__PURE__*/_jsxDEV(Image, {\n                      rounded: true,\n                      size: \"mini\",\n                      src: process.env.PUBLIC_URL + \"/files-type/\" + \"noFile.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: [/*#__PURE__*/_jsxDEV(Header, {\n                        as: \"h4\",\n                        color: \"red\",\n                        children: files[0].split(\".\").pop()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"highlight\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: files[0].split(\"-\").pop()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 154,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 19\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Discard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Yep, Save\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: closeModel,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalTask, \"Ag1Q0WtiujvvIDwaodk4wBERwvE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ModalTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/ModalTask.js"],"names":["axios","React","Dropzone","useDispatch","useSelector","Button","Dropdown","Feed","Grid","Header","Icon","Image","List","Modal","isAuth","DeleteResources","UpdateResources","uploadFile","UpdateProfilePicture","ModalTask","props","Resources","state","tasks","files","open","setOpen","useState","picture","setPicture","dispatch","closeModel","handleChangeStatus","meta","file","status","console","log","formData","FormData","append","handleRemoveUpload","e","res","Preview","name","percent","map","index","split","pop","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  Feed,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport { DeleteResources, UpdateResources, uploadFile } from \"../../redux/slices/Task\";\r\nimport { UpdateProfilePicture } from \"../../redux/slices/User\";\r\n\r\nexport default function ModalTask(props) {\r\n  const Resources = useSelector((state) => state.tasks.files);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [picture, setPicture] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModel = () => {\r\n  \r\n   \r\n   \r\n    setOpen(false);\r\n  };\r\n  const handleChangeStatus = async ({ meta, file }, status) => {\r\n    console.log(status, meta, file);\r\n\r\nif(status === \"done\") {\r\n//setPicture(picture.concat(file))\r\nvar formData = new FormData();\r\n\r\nformData.append(\"listQuestion\", file);\r\n\r\n  \r\n      dispatch(uploadFile(formData));\r\n  \r\n       \r\n       console.log(file);\r\n \r\n      }\r\n      \r\n  };\r\n\r\n  const handleRemoveUpload = (e, res) => {\r\n   \r\n\r\n    console.log(res);\r\n    dispatch(DeleteResources(res));\r\n    console.log(\"Trigger remove photo\");\r\n    console.log(Resources);\r\n  };\r\n\r\n  const Preview = ({ meta }) => {\r\n    const { name, percent, status } = meta;\r\n    return <span></span>;\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n     \r\n\r\n    \r\n<Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={\r\n          <div className='ui two buttons'>\r\n          <Button \r\n          icon=\"cloud upload\"\r\n          >\r\n            <Icon name=\"cloud upload\"></Icon>\r\n              upload File\r\n            </Button>\r\n            </div>\r\n         \r\n        }\r\n      >\r\n        <Modal.Header>Select a Photo</Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            \r\n            <Dropzone\r\n          inputContent=\"Drop Files here or click to choose ...\"\r\n          onChangeStatus={handleChangeStatus}\r\n          canCancel={false}\r\n          canRemove={false}\r\n          canRestart={false}\r\n          PreviewComponent={Preview}\r\n        />\r\n  <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}></Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <List divided verticalAlign=\"middle\">\r\n\r\n                {Resources.map((files, index) => (\r\n                  <List.Item>\r\n                    <List.Content floated=\"right\">\r\n                      <Button\r\n                        circular\r\n                        size=\"small\"\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        onClick={(e) => {\r\n                          handleRemoveUpload(e, files[0]);\r\n                        }}\r\n                      ></Button>\r\n                    </List.Content>\r\n                    {files[0].split(\".\").pop() === \"png\" ||\r\n                    files[0].split(\".\").pop() === \"jpg\" ||\r\n                    files[0].split(\".\").pop() === \"jpeg\" ||\r\n                    files[0].split(\".\").pop() === \"gif\" ? (\r\n                      <Image src={files[0]} rounded size=\"mini\" />\r\n                    ) : files[0].split(\".\").pop() === \"pdf\" ||\r\n                    files[0].split(\".\").pop() === \"docx\" ||\r\n                    files[0].split(\".\").pop() === \"pptx\" ||\r\n                    files[0].split(\".\").pop() === \"mp4\" ||\r\n                    files[0].split(\".\").pop() === \"mp3\" ? (\r\n                      <Image\r\n                        rounded\r\n                        size=\"mini\"\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/files-type/\" +\r\n                          files[0].split(\".\").pop() +\r\n                          \".png\"\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <Image\r\n                        rounded\r\n                        size=\"mini\"\r\n                        src={\r\n                          process.env.PUBLIC_URL + \"/files-type/\" + \"noFile.png\"\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    <List.Content>\r\n                      <Header as=\"h4\" color=\"red\">\r\n                        {files[0].split(\".\").pop()}\r\n                      </Header>\r\n                      <highlight>\r\n                        <strong>{files[0].split(\"-\").pop()}</strong>\r\n                      </highlight>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={2}></Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => setOpen(false)}>\r\n            Discard\r\n          </Button>\r\n          <Button\r\n            content=\"Yep, Save\"\r\n            labelPosition=\"right\"\r\n            icon=\"checkmark\"\r\n            onClick={closeModel}\r\n            color=\"red\"\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n   \r\n      \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}