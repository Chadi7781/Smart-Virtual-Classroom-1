{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\question\\\\AddQuestionComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Modal, Form, Input, TextArea, Icon, Label } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { AddquestionsApi } from \"../../api/api\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileUpload from \"../../utlis/FileUpload\";\nimport { addQuestion } from \"../../redux/slices/questionslice\";\nimport TagsInput from \"react-tagsinput\";\nimport \"react-tagsinput/react-tagsinput.css\";\nimport io from \"socket.io-client\";\nimport { selectedClasses } from \"../../redux/slices/classsline\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\n\nfunction AddQuestion() {\n  _s();\n\n  const history = useHistory();\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const [open, setOpen] = React.useState(false);\n  const [error] = useState({\n    visible: false,\n    message: \"\"\n  });\n  const dispatch = useDispatch();\n  const [Images, setImages] = useState([]);\n\n  const updateImages = newImages => {\n    setImages(newImages);\n  }; //inpput tags\n\n\n  const [tags, setTags] = useState([]);\n\n  const handleChange = tag => {\n    setTags(tag);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      Title: \"\",\n      Body: \"\",\n      Writerq: {\n        _id: \"\"\n      },\n      Filee: [],\n      Hashtags: [],\n      Class: {\n        _id: \"\"\n      }\n    },\n    validationSchema: yupSchema,\n    onSubmit: async values => {\n      try {\n        // alert(\"images\"+Images)\n        values.Filee = Images;\n        values.Writerq._id = documentData._id;\n        values.Hashtags = tags;\n        values.Class = currentClass._id;\n        setEnableUpload(true);\n        const res = await AddquestionsApi.postQuestions(values);\n        dispatch(addQuestion(res));\n        const socket = io(ENDPOINT);\n        socket.emit(\"send_question\", \"message\");\n        setTags([]);\n        values.Title = \"\";\n        values.Body = \"\";\n        console.log(res);\n        history.push(\"/FAQ/\" + res._id);\n      } catch (error) {\n        alert(error);\n      }\n    }\n  });\n  const [enableUpload, setEnableUpload] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      as: \"div\",\n      labelPosition: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"question circle outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), \"Question\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        as: \"a\",\n        basic: true,\n        color: \"red\",\n        pointing: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"bullhorn\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Whats your question?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            placeholder: \"Title\",\n            label: \"Title\",\n            name: \"Title\",\n            onChange: formik.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          control: TextArea,\n          placeholder: \"whats your question?\",\n          label: \"Content\",\n          name: \"Body\",\n          onChange: formik.handleChange,\n          error: formik.errors.Body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TagsInput, {\n          value: tags,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"red\",\n          children: \"Ask!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n          refreshFunction: updateImages,\n          listfile: null,\n          Enbale: enableUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        onClick: () => setOpen(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddQuestion, \"7IHHK0bF1ZoVHb0Re6Bfgyzkfdw=\", false, function () {\n  return [useHistory, useDispatch, useFormik];\n});\n\n_c = AddQuestion;\nconst yupSchema = Yup.object({\n  Body: Yup.string().required(\"Champs requis!\")\n});\nexport default AddQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuestion\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/question/AddQuestionComponent.js"],"names":["React","Button","Modal","Form","Input","TextArea","Icon","Label","Yup","useFormik","AddquestionsApi","useState","useDispatch","useSelector","FileUpload","addQuestion","TagsInput","io","selectedClasses","useHistory","ENDPOINT","AddQuestion","history","documentData","JSON","parse","localStorage","getItem","currentClass","open","setOpen","error","visible","message","dispatch","Images","setImages","updateImages","newImages","tags","setTags","handleChange","tag","formik","initialValues","Title","Body","Writerq","_id","Filee","Hashtags","Class","validationSchema","yupSchema","onSubmit","values","setEnableUpload","res","postQuestions","socket","emit","console","log","push","alert","enableUpload","handleSubmit","errors","object","string","required"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Icon,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport { addQuestion } from \"../../redux/slices/questionslice\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport io from \"socket.io-client\";\r\nimport { selectedClasses } from \"../../redux/slices/classsline\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\nfunction AddQuestion() {\r\n  const history = useHistory();\r\n\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error] = useState({ visible: false, message: \"\" });\r\n  const dispatch = useDispatch();\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n\r\n    setImages(newImages);\r\n    \r\n   \r\n  };\r\n  //inpput tags\r\n  const [tags, setTags] = useState([]);\r\n  const handleChange = (tag) => {\r\n    setTags(tag);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Title: \"\",\r\n      Body: \"\",\r\n      Writerq: { _id: \"\" },\r\n      Filee: [],\r\n      Hashtags: [],\r\n      Class: { _id: \"\" },\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        \r\n       // alert(\"images\"+Images)\r\n      \r\n        values.Filee = Images;\r\n        values.Writerq._id = documentData._id;\r\n        values.Hashtags = tags;\r\n        values.Class = currentClass._id;\r\n        setEnableUpload(true);\r\n        const res = await AddquestionsApi.postQuestions(values);\r\n        dispatch(addQuestion(res));\r\n        const socket = io(ENDPOINT);\r\n        socket.emit(\"send_question\", \"message\");\r\n        setTags([]);\r\n        values.Title = \"\";\r\n        values.Body = \"\";\r\n        console.log(res)\r\n      history.push(\"/FAQ/\"+res._id);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={\r\n        <Button as=\"div\" labelPosition=\"right\">\r\n          <Button color=\"red\">\r\n            <Icon name=\"question circle outline\" />\r\n            Question\r\n          </Button>\r\n\r\n          <Label as=\"a\" basic color=\"red\" pointing=\"left\">\r\n            <Icon name=\"bullhorn\">Post</Icon>\r\n          </Label>\r\n        </Button>\r\n      }\r\n    >\r\n      <Modal.Header>Whats your question?</Modal.Header>\r\n      <Modal.Content>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Input}\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              name=\"Title\"\r\n              onChange={formik.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Field\r\n            control={TextArea}\r\n            placeholder=\"whats your question?\"\r\n            label=\"Content\"\r\n            name=\"Body\"\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.Body}\r\n          />\r\n          <TagsInput value={tags} onChange={handleChange} />\r\n\r\n          <Button type=\"submit\" color=\"red\">\r\n            Ask!\r\n          </Button>\r\n          <FileUpload refreshFunction={updateImages} listfile={null} Enbale={enableUpload}/>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"black\" onClick={() => setOpen(false)}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\nexport default AddQuestion;\r\n"]},"metadata":{},"sourceType":"module"}