{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TaskFileDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\nimport { Button, Card, Container, Divider, Grid, Header, Icon, Image, Message } from \"semantic-ui-react\";\nimport { getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\nimport ModalTask from \"./ModalTask\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskFileDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const state = useSelector(state => state.grades.grades[0]);\n  const files = useSelector(state => state.tasks.files);\n  const grade = {\n    id: id,\n    taskStatus: \"remis\",\n    listReponse: files\n  };\n  const dispatch = useDispatch();\n\n  const submitTask = () => {\n    console.log(\"grade : \");\n    console.log(grade);\n    dispatch(rendreTask(grade)).then(() => {\n      dispatch(getDetailByTaskByStudent(id));\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getDetailByTaskByStudent(id));\n  }, [id, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !state ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 14,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 12,\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h1\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"file alternate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                    children: [state.task.title, /*#__PURE__*/_jsxDEV(Header.Subheader, {\n                      children: /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                        date: state.task.DateAt,\n                        locale: \"en-US\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Container, {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: state.task.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: !state.task.listQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : state.task.listQuestion.map((files, index) => files.type === \"application/pdf\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: files.url,\n                        target: \"_blank\",\n                        rel: \"noopener noreferrer\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                            width: 3,\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: process.env.PUBLIC_URL + \"/files-type/\" + \"pdf\" + \".png\",\n                              style: {\n                                margin: \"10px\",\n                                height: \"100px\",\n                                width: \"100px\"\n                              },\n                              alt: \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 90,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 89,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                            width: 3,\n                            children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h4\",\n                                color: \"red\",\n                                children: files.originalname.slice(0, 7)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 107,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 106,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h4\",\n                                color: \"grey\",\n                                children: [files.type.slice(0, 7), \" File\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 112,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 111,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 105,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 88,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 31\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 29\n                    }, this) : files.type === \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: files.url,\n                        target: \"_blank\",\n                        rel: \"noopener noreferrer\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                            width: 3,\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: process.env.PUBLIC_URL + \"/files-type/\" + \"pptx\" + \".png\",\n                              style: {\n                                margin: \"10px\",\n                                height: \"100px\",\n                                width: \"100px\"\n                              },\n                              alt: \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 130,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 129,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                            width: 3,\n                            children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h4\",\n                                color: \"red\",\n                                children: files.originalname.slice(0, 7)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 147,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 146,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h4\",\n                                color: \"grey\",\n                                children: [files.type.slice(0, 7), \" File\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 152,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 151,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 145,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 31\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 29\n                    }, this) : files.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: files.url,\n                        target: \"_blank\",\n                        rel: \"noopener noreferrer\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                            width: 3,\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: process.env.PUBLIC_URL + \"/files-type/\" + \"docx\" + \".png\",\n                              style: {\n                                margin: \"10px\",\n                                height: \"100px\",\n                                width: \"100px\"\n                              },\n                              alt: \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 170,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 169,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                            width: 3,\n                            children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h4\",\n                                color: \"red\",\n                                children: files.originalname.slice(0, 7)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 187,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 186,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h4\",\n                                color: \"grey\",\n                                children: [files.type.slice(0, 7), \" File\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 192,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 191,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 185,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 31\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 29\n                    }, this) : files.type === \"audio/mpeg\" || files.type === \"video/mp4\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                        width: 3,\n                        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                          width: \"240px\",\n                          height: \"100px\",\n                          controls: true,\n                          url: files.url\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                        width: 3,\n                        children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                          children: /*#__PURE__*/_jsxDEV(Header, {\n                            as: \"h4\",\n                            color: \"red\",\n                            children: files.originalname\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 214,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                          children: /*#__PURE__*/_jsxDEV(Header, {\n                            as: \"h4\",\n                            color: \"grey\",\n                            children: [files.type.slice(0, 7), \" File\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 219,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 218,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 29\n                    }, this) : files.type === \"image/png\" || files.type === \"image/jpg\" || files.type === \"image/jpeg\" || files.type === \"image/gif\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                        width: 3,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: files.url,\n                          target: \"_blank\",\n                          rel: \"noopener noreferrer\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: files.url,\n                            alt: files.originalname,\n                            style: {\n                              margin: \"10px\",\n                              height: \"100px\",\n                              width: \"100px\"\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                        width: 3,\n                        children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                          children: /*#__PURE__*/_jsxDEV(Header, {\n                            as: \"h4\",\n                            color: \"red\",\n                            children: files.originalname.slice(0, 7)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 249,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                          children: /*#__PURE__*/_jsxDEV(Header, {\n                            as: \"h4\",\n                            color: \"grey\",\n                            children: [files.type.slice(0, 7), \" File\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 254,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 253,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: files.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                          width: 3,\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            style: {\n                              margin: \"10px\",\n                              height: \"100px\",\n                              width: \"100px\"\n                            },\n                            src: process.env.PUBLIC_URL + \"/files-type/\" + \"noFile.png\",\n                            alt: files.originalname\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 268,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 267,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                          width: 3,\n                          children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                            children: /*#__PURE__*/_jsxDEV(Header, {\n                              as: \"h4\",\n                              color: \"red\",\n                              children: files.originalname.slice(0, 7)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 284,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 283,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                            children: /*#__PURE__*/_jsxDEV(Header, {\n                              as: \"h4\",\n                              color: \"grey\",\n                              children: [files.type.slice(0, 7), \" File\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 289,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 288,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 282,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: \"Your Task\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                      children: state.taskStatus === \"remis\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(Message, {\n                          positive: true,\n                          children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                            children: \"Task Added Succesfully\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 312,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 311,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\" \", /*#__PURE__*/_jsxDEV(Message, {\n                          header: \"Upload Your File Here \",\n                          content: \"Good Luck For your assignment\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 320,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ModalTask, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                    extra: true,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ui two buttons\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        basic: true,\n                        color: \"red\",\n                        onClick: () => submitTask(),\n                        children: \"Rendre Task\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskFileDetail, \"5PJVzZUadrSI0v3UyzQK8KRpHno=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch];\n});\n\n_c = TaskFileDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFileDetail\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TaskFileDetail.js"],"names":["React","useEffect","useState","ReactPlayer","useDispatch","useSelector","useParams","ReactTimeAgo","Button","Card","Container","Divider","Grid","Header","Icon","Image","Message","getDetailByTaskByStudent","rendreTask","ModalTask","TaskFileDetail","id","state","grades","files","tasks","grade","taskStatus","listReponse","dispatch","submitTask","console","log","then","task","title","DateAt","description","listQuestion","map","index","type","url","process","env","PUBLIC_URL","margin","height","width","originalname","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\nimport {\n  Button,\n  Card,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Message,\n} from \"semantic-ui-react\";\nimport { getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\nimport ModalTask from \"./ModalTask\";\n\nexport default function TaskFileDetail() {\n  const { id } = useParams();\n  const state = useSelector((state) => state.grades.grades[0]);\n  const files = useSelector((state) => state.tasks.files);\n\n  const grade = {\n    id: id,\n    taskStatus: \"remis\",\n    listReponse: files,\n  };\n\n  const dispatch = useDispatch();\n  const submitTask = () => {\n    console.log(\"grade : \");\n    console.log(grade);\n    dispatch(rendreTask(grade)).then(() => {\n      dispatch(getDetailByTaskByStudent(id));\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getDetailByTaskByStudent(id));\n  }, [id, dispatch]);\n\n  return (\n    <div>\n      {!state ? (\n        <></>\n      ) : (\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={1}></Grid.Column>\n            <Grid.Column width={14}>\n              <Grid>\n                {\" \"}\n                <Grid.Row>\n                  {\" \"}\n                  <Grid.Column width={12}>\n                    <Header as=\"h1\">\n                      <Icon name=\"file alternate\" />\n                      <Header.Content>\n                        {state.task.title}\n                        <Header.Subheader>\n                          <ReactTimeAgo\n                            date={state.task.DateAt}\n                            locale=\"en-US\"\n                          />\n                        </Header.Subheader>\n                      </Header.Content>\n                    </Header>\n                    <Divider></Divider>\n                    <br />\n                    <Container>\n                      <p>{state.task.description}</p>\n                    </Container>\n                    <Grid>\n                      <Grid.Row>\n                        {!state.task.listQuestion ? (\n                          <></>\n                        ) : (\n                          state.task.listQuestion.map((files, index) =>\n                          files.type === \"application/pdf\" ? (\n                            <div key={index}>\n                              <a\n                                href={files.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                <div>\n                                  <Grid.Column width={3}>\n                                    <img\n                                      src={\n                                        process.env.PUBLIC_URL +\n                                        \"/files-type/\" +\n                                        \"pdf\" +\n                                        \".png\"\n                                      }\n                                      style={{\n                                        margin: \"10px\",\n                                        height: \"100px\",\n                                        width: \"100px\",\n                                      }}\n                                      alt=\"\"\n                                    />\n                                  </Grid.Column>\n                                  <Grid.Column width={3}>\n                                    <Grid.Row>\n                                      <Header as=\"h4\" color=\"red\">\n                                        {files.originalname.slice(0, 7)}\n                                      </Header>\n                                    </Grid.Row>\n                                    <Grid.Row>\n                                      <Header as=\"h4\" color=\"grey\">\n                                        {files.type.slice(0, 7)} File\n                                      </Header>\n                                    </Grid.Row>\n                                  </Grid.Column>\n                                </div>\n                              </a>\n                            </div>\n                          ) : files.type ===\n                            \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ? (\n                            <div key={index}>\n                              <a\n                                href={files.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                <div>\n                                  <Grid.Column width={3}>\n                                    <img\n                                      src={\n                                        process.env.PUBLIC_URL +\n                                        \"/files-type/\" +\n                                        \"pptx\" +\n                                        \".png\"\n                                      }\n                                      style={{\n                                        margin: \"10px\",\n                                        height: \"100px\",\n                                        width: \"100px\",\n                                      }}\n                                      alt=\"\"\n                                    />\n                                  </Grid.Column>\n                                  <Grid.Column width={3}>\n                                    <Grid.Row>\n                                      <Header as=\"h4\" color=\"red\">\n                                        {files.originalname.slice(0, 7)}\n                                      </Header>\n                                    </Grid.Row>\n                                    <Grid.Row>\n                                      <Header as=\"h4\" color=\"grey\">\n                                        {files.type.slice(0, 7)} File\n                                      </Header>\n                                    </Grid.Row>\n                                  </Grid.Column>\n                                </div>\n                              </a>\n                            </div>\n                          ) : files.type ===\n                            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ? (\n                            <div key={index}>\n                              <a\n                                href={files.url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                <div>\n                                  <Grid.Column width={3}>\n                                    <img\n                                      src={\n                                        process.env.PUBLIC_URL +\n                                        \"/files-type/\" +\n                                        \"docx\" +\n                                        \".png\"\n                                      }\n                                      style={{\n                                        margin: \"10px\",\n                                        height: \"100px\",\n                                        width: \"100px\",\n                                      }}\n                                      alt=\"\"\n                                    />\n                                  </Grid.Column>\n                                  <Grid.Column width={3}>\n                                    <Grid.Row>\n                                      <Header as=\"h4\" color=\"red\">\n                                        {files.originalname.slice(0, 7)}\n                                      </Header>\n                                    </Grid.Row>\n                                    <Grid.Row>\n                                      <Header as=\"h4\" color=\"grey\">\n                                        {files.type.slice(0, 7)} File\n                                      </Header>\n                                    </Grid.Row>\n                                  </Grid.Column>\n                                </div>\n                              </a>\n                            </div>\n                          ) : files.type === \"audio/mpeg\" ||\n                            files.type === \"video/mp4\" ? (\n                            <div>\n                              <Grid.Column width={3}>\n                                <ReactPlayer\n                                  key={index}\n                                  width=\"240px\"\n                                  height=\"100px\"\n                                  controls={true}\n                                  url={files.url}\n                                />\n                              </Grid.Column>\n                              <Grid.Column width={3}>\n                                <Grid.Row>\n                                  <Header as=\"h4\" color=\"red\">\n                                    {files.originalname}\n                                  </Header>\n                                </Grid.Row>\n                                <Grid.Row>\n                                  <Header as=\"h4\" color=\"grey\">\n                                    {files.type.slice(0, 7)} File\n                                  </Header>\n                                </Grid.Row>\n                              </Grid.Column>\n                            </div>\n                          ) : files.type === \"image/png\" ||\n                            files.type === \"image/jpg\" ||\n                            files.type === \"image/jpeg\" ||\n                            files.type === \"image/gif\" ? (\n                            <div>\n                              <Grid.Column width={3}>\n                                <a\n                                  href={files.url}\n                                  target=\"_blank\"\n                                  rel=\"noopener noreferrer\"\n                                >\n                                  <img\n                                    src={files.url}\n                                    alt={files.originalname}\n                                    style={{\n                                      margin: \"10px\",\n                                      height: \"100px\",\n                                      width: \"100px\",\n                                    }}\n                                  />\n                                </a>\n                              </Grid.Column>\n                              <Grid.Column width={3}>\n                                <Grid.Row>\n                                  <Header as=\"h4\" color=\"red\">\n                                    {files.originalname.slice(0, 7)}\n                                  </Header>\n                                </Grid.Row>\n                                <Grid.Row>\n                                  <Header as=\"h4\" color=\"grey\">\n                                    {files.type.slice(0, 7)} File\n                                  </Header>\n                                </Grid.Row>\n                              </Grid.Column>\n                            </div>\n                          ) : (\n                            <a\n                              href={files.url}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <div>\n                                <Grid.Column width={3}>\n                                  <img\n                                    style={{\n                                      margin: \"10px\",\n                                      height: \"100px\",\n                                      width: \"100px\",\n                                    }}\n                                    src={\n                                      process.env.PUBLIC_URL +\n                                      \"/files-type/\" +\n                                      \"noFile.png\"\n                                    }\n                                    alt={files.originalname}\n                                  />\n                                </Grid.Column>\n                                <Grid.Column width={3}>\n                                  <Grid.Row>\n                                    <Header as=\"h4\" color=\"red\">\n                                      {files.originalname.slice(0, 7)}\n                                    </Header>\n                                  </Grid.Row>\n                                  <Grid.Row>\n                                    <Header as=\"h4\" color=\"grey\">\n                                      {files.type.slice(0, 7)} File\n                                    </Header>\n                                  </Grid.Row>\n                                </Grid.Column>\n                              </div>\n                            </a>\n                          ))\n                        )}\n                      </Grid.Row>\n                    </Grid>\n                    <br />\n                    <br />\n                  </Grid.Column>\n                  <Grid.Column width={4}>\n                    <Card>\n                      <Card.Content>\n                        <Card.Header>Your Task</Card.Header>\n\n                        <Card.Description>\n                          {state.taskStatus === \"remis\" ? (\n                            <>\n                              <Message positive>\n                                <Message.Header>\n                                  Task Added Succesfully\n                                </Message.Header>\n                              </Message>\n                            </>\n                          ) : (\n                            <>\n                              {\" \"}\n                              <Message\n                                header=\"Upload Your File Here \"\n                                content=\"Good Luck For your assignment\"\n                              />\n                            </>\n                          )}\n                        </Card.Description>\n                        <br />\n                        <ModalTask />\n                      </Card.Content>\n                      <Card.Content extra>\n                        <div className=\"ui two buttons\">\n                          <Button\n                            basic\n                            color=\"red\"\n                            onClick={() => submitTask()}\n                          >\n                            Rendre Task\n                          </Button>\n                        </div>\n                      </Card.Content>\n                    </Card>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Grid.Column>\n\n            <Grid.Column width={1}></Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}