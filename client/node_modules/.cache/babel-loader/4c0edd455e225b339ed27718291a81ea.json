{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const rendreTask = createAsyncThunk(\"Task/rendreTask\", async grade => {\n  const promise = await axios.put(`https://closer-server.herokuapp.com/grade/rendreTask/${grade.id}`, grade).then(response => {\n    console.log(response);\n    const data = response.data;\n    console.log(data);\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const getDetailByTaskByStudent = createAsyncThunk(\"Grade/getDetailByTaskByStudent\", async id => {\n  const promise = await axios.get(`https://closer-server.herokuapp.com/grade/DetailByTaskByStudent/${id}`).then(response => {\n    const data = response.data;\n    console.log(data);\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const getListQuestionTasksById = createAsyncThunk(\"Grade/getListQuestionById\", async id => {\n  const {\n    data\n  } = await axios.get(`https://closer-server.herokuapp.com/grade/listQuestion/${id}`);\n  return data;\n});\nexport const assignGradeToStudent = createAsyncThunk(\"Task/UpdateTask\", async grade => {\n  const promise = await axios.put(`https://closer-server.herokuapp.com/grade/`, grade).then(response => {\n    const data = response.data;\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const getTasksById = createAsyncThunk(\"Grade/getTasksById\", async taskDetail => {\n  const promise = await axios.get(`https://closer-server.herokuapp.com/grade?idUser=${taskDetail.idUser}&idClass=${taskDetail.idClass}`).then(response => {\n    const data = response.data;\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const getGrades = createAsyncThunk(\"Grade/getgrade\", async () => {\n  const {\n    data\n  } = await axios.get(\"https://closer-server.herokuapp.com/grade\");\n  return data;\n});\nexport const postGrades = createAsyncThunk(\"Grade/posteGrade\", async grade => {\n  const {\n    response\n  } = await axios.post(\"https://closer-server.herokuapp.com/grade\", grade);\n  return response.data;\n});\nexport const gradeSlice = createSlice({\n  name: \"Grade\",\n  initialState: {\n    grades: [],\n    listQuestion: [],\n    grade: {},\n    status: null\n  },\n  extraReducers: {\n    [rendreTask.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [rendreTask.fulfilled]: (state, action) => {\n      const index = state.grades.findIndex(item => item._id === action.payload._id);\n\n      if (index !== -1) {\n        state.grades[index] = action.payload;\n        state.status = \"success\";\n      }\n    },\n    [rendreTask.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getGrades.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getGrades.fulfilled]: (state, {\n      payload\n    }) => {\n      state.grades = payload;\n      state.status = \"success\";\n    },\n    [getGrades.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getTasksById.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getTasksById.fulfilled]: (state, action) => {\n      state.grades = action.payload;\n      state.status = \"success\";\n    },\n    [getTasksById.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    postGrades: (state, action) => {\n      state.grades.push(action.payload);\n    },\n    [assignGradeToStudent.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [assignGradeToStudent.fulfilled]: (state, action) => {\n      const payload = action.payload;\n      const index = state.grades.findIndex(item => item._id === payload._id);\n\n      if (index !== -1) {\n        state.grades[index] = payload;\n        state.status = \"success\";\n      }\n    },\n    [assignGradeToStudent.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getListQuestionTasksById.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getListQuestionTasksById.fulfilled]: (state, action) => {\n      //console.log(action.payload);\n      state.listQuestion = action.payload[0].task.listQuestion;\n    },\n    [getListQuestionTasksById.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getDetailByTaskByStudent.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDetailByTaskByStudent.fulfilled]: (state, action) => {\n      //console.log( action.payload);\n      state.grade = action.payload;\n      state.status = \"success\";\n    },\n    [getDetailByTaskByStudent.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nexport default gradeSlice.reducer;","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/redux/slices/Grade.js"],"names":["createAsyncThunk","createSlice","axios","rendreTask","grade","promise","put","id","then","response","console","log","data","getDetailByTaskByStudent","get","getListQuestionTasksById","assignGradeToStudent","getTasksById","taskDetail","idUser","idClass","getGrades","postGrades","post","gradeSlice","name","initialState","grades","listQuestion","status","extraReducers","pending","state","action","fulfilled","index","findIndex","item","_id","payload","rejected","push","task","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const rendreTask = createAsyncThunk(\"Task/rendreTask\", async (grade) => {\r\n  const promise = await axios.put(\r\n    `https://closer-server.herokuapp.com/grade/rendreTask/${grade.id}`,\r\n    grade\r\n  ).then((response) => {\r\n    console.log(response);\r\n    const data = response.data;\r\n    console.log(data);\r\n    return data;\r\n  });\r\n\r\nconst data = await promise;\r\nreturn data;\r\n});\r\nexport const getDetailByTaskByStudent = createAsyncThunk(\r\n  \"Grade/getDetailByTaskByStudent\",\r\n  async (id) => {\r\n    const promise = await axios.get(\r\n      `https://closer-server.herokuapp.com/grade/DetailByTaskByStudent/${id}`\r\n    ).then((response) => {\r\n\r\n      const data = response.data;\r\n      console.log(data);\r\n      return data;\r\n    });\r\n  \r\n  const data = await promise;\r\n  return data;\r\n  }\r\n);\r\nexport const getListQuestionTasksById = createAsyncThunk(\r\n  \"Grade/getListQuestionById\",\r\n  async (id) => {\r\n    const { data } = await axios.get(\r\n      `https://closer-server.herokuapp.com/grade/listQuestion/${id}`\r\n    );\r\n\r\n    return data;\r\n  }\r\n);\r\nexport const assignGradeToStudent = createAsyncThunk(\r\n  \"Task/UpdateTask\",\r\n  async (grade) => {\r\n    const promise = await axios.put(\r\n      `https://closer-server.herokuapp.com/grade/`,\r\n      grade\r\n    ).then((response) => {\r\n      const data = response.data;\r\n      return data;\r\n    });\r\n  \r\n  const data = await promise;\r\n  return data;\r\n  }\r\n);\r\nexport const getTasksById = createAsyncThunk(\r\n  \"Grade/getTasksById\",\r\n  async (taskDetail) => {\r\n    const promise = await axios.get(\r\n      `https://closer-server.herokuapp.com/grade?idUser=${taskDetail.idUser}&idClass=${taskDetail.idClass}`\r\n    ).then((response) => {\r\n      const data = response.data;\r\n      return data;\r\n    });\r\n  \r\n  const data = await promise;\r\n  return data;\r\n  }\r\n);\r\n\r\nexport const getGrades = createAsyncThunk(\"Grade/getgrade\", async () => {\r\n  const { data } = await axios.get(\"https://closer-server.herokuapp.com/grade\");\r\n\r\n  return data;\r\n});\r\n\r\nexport const postGrades = createAsyncThunk(\r\n  \"Grade/posteGrade\",\r\n  async (grade) => {\r\n    const { response } = await axios.post(\r\n      \"https://closer-server.herokuapp.com/grade\",\r\n      grade\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const gradeSlice = createSlice({\r\n  name: \"Grade\",\r\n  initialState: {\r\n    grades: [],\r\n    listQuestion: [],\r\n      grade : {},\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [rendreTask.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [rendreTask.fulfilled]: (state, action) => {\r\n      const index = state.grades.findIndex(\r\n        (item) => item._id === action.payload._id\r\n      );\r\n      if (index !== -1) {\r\n        state.grades[index] = action.payload;\r\n        state.status = \"success\";\r\n      }\r\n       \r\n    },\r\n    [rendreTask.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [getGrades.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getGrades.fulfilled]: (state, { payload }) => {\r\n      state.grades = payload;\r\n      state.status = \"success\";\r\n    },\r\n    [getGrades.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [getTasksById.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getTasksById.fulfilled]: (state, action) => {\r\n      state.grades = action.payload;\r\n      state.status = \"success\";\r\n    },\r\n    [getTasksById.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n\r\n    postGrades: (state, action) => {\r\n      state.grades.push(action.payload);\r\n    },\r\n    [assignGradeToStudent.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [assignGradeToStudent.fulfilled]: (state,  action) => {\r\n      const payload = action.payload;\r\n      const index = state.grades.findIndex(\r\n        (item) => item._id === payload._id\r\n      );\r\n      if (index !== -1) {\r\n        state.grades[index] = payload;\r\n        state.status = \"success\";\r\n      }\r\n    },\r\n    [assignGradeToStudent.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [getListQuestionTasksById.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getListQuestionTasksById.fulfilled]: (state, action) => {\r\n      //console.log(action.payload);\r\n      state.listQuestion = action.payload[0].task.listQuestion;\r\n    },\r\n    [getListQuestionTasksById.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [getDetailByTaskByStudent.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getDetailByTaskByStudent.fulfilled]: (state, action) => {\r\n      //console.log( action.payload);\r\n      state.grade = action.payload;\r\n      state.status = \"success\";\r\n    },\r\n    [getDetailByTaskByStudent.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default gradeSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}