{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\DisplayTaskTeacher.js\",\n    _s = $RefreshSig$();\n\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Statistic, Icon, Divider, Item, Header, Segment, Grid, Dropdown } from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { getNbrTasksMissing, getNbrTasksRemis, getTaskByTeacher, updateTaskStatus, assignAfterSave } from \"../../redux/slices/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DisplayTaskTeacher() {\n  _s();\n\n  const tasks = useSelector(state => state.tasks.tasks);\n  const remis = useSelector(state => state.tasks.nbrRemis);\n  const missing = useSelector(state => state.tasks.nbrMissing);\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const dispatch = useDispatch();\n  const taskDetail = {\n    \"idUser\": isAuth()._id,\n    \"idClass\": currentClass._id\n  };\n\n  const onSubmitAssignTask = task => {\n    // dispatch(assignAfterSave(task));\n    dispatch(updateTaskStatus(task)).then(() => {\n      dispatch(assignAfterSave(task)).then(() => {\n        dispatch(getTaskByTeacher(taskDetail));\n      });\n    });\n  };\n\n  const getItemInfo = id => {\n    dispatch(getNbrTasksMissing(id));\n    dispatch(getNbrTasksRemis(id));\n  };\n\n  useEffect(() => {\n    dispatch(getTaskByTeacher(taskDetail));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      content: \"List Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), tasks.length <= 0 ? /*#__PURE__*/_jsxDEV(Segment, {\n      placeholder: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        icon: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), \"No Tasks Added.\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/AddTask\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"google plus\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : tasks.map((task, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Segment, {\n        color: \"grey\",\n        raised: true,\n        children: /*#__PURE__*/_jsxDEV(Item.Group, {\n          divided: true,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n              size: \"tiny\",\n              avatar: true,\n              src: process.env.PUBLIC_URL + \"/quiz.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/DetailTask/\" + task._id,\n                children: /*#__PURE__*/_jsxDEV(Item.Header, {\n                  as: \"a\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cinema\",\n                  children: moment(task.endDate).format(\"MMMM Do yy\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              columns: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Grid.Row, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Statistic.Group, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                    color: \"red\",\n                    children: [/*#__PURE__*/_jsxDEV(Statistic.Value, {\n                      children: [getItemInfo.call(this, task._id), missing]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Statistic.Label, {\n                      children: \"Missing\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      color: \"green\",\n                      children: [/*#__PURE__*/_jsxDEV(Statistic.Value, {\n                        children: [getItemInfo.call(this, task._id), remis]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Statistic.Label, {\n                        children: \"Done\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  fluid: true,\n                  pointing: true,\n                  direction: \"left\",\n                  className: \"icon\",\n                  icon: \"ellipsis vertical\",\n                  children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  children: task.status === \"not assign\" ? /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"red\",\n                    type: \"submit\",\n                    onClick: () => onSubmitAssignTask(task),\n                    children: \"Assign\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true);\n}\n\n_s(DisplayTaskTeacher, \"uUrKjWqm14vhm5PcsopOVcxzA6E=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = DisplayTaskTeacher;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTaskTeacher\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/DisplayTaskTeacher.js"],"names":["moment","React","useEffect","useState","useSelector","useDispatch","Link","Button","Statistic","Icon","Divider","Item","Header","Segment","Grid","Dropdown","isAuth","getNbrTasksMissing","getNbrTasksRemis","getTaskByTeacher","updateTaskStatus","assignAfterSave","DisplayTaskTeacher","tasks","state","remis","nbrRemis","missing","nbrMissing","currentClass","JSON","parse","localStorage","getItem","dispatch","taskDetail","_id","onSubmitAssignTask","task","then","getItemInfo","id","length","map","index","process","env","PUBLIC_URL","title","endDate","format","description","call","status"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Statistic,\n  Icon,\n  Divider,\n  Item,\n\n  Header,\n  Segment,\n  Grid,\n  Dropdown,\n\n} from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth\";\n\nimport {\n  getNbrTasksMissing,\n  getNbrTasksRemis,\n  getTaskByTeacher,\n  updateTaskStatus,\n\n  assignAfterSave,\n} from \"../../redux/slices/Task\";\n\nexport default function DisplayTaskTeacher() {\n  const tasks = useSelector((state) => state.tasks.tasks);\n  const remis = useSelector((state) => state.tasks.nbrRemis);\n  const missing = useSelector((state) => state.tasks.nbrMissing);\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const dispatch = useDispatch();\n  const taskDetail={\n    \"idUser\":isAuth()._id,\n    \"idClass\" : currentClass._id,\n    \n  }\n  const onSubmitAssignTask = (task) => {\n    // dispatch(assignAfterSave(task));\n    dispatch(updateTaskStatus(task)).then(() => {\n      dispatch(assignAfterSave(task)).then(() => {\n        dispatch(getTaskByTeacher(taskDetail));\n      });\n    });\n  };\n\n\n  const getItemInfo = (id) => {\n    dispatch(getNbrTasksMissing(id));\n    dispatch(getNbrTasksRemis(id));\n  };\n  useEffect(() => {\n    dispatch(getTaskByTeacher(taskDetail));\n  }, [dispatch]);\n  return (\n    <>\n      <Divider hidden />\n\n      <Header as=\"h2\" content=\"List Task\" />\n\n      <Divider />\n\n      {tasks.length <=0  ? (\n        <Segment placeholder>\n          <Header icon>\n            <Icon name=\"tasks\" />\n            No Tasks Added.\n            <Link to=\"/AddTask\">\n              <Button color='google plus' >\n           Add Task\n              </Button>\n              \n            </Link>\n          </Header>\n        </Segment>\n      ) : (\n        tasks.map((task, index) => (\n         <>\n            <Segment color=\"grey\" raised>\n              <Item.Group divided key={index}>\n             \n                <Item>\n              \n                  <Item.Image\n                    size=\"tiny\"\n                    avatar\n                    src={process.env.PUBLIC_URL + \"/quiz.png\"}\n                  />\n  \n                  <Item.Content>\n                  <Link to={\"/DetailTask/\" + task._id}>\n                    <Item.Header as=\"a\">{task.title}</Item.Header>\n                    </Link>\n                    <Item.Meta>\n                      <span className=\"cinema\">\n                        {moment(task.endDate).format(\"MMMM Do yy\")}\n                      </span>\n                    </Item.Meta>\n                    <Item.Description>{task.description}</Item.Description>\n                  </Item.Content>\n                \n                  <Grid columns=\"equal\">\n                  <Grid.Row>\n                 \n                  </Grid.Row>\n                    <Grid.Row>\n                     \n                      <Statistic.Group size=\"small\">\n                        <Statistic color=\"red\">\n                          <Statistic.Value>\n                            {getItemInfo.call(this, task._id)}\n                            {missing}\n                          </Statistic.Value>\n\n                          <Statistic.Label>Missing</Statistic.Label>\n                        </Statistic>\n\n                        <Grid.Column>\n                          <Statistic color=\"green\">\n                            <Statistic.Value>\n                              {getItemInfo.call(this, task._id)}\n                              {remis}\n                            </Statistic.Value>\n                            <Statistic.Label>Done</Statistic.Label>\n                          </Statistic>\n                        </Grid.Column>\n                      </Statistic.Group>\n                      <Dropdown\n                              fluid\n                              pointing\n                              direction=\"left\"\n                              className=\"icon\"\n                              icon=\"ellipsis vertical\"\n                            >\n                              <Dropdown.Menu>\n                              \n                              </Dropdown.Menu>\n                            </Dropdown>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                      <Grid.Column>\n                        {task.status === \"not assign\" ? (\n                          <Button\n                            color=\"red\"\n                            type=\"submit\"\n                            onClick={() => onSubmitAssignTask(task)}\n                          >\n                            Assign\n                          </Button>\n                        ) : (\n                          <></>\n                        )}\n                      </Grid.Column>\n                    \n                    </Grid.Row>\n                  </Grid>\n                </Item>\n              </Item.Group>\n            </Segment>\n\n            <Divider hidden></Divider>\n          </>\n        ))\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}