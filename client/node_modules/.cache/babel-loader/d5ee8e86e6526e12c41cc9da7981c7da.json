{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\coursesAndSeances\\\\TableSeance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\nimport { Card, Dropdown, Feed, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport { GetSeancesByIdClass, RetrieveSeances } from \"../../redux/slices/Seance\";\nimport ModalConfirmDelete from \"./ModalConfirmDelete\";\nimport ModalSeance from \"./ModalSeance\";\nimport { RetrieveCoursesByIdSeance } from \"../../redux/slices/Courses\";\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TableSeance(props) {\n  _s();\n\n  const seances = useSelector(state => state.seance.seance);\n  const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  console.log(seances);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(GetSeancesByIdClass(CurrentClass._id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: seances.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        centered: true,\n        size: \"medium\",\n        src: process.env.PUBLIC_URL + \"/NothingToDisplay.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h4\",\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Header.Content, {\n          children: \"No themes found \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/stream\",\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            color: \"red\",\n            as: \"h3\",\n            textAlign: \"center\",\n            children: \"All Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n        children: seances.map(seance => /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                stackable: true,\n                children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                    width: 12,\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/seance/${seance.titre}/${seance._id}`,\n                      children: /*#__PURE__*/_jsxDEV(Header, {\n                        as: \"h3\",\n                        color: \"red\",\n                        children: seance.titre\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 67,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                    width: 4,\n                    children: isAuth().role === \"Teacher\" ? /*#__PURE__*/_jsxDEV(Dropdown, {\n                      fluid: true,\n                      pointing: true,\n                      direction: \"left\",\n                      className: \"icon\",\n                      icon: \"ellipsis vertical\",\n                      children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                        children: [/*#__PURE__*/_jsxDEV(ModalSeance, {\n                          headerTitle: \"Edit Seance\",\n                          buttonTriggerTitle: \"Edit\",\n                          buttonSubmitTitle: \"Save\",\n                          buttonColor: \"black\",\n                          icon: \"edit\",\n                          seanceId: seance._id //onSeanceUpdated={props.onSeanceUpdated}\n                          //server={props.server}\n                          //socket={this.props.socket}\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 82,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(ModalConfirmDelete, {\n                          headerTitle: \"Delete Seance\",\n                          buttonTriggerTitle: \"Delete\",\n                          buttonColor: \"red\",\n                          icon: \"trash\",\n                          seance: seance // onSeanceDeleted={props.onSeanceDeleted}\n                          //server={props.server}\n                          //socket={props.socket}\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 94,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n              children: /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                date: seance.dateCreation,\n                locale: \"en-US\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: seance.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, seance._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableSeance, \"+WNXX2/ngJLzbwmaMx2YifY/dog=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TableSeance;\nexport default TableSeance;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableSeance\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/coursesAndSeances/TableSeance.js"],"names":["React","useState","useEffect","useDispatch","useSelector","ReactTimeAgo","Card","Dropdown","Feed","Grid","Header","Image","Segment","GetSeancesByIdClass","RetrieveSeances","ModalConfirmDelete","ModalSeance","RetrieveCoursesByIdSeance","Link","BrowserRouter","Router","isAuth","TableSeance","props","seances","state","seance","CurrentClass","JSON","parse","localStorage","getItem","console","log","dispatch","_id","length","process","env","PUBLIC_URL","map","titre","role","dateCreation","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport {\r\n  Card,\r\n  Dropdown,\r\n  Feed,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  GetSeancesByIdClass,\r\n  RetrieveSeances,\r\n} from \"../../redux/slices/Seance\";\r\nimport ModalConfirmDelete from \"./ModalConfirmDelete\";\r\nimport ModalSeance from \"./ModalSeance\";\r\nimport { RetrieveCoursesByIdSeance } from \"../../redux/slices/Courses\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\n\r\nfunction TableSeance(props) {\r\n  const seances = useSelector((state) => state.seance.seance);\r\n\r\n  const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  console.log(seances);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(GetSeancesByIdClass(CurrentClass._id));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {seances.length === 0 ? (\r\n        <>\r\n          <br />\r\n          <Image\r\n            centered\r\n            size=\"medium\"\r\n            src={process.env.PUBLIC_URL + \"/NothingToDisplay.png\"}\r\n          />\r\n          <Header as=\"h4\" textAlign=\"center\">\r\n            <Header.Content>No themes found </Header.Content>\r\n          </Header>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <Segment>\r\n            <Link to=\"/stream\">\r\n              <Header color=\"red\" as=\"h3\" textAlign=\"center\">\r\n                All Themes\r\n              </Header>\r\n            </Link>\r\n          </Segment>\r\n\r\n          <Card.Group>\r\n            {seances.map((seance) => (\r\n              <Card key={seance._id}>\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    <Grid stackable>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={12}>\r\n                          <Link to={`/seance/${seance.titre}/${seance._id}`}>\r\n                            <Header as=\"h3\" color=\"red\">\r\n                              {seance.titre}\r\n                            </Header>\r\n                          </Link>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={4}>\r\n                          {isAuth().role === \"Teacher\" ? (\r\n                            <Dropdown\r\n                              fluid\r\n                              pointing\r\n                              direction=\"left\"\r\n                              className=\"icon\"\r\n                              icon=\"ellipsis vertical\"\r\n                            >\r\n                              <Dropdown.Menu>\r\n                                <ModalSeance\r\n                                  headerTitle=\"Edit Seance\"\r\n                                  buttonTriggerTitle=\"Edit\"\r\n                                  buttonSubmitTitle=\"Save\"\r\n                                  buttonColor=\"black\"\r\n                                  icon=\"edit\"\r\n                                  seanceId={seance._id}\r\n                                  //onSeanceUpdated={props.onSeanceUpdated}\r\n                                  //server={props.server}\r\n                                  //socket={this.props.socket}\r\n                                />\r\n\r\n                                <ModalConfirmDelete\r\n                                  headerTitle=\"Delete Seance\"\r\n                                  buttonTriggerTitle=\"Delete\"\r\n                                  buttonColor=\"red\"\r\n                                  icon=\"trash\"\r\n                                  seance={seance}\r\n                                  // onSeanceDeleted={props.onSeanceDeleted}\r\n                                  //server={props.server}\r\n                                  //socket={props.socket}\r\n                                />\r\n                              </Dropdown.Menu>\r\n                            </Dropdown>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Card.Header>\r\n                  <Card.Meta>\r\n                    <ReactTimeAgo date={seance.dateCreation} locale=\"en-US\" />\r\n                  </Card.Meta>\r\n                  <Card.Description>{seance.description}</Card.Description>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableSeance;\r\n"]},"metadata":{},"sourceType":"module"}