{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TasksAssign.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react';\nimport { getTasksById } from '../../redux/slices/Grade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst student = [{\n  id: \"6065ef725837a846a0aa2718\",\n  student: 'Sofien'\n}];\nexport default function TasksAssign(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.taskAssign.length <= 0 ? /*#__PURE__*/_jsxDEV(Segment, {\n      placeholder: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        icon: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 3\n        }, this), \"No Assign Tasks For you \", student[0].student, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 1\n    }, this) : props.taskAssign.map((task, index) => task.taskStatus === \"Attribué\" ? /*#__PURE__*/_jsxDEV(Segment, {\n      color: \"red\",\n      raised: true,\n      children: /*#__PURE__*/_jsxDEV(Item.Group, {\n        divided: true,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n            size: \"tiny\",\n            avatar: true,\n            src: \"https://react.semantic-ui.com/images/avatar/small/helen.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n              as: \"a\",\n              children: task.task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: task.taskStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = TasksAssign;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksAssign\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TasksAssign.js"],"names":["React","useEffect","useDispatch","useSelector","Button","Divider","Header","Icon","Item","Label","Segment","Statistic","getTasksById","student","id","TasksAssign","props","taskAssign","length","map","task","index","taskStatus","title","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,KAA9C,EAAqDC,OAArD,EAA8DC,SAA9D,QAA+E,mBAA/E;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,OAAO,GAAG,CACZ;AAACC,EAAAA,EAAE,EAAG,0BAAN;AAAkCD,EAAAA,OAAO,EAAG;AAA5C,CADY,CAAhB;AAEA,eAAe,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAIvC,sBACI;AAAA,cACOA,KAAK,CAACC,UAAN,CAAiBC,MAAjB,IAA2B,CAA3B,gBAEf,QAAC,OAAD;AAAS,MAAA,WAAW,MAApB;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,8BAE2BL,OAAO,CAAC,CAAD,CAAP,CAAWA,OAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFe,GAUAG,KAAK,CAACC,UAAN,CAAiBE,GAAjB,CAAqB,CAACC,IAAD,EAAMC,KAAN,KACrBD,IAAI,CAACE,UAAL,KAAoB,UAApB,gBACO,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,KAAf;AAAqB,MAAA,MAAM,MAA3B;AAAA,6BACC,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,OAAO,MAAnB;AAAA,+BAEV,QAAC,IAAD;AAAA,kCACA,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,MAAjB;AACC,YAAA,MAAM,MADP;AACQ,YAAA,GAAG,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,kBADA,eAIC,QAAC,IAAD,CAAM,OAAN;AAAA,oCACE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,EAAE,EAAC,GAAhB;AAAA,wBAAqBF,IAAI,CAACA,IAAL,CAAUG;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,qCACE;AAAA,0BAAQH,IAAI,CAACA,IAAL,CAAUI;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,eAgBG;AAAA,sBAAQJ,IAAI,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,kBAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,SAAyBD,KAAzB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADP,gBA4BW;AAAA;AAAA;AAAA;AAAA,YA7BX;AAXP;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH;KAhDuBN,W","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react'\r\nimport { getTasksById } from '../../redux/slices/Grade';\r\n\r\nconst student = [\r\n    {id : \"6065ef725837a846a0aa2718\" ,student : 'Sofien'}]\r\nexport default function TasksAssign(props) {\r\n\r\n   \r\n   \r\n    return (\r\n        <div>\r\n             { props.taskAssign.length <= 0 ? (\r\n\r\n<Segment placeholder>\r\n<Header icon>\r\n  <Icon name='tasks' />\r\n  No Assign Tasks For you {student[0].student}.\r\n</Header>\r\n\r\n</Segment> \r\n                   ) : (\r\n               props.taskAssign.map((task,index) =>\r\n               task.taskStatus === \"Attribué\" ? (\r\n                      <Segment color=\"red\" raised> \r\n                       <Item.Group divided key={index} >\r\n                     \r\n             <Item  >\r\n             <Item.Image size='tiny' \r\n              avatar src='https://react.semantic-ui.com/images/avatar/small/helen.jpg' /> \r\n             \r\n              <Item.Content >\r\n                <Item.Header as='a'>{task.task.title}</Item.Header>\r\n                <Item.Meta>\r\n                  <span >{task.task.description}</span>\r\n                </Item.Meta>\r\n           \r\n            \r\n             \r\n                \r\n             \r\n                </Item.Content>\r\n            \r\n                <label>{task.taskStatus}</label>\r\n                \r\n             </Item>\r\n             \r\n             </Item.Group>\r\n             \r\n             </Segment>\r\n             \r\n                     ) : (<div></div>)  ))}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}