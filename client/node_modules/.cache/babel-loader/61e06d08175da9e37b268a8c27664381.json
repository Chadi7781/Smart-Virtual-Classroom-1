{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TaskQuizDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\nimport { Button, Card, Container, Divider, Grid, Header, Icon, Image, List, Message } from \"semantic-ui-react\";\nimport { getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\nimport ModalTask from \"./ModalTask\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskQuizDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const state = useSelector(state => state.grades.grades); //const files = useSelector((state) => state.tasks.files);\n\n  const [task, setTask] = useState(state[0]);\n  const grade = {\n    id: id,\n    taskStatus: \"remis\" //  listReponse: files,\n\n  };\n  const dispatch = useDispatch();\n\n  const submitTask = () => {\n    console.log(\"grade : \");\n    console.log(grade);\n    dispatch(rendreTask(grade)).then(() => {\n      dispatch(getDetailByTaskByStudent(id)).then(response => {\n        setTask(response.payload[0]);\n      });\n    });\n  }; // console.log(task);\n\n\n  useEffect(() => {\n    dispatch(getDetailByTaskByStudent(id)).then(response => {\n      setTask(response.payload[0]);\n    });\n    console.log(task);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !task ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 14,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 12,\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h1\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"file alternate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                    children: [task.task.title, /*#__PURE__*/_jsxDEV(Header.Subheader, {\n                      children: /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                        date: task.task.DateAt,\n                        locale: \"en-US\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Container, {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: task.task.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: \"Your Task\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                      children: task.taskStatus === \"Remis\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(Message, {\n                          positive: true,\n                          children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                            children: \"Task Added Succesfully\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 99,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 98,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\" \", /*#__PURE__*/_jsxDEV(Message, {\n                          header: \"Upload Your File Here \",\n                          content: \"Good Luck For your assignment\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 107,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                    extra: true,\n                    children: /*#__PURE__*/_jsxDEV(ModalTask, {\n                      task: state[0]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskQuizDetail, \"/NNk7fv86H8ef3AxzfS4eZnyxkg=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = TaskQuizDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskQuizDetail\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TaskQuizDetail.js"],"names":["React","useEffect","useState","ReactPlayer","useDispatch","useSelector","useParams","ReactTimeAgo","Button","Card","Container","Divider","Grid","Header","Icon","Image","List","Message","getDetailByTaskByStudent","rendreTask","ModalTask","TaskQuizDetail","id","state","grades","task","setTask","grade","taskStatus","dispatch","submitTask","console","log","then","response","payload","title","DateAt","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport { getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\r\nimport ModalTask from \"./ModalTask\";\r\n\r\nexport default function TaskQuizDetail() {\r\n  const { id } = useParams();\r\n  const state = useSelector((state) => state.grades.grades);\r\n  //const files = useSelector((state) => state.tasks.files);\r\n  const [task ,setTask] = useState(state[0]);\r\n\r\n  const grade = {\r\n    id: id,\r\n    taskStatus: \"remis\",\r\n  //  listReponse: files,\r\n  };\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const submitTask = () => {\r\n    console.log(\"grade : \");\r\n    console.log(grade);\r\n  \r\n    dispatch(rendreTask(grade)).then(() => {\r\n      dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n  setTask(response.payload[0]);\r\n      });\r\n    });\r\n  };\r\n // console.log(task);\r\n  useEffect(() => {\r\n    \r\n    dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n      setTask(response.payload[0]);\r\n          });\r\n          console.log(task);\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!task ? (\r\n        <></>\r\n      ) : (\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={1}></Grid.Column>\r\n            <Grid.Column width={14}>\r\n              <Grid>\r\n                {\" \"}\r\n                <Grid.Row>\r\n                  {\" \"}\r\n                  <Grid.Column width={12}>\r\n                    <Header as=\"h1\">\r\n                      <Icon name=\"file alternate\" />\r\n                      <Header.Content>\r\n                        {task.task.title}\r\n                        <Header.Subheader>\r\n                          <ReactTimeAgo\r\n                            date={task.task.DateAt}\r\n                            locale=\"en-US\"\r\n                          />\r\n                        </Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n                    <Divider></Divider>\r\n                    <br />\r\n                    <Container>\r\n                      <p>{task.task.description}</p>\r\n                    </Container>\r\n                  \r\n                  </Grid.Column>\r\n                  <Grid.Column width={4}>\r\n                    <Card>\r\n                      <Card.Content>\r\n                        <Card.Header>Your Task</Card.Header>\r\n\r\n                        <Card.Description>\r\n                          {task.taskStatus === \"Remis\" ? (\r\n                            <>\r\n                              <Message positive>\r\n                                <Message.Header>\r\n                                  Task Added Succesfully\r\n                                </Message.Header>\r\n                              </Message>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {\" \"}\r\n                              <Message\r\n                                header=\"Upload Your File Here \"\r\n                                content=\"Good Luck For your assignment\"\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Card.Description>\r\n                        <br />\r\n                   \r\n                      </Card.Content>\r\n                      <Card.Content extra>\r\n                      <ModalTask  task={state[0]}/>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={1}></Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}