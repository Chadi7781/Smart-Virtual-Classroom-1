{"ast":null,"code":"import cookie from \"js-cookie\";\nimport { GoogleLogout } from \"react-google-login\"; // Set in Cookie\n\nexport const setCookie = (key, value) => {\n  if (window !== \"undefiend\") {\n    cookie.set(key, value, {\n      // 1 Day\n      expires: 1\n    });\n  }\n}; // remove from cookie\n\nexport const removeCookie = key => {\n  if (window !== \"undefined\") {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // Get from cookie such as stored token\n// Will be useful when we need to make request to server with token\n\nexport const getCookie = key => {\n  if (window !== \"undefined\") {\n    return cookie.get(key);\n  }\n}; // Set in localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (window !== \"undefined\") {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; // Remove from localstorage\n\nexport const removeLocalStorage = key => {\n  if (window !== \"undefined\") {\n    localStorage.removeItem(key);\n  }\n}; // Auth enticate user by passing data to cookie and localstorage during signin\n\nexport const authenticate = (response, next) => {\n  console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\", response);\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  next();\n}; // Access user info from localstorage\n\nexport const isAuth = () => {\n  if (window !== \"undefined\") {\n    const cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexport const signout = next => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n};\nexport const updateUser = (response, next) => {\n  console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\", response);\n\n  if (typeof window !== \"undefined\") {\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\n    auth = response.data;\n    localStorage.setItem(\"user\", JSON.stringify(auth));\n  }\n\n  next();\n};","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/helpers/auth.js"],"names":["cookie","GoogleLogout","setCookie","key","value","window","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","next","console","log","data","token","user","isAuth","cookieChecked","getItem","parse","signout","updateUser","auth"],"mappings":"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","sourcesContent":["import cookie from \"js-cookie\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\n\r\n// Set in Cookie\r\nexport const setCookie = (key, value) => {\r\n  if (window !== \"undefiend\") {\r\n    cookie.set(key, value, {\r\n      // 1 Day\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n// remove from cookie\r\nexport const removeCookie = (key) => {\r\n  if (window !== \"undefined\") {\r\n    cookie.remove(key, {\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n\r\n// Get from cookie such as stored token\r\n// Will be useful when we need to make request to server with token\r\nexport const getCookie = (key) => {\r\n  if (window !== \"undefined\") {\r\n    return cookie.get(key);\r\n  }\r\n};\r\n\r\n// Set in localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n  if (window !== \"undefined\") {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n};\r\n\r\n// Remove from localstorage\r\nexport const removeLocalStorage = (key) => {\r\n  if (window !== \"undefined\") {\r\n    localStorage.removeItem(key);\r\n  }\r\n};\r\n\r\n// Auth enticate user by passing data to cookie and localstorage during signin\r\nexport const authenticate = (response, next) => {\r\n  console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\", response);\r\n  setCookie(\"token\", response.data.token);\r\n  setLocalStorage(\"user\", response.data.user);\r\n  next();\r\n};\r\n\r\n// Access user info from localstorage\r\nexport const isAuth = () => {\r\n  if (window !== \"undefined\") {\r\n    const cookieChecked = getCookie(\"token\");\r\n    if (cookieChecked) {\r\n      if (localStorage.getItem(\"user\")) {\r\n        return JSON.parse(localStorage.getItem(\"user\"));\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const signout = (next) => {\r\n  removeCookie(\"token\");\r\n  removeLocalStorage(\"user\");\r\n  next();\r\n};\r\n\r\nexport const updateUser = (response, next) => {\r\n  console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\", response);\r\n  if (typeof window !== \"undefined\") {\r\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\r\n    auth = response.data;\r\n    localStorage.setItem(\"user\", JSON.stringify(auth));\r\n  }\r\n  next();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}