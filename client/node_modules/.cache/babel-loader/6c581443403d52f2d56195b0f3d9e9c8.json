{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Class\\\\GetAllArchivedClassComponent.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Label, Segment, Card, Dropdown, Header } from \"semantic-ui-react\";\nimport React, { useEffect } from \"react\";\nimport { fetchclassArchived, selectclassarchived } from \"../../redux/slices/classsline\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ActivedClassComponent from \"./ActivedClassComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GetAllClassComponent() {\n  _s();\n\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\n  const [archived] = useSelector(selectclassarchived);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchclassArchived(documentData.role, documentData._id, \"Archive\"));\n  }, [dispatch]);\n\n  const aff = id => {\n    if (documentData.role === \"Teacher\") return \"Level \" + id + \"th\";else if (documentData.role === \"Student\") return \"Year \" + id;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: archived === null || archived === void 0 ? void 0 : archived.map((cl, index) => {\n      var _cl$classObjet;\n\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        columns: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              as: \"a\",\n              color: \"grey\",\n              ribbon: true,\n              children: aff(cl._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              columns: 4,\n              children: (_cl$classObjet = cl.classObjet) === null || _cl$classObjet === void 0 ? void 0 : _cl$classObjet.map((co, i) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n                children: /*#__PURE__*/_jsxDEV(Card.Group, {\n                  stackable: true,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    color: co.classColor,\n                    children: /*#__PURE__*/_jsxDEV(Card.Content, {\n                      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          stackable: true,\n                          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n                            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                              width: 12,\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h3\",\n                                color: \"red\",\n                                children: co.className\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 48,\n                                columnNumber: 35\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 47,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                              width: 2,\n                              children: co.classOwner === documentData._id ? /*#__PURE__*/_jsxDEV(Dropdown, {\n                                fluid: true,\n                                pointing: true,\n                                direction: \"left\",\n                                className: \"icon\",\n                                icon: \"ellipsis vertical\",\n                                children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                                  children: /*#__PURE__*/_jsxDEV(ActivedClassComponent, {\n                                    headerTitle: \"Active Class\",\n                                    buttonTriggerTitle: \"Active\",\n                                    classes: co\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 63,\n                                    columnNumber: 41\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 62,\n                                  columnNumber: 39\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 55,\n                                columnNumber: 37\n                              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 53,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 46,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 45,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 44,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                        children: co.classSection\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          style: {\n                            overflow: \"hidden\",\n                            whiteSpace: \"nowrap\",\n                            textOverflow: \"ellipsis\",\n                            maxHeight: 250\n                          },\n                          children: co.classDescription\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 79,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 43,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GetAllClassComponent, \"nYNq5rs+D36S1yH/NmKGiBAe06I=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = GetAllClassComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllClassComponent\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Class/GetAllArchivedClassComponent.js"],"names":["Grid","Label","Segment","Card","Dropdown","Header","React","useEffect","fetchclassArchived","selectclassarchived","useDispatch","useSelector","ActivedClassComponent","GetAllClassComponent","documentData","JSON","parse","localStorage","getItem","archived","dispatch","role","_id","aff","id","map","cl","index","classObjet","co","i","classColor","className","classOwner","classSection","overflow","whiteSpace","textOverflow","maxHeight","classDescription"],"mappings":"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","sourcesContent":["import {\r\n  Grid,\r\n  Label,\r\n  Segment,\r\n  Card,\r\n  Dropdown,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport React, {  useEffect } from \"react\";\r\nimport {\r\n  fetchclassArchived,\r\n  selectclassarchived,\r\n} from \"../../redux/slices/classsline\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ActivedClassComponent from \"./ActivedClassComponent\";\r\nexport default function GetAllClassComponent() {\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [archived] = useSelector(selectclassarchived);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchclassArchived(documentData.role, documentData._id,\"Archive\"));\r\n  },[dispatch]);\r\n  const aff = (id) => {\r\n    if (documentData.role === \"Teacher\") return \"Level \" + id + \"th\";\r\n    else if (documentData.role === \"Student\") return \"Year \" + id;\r\n  };\r\n  return (\r\n    <div>\r\n      {archived?.map((cl, index) => (\r\n        <Grid columns={1} key={index}>\r\n          <Grid.Column>\r\n            <Segment raised>\r\n              <Label as=\"a\" color=\"grey\" ribbon>\r\n                {aff(cl._id)}\r\n              </Label>\r\n              <Grid columns={4}>\r\n                {cl.classObjet?.map((co, i) => (\r\n                  <Grid.Column key={i}>\r\n                    <Card.Group stackable>\r\n                      <Card\r\n                        color={co.classColor}\r\n                      >\r\n                        <Card.Content>\r\n                          <Card.Header>\r\n                            <Grid stackable>\r\n                              <Grid.Row>\r\n                                <Grid.Column width={12}>\r\n                                  <Header as=\"h3\" color=\"red\">\r\n                                    {co.className}\r\n                                  </Header>\r\n                                </Grid.Column>\r\n\r\n                                <Grid.Column width={2}>\r\n                                  {co.classOwner === documentData._id ? (\r\n                                    <Dropdown\r\n                                      fluid\r\n                                      pointing\r\n                                      direction=\"left\"\r\n                                      className=\"icon\"\r\n                                      icon=\"ellipsis vertical\"\r\n                                    >\r\n                                      <Dropdown.Menu>\r\n                                        <ActivedClassComponent\r\n                                          headerTitle=\"Active Class\"\r\n                                          buttonTriggerTitle=\"Active\"\r\n                                          classes={co}\r\n                                        />\r\n                                      </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </Grid.Column>\r\n                              </Grid.Row>\r\n                            </Grid>\r\n                          </Card.Header>\r\n                          <Card.Meta>{co.classSection}</Card.Meta>\r\n                          <Card.Description>\r\n                            <p\r\n                              style={{\r\n                                overflow: \"hidden\",\r\n                                whiteSpace: \"nowrap\",\r\n                                textOverflow: \"ellipsis\",\r\n                                maxHeight: 250,\r\n                              }}\r\n                            >\r\n                              {co.classDescription}\r\n                            </p>\r\n                          </Card.Description>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </Card.Group>\r\n                  </Grid.Column>\r\n                ))}\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      ))} \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}