{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\answer\\\\EditAnswer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button, Form, TextArea, Modal, Icon } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { AddAnswersApi } from \"../../api/api\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchQuestions } from \"../../redux/slices/questionslice\";\nimport FileUpload from \"../../utlis/FileUpload\";\nimport { fetchAnswers } from \"../../redux/slices/answerslice\";\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditAnswer(props) {\n  _s();\n\n  const answer = props.answerSelected;\n  console.log(answer.Body);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [error] = useState({\n    visible: false,\n    message: \"\"\n  });\n  const dispatch = useDispatch();\n  const [Images, setImages] = useState([]);\n\n  const updateImages = newImages => {\n    if (newImages === null) {\n      answer.Filee.forEach(element => {\n        setImages(element);\n      });\n    } else {\n      alert(\"hi\");\n      setUp(1);\n      setImages(newImages);\n    }\n  };\n\n  const [up, setUp] = useState(0);\n  const formik = useFormik({\n    initialValues: {\n      Body: answer.Body,\n      Writerq: {\n        _id: \"604e421a647d1719cb93d08e\"\n      },\n      Filee: []\n    },\n    validationSchema: yupSchema,\n    onSubmit: async values => {\n      try {\n        if (Images.length !== 0) {\n          values.Filee = Images;\n        } else {\n          values.Filee = answer.Filee;\n        }\n\n        const res = await AddAnswersApi.putAnswers(values, answer._id);\n        dispatch(fetchAnswers(answer.Question._id));\n      } catch (error) {\n        alert(error);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Icon, {\n      name: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Update Your Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          control: TextArea,\n          placeholder: \"write your answer here\",\n          label: \"Content\",\n          name: \"Body\",\n          value: formik.values.Body,\n          onChange: formik.handleChange,\n          error: formik.errors.Body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"red\",\n          children: \"Update!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUploadEdit, {\n          refreshFunction: updateImages,\n          listfile: answer.Filee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        onClick: () => setOpen(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAnswer, \"nEAYVwted0kPGM/qj3n1YmfcKkc=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = EditAnswer;\nconst yupSchema = Yup.object({\n  Body: Yup.string().required(\"Champs requis!\")\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAnswer\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/answer/EditAnswer.js"],"names":["React","useEffect","Button","Form","TextArea","Modal","Icon","Yup","useFormik","AddAnswersApi","useState","useDispatch","fetchQuestions","FileUpload","fetchAnswers","FileUploadEdit","EditAnswer","props","answer","answerSelected","console","log","Body","open","setOpen","handleClickOpen","handleClose","error","visible","message","dispatch","Images","setImages","updateImages","newImages","Filee","forEach","element","alert","setUp","up","formik","initialValues","Writerq","_id","validationSchema","yupSchema","onSubmit","values","length","res","putAnswers","Question","handleSubmit","handleChange","errors","object","string","required"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, Form, TextArea, Modal, Icon } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddAnswersApi } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchQuestions } from \"../../redux/slices/questionslice\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport { fetchAnswers } from \"../../redux/slices/answerslice\";\r\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\r\n\r\nexport default function EditAnswer(props) {\r\n  const answer = props.answerSelected;\r\n  console.log(answer.Body);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [error] = useState({ visible: false, message: \"\" });\r\n  const dispatch = useDispatch();\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n    if (newImages === null) {\r\n      answer.Filee.forEach((element) => {\r\n        setImages(element);\r\n      });\r\n    } else {\r\n      alert(\"hi\");\r\n      setUp(1);\r\n      setImages(newImages);\r\n    }\r\n  };\r\n\r\n  const [up, setUp] = useState(0);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Body: answer.Body,\r\n      Writerq: { _id: \"604e421a647d1719cb93d08e\" },\r\n      Filee: [],\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        if (Images.length !== 0) {\r\n          values.Filee = Images;\r\n        } else {\r\n          values.Filee = answer.Filee;\r\n        }\r\n\r\n        const res = await AddAnswersApi.putAnswers(values, answer._id);\r\n        dispatch(fetchAnswers(answer.Question._id));\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Icon name=\"edit\"></Icon>}\r\n    >\r\n      <Modal.Header>Update Your Answer</Modal.Header>\r\n      <Modal.Content>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Field\r\n            control={TextArea}\r\n            placeholder=\"write your answer here\"\r\n            label=\"Content\"\r\n            name=\"Body\"\r\n            value={formik.values.Body}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.Body}\r\n          />\r\n          <Button type=\"submit\" color=\"red\">\r\n            Update!\r\n          </Button>\r\n          <FileUploadEdit\r\n            refreshFunction={updateImages}\r\n            listfile={answer.Filee}\r\n          />\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"black\" onClick={() => setOpen(false)}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\n"]},"metadata":{},"sourceType":"module"}