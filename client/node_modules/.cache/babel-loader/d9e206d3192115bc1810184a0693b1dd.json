{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TaskFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dropzone from \"react-dropzone-uploader\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport { Button, Divider } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport { addUploadFile, uploadFile } from '../../redux/slices/Task';\nimport { useDispatch } from 'react-redux';\nimport FileUpload from '../../utlis/FileUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskFile(props) {\n  _s();\n\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator\n  });\n  const [Images, setImages] = useState([]);\n  const [enableUpload, setEnableUpload] = useState(false);\n\n  const updateImages = newImages => {\n    setImages(newImages);\n  };\n\n  console.log(Images);\n  const dispatch = useDispatch();\n  const [multiple_resources, SetMultiple_resources] = useState([]);\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {\n    console.log(status, meta, file);\n\n    if (status === \"done\") {\n      SetMultiple_resources(multiple_resources.concat(file));\n    }\n\n    if (status === \"removed\") {\n      let multiple_resource = multiple_resources.slice();\n      multiple_resource = multiple_resources.filter(u => {\n        return u !== file;\n      });\n      SetMultiple_resources(multiple_resource);\n    }\n  };\n\n  var step = 2;\n\n  const testUpload = () => {\n    console.log(\"cccccc\");\n    dispatch(uploadFile(multiple_resources)).then(res => {\n      console.log(res);\n      props.addTask(tasks.listQuestion = res.payload);\n      props.addTask(tasks); //console.log(tasks)\n    }); //console.log(tasks)\n\n    props.nextStep(step + 1);\n  };\n\n  const event = () => {//props.addTask(tasks.listQuestion = inputFields);\n    // props.addTask(tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n      refreshFunction: updateImages,\n      listfile: null,\n      Enbale: enableUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"red\",\n      type: \"submit\",\n      floated: \"right\",\n      onClick: testUpload,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskFile, \"jY29QLRsq4JgP8U4ETIevErY7iQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFile\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TaskFile.js"],"names":["React","useState","Dropzone","Button","Divider","axios","addUploadFile","uploadFile","useDispatch","FileUpload","TaskFile","props","tasks","setTask","title","data","description","theme","typeTask","listQuestion","listStudents","endDate","creator","Images","setImages","enableUpload","setEnableUpload","updateImages","newImages","console","log","dispatch","multiple_resources","SetMultiple_resources","handleChangeStatus","meta","file","status","concat","multiple_resource","slice","filter","u","step","testUpload","then","res","addTask","payload","nextStep","event"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Dropzone from \"react-dropzone-uploader\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport { Button, Divider } from 'semantic-ui-react';\nimport axios from \"axios\"\nimport { addUploadFile, uploadFile } from '../../redux/slices/Task';\nimport { useDispatch } from 'react-redux';\nimport FileUpload from '../../utlis/FileUpload';\n\nexport default function TaskFile(props) {\n\n    const [tasks , setTask] = useState({\n           \n        title : props.data.title,\n        description : props.data.description,\n        theme : props.data.theme,\n        typeTask : props.data.typeTask,\n        listQuestion : props.data.listQuestion,\n        listStudents : props.data.listStudents,\n        endDate : props.data.endDate,\n        creator : props.data.creator\n     \n    });\n\n    const [Images, setImages] = useState([]);\n    const [enableUpload, setEnableUpload] = useState(false);\n  const updateImages = (newImages) => {\n\n    setImages(newImages);\n    \n   \n  };\n  console.log(Images);\n    const dispatch = useDispatch()\n    const [multiple_resources, SetMultiple_resources] = useState([]);\n    const handleChangeStatus = ({ meta, file }, status) => {\n      console.log(status, meta, file);\n  \n      if (status === \"done\") {\n        SetMultiple_resources(multiple_resources.concat(file));\n      }\n      if (status === \"removed\") {\n        let multiple_resource = multiple_resources.slice();\n        multiple_resource = multiple_resources.filter((u) => {\n          return u !== file;\n        });\n        SetMultiple_resources(multiple_resource);\n      }\n    };\n    var step=2;\n    const testUpload = () => {  \n      console.log(\"cccccc\");\n  dispatch(uploadFile(multiple_resources)).then((res)=>{\n     console.log(res);\n      props.addTask(tasks.listQuestion = res.payload);\n      props.addTask(tasks);\n     //console.log(tasks)\n  \n})\n  //console.log(tasks)\n  props.nextStep(step+1);\n      }\n    \n      const event = ()=>{\n        \n        //props.addTask(tasks.listQuestion = inputFields);\n       // props.addTask(tasks);\n      \n      }\n    return (\n        <div>\n        \n          <FileUpload refreshFunction={updateImages} listfile={null} Enbale={enableUpload}/>\n         <Divider hidden></Divider>\n  <Button\n      \n            color=\"red\"\n              type=\"submit\" \n              floated='right'\n              onClick={testUpload}\n             >Next</Button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}