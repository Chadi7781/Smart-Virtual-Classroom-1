{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\ReminderTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'semantic-ui-react';\nimport { isAuth } from '../../helpers/auth';\nimport { getTasksById } from '../../redux/slices/Grade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReminderTask() {\n  _s();\n\n  const grades = useSelector(state => state.grades.grades);\n  const [reminder, setReminder] = useState(false);\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const taskDetail = {\n    \"idUser\": isAuth()._id,\n    \"idClass\": currentClass._id\n  };\n  /* for (var i = 0; i < grades.length; i++) {\r\n       if(grades[i].taskStatus===\"Attribué\"){\r\n           setReminder(true);\r\n           break;\r\n           }\r\n           \r\n     }*/\n\n  /*const dispatch = useDispatch();\r\n  \n  useEffect(()=>{\r\n   \r\n      dispatch(getTasksById(taskDetail));\r\n    \r\n     \r\n     },[])\r\n   */\n\n  console.log(grades);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        color: \"red\",\n        as: \"h3\",\n        textAlign: \"center\",\n        children: \"TO DO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Content, {\n        header: \"TO DO\",\n        children: /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: reminder ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Check Your Task List You Have Assign Task clic  \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/TaskListStudent\",\n              children: \"ici\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 83\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"All Done Good No Tasks Assign \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 133\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ReminderTask, \"7MIvJ2ctvPTlADsSFpZ16wQHmcs=\", false, function () {\n  return [useSelector];\n});\n\n_c = ReminderTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReminderTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/ReminderTask.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","Card","isAuth","getTasksById","ReminderTask","grades","state","reminder","setReminder","currentClass","JSON","parse","localStorage","getItem","taskDetail","_id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAMC,MAAM,GAAGN,WAAW,CAAEO,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaA,MAAxB,CAA1B;AACA,QAAM,CAACE,QAAD,EAAYC,WAAZ,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMY,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAArB;AACA,QAAMC,UAAU,GAAC;AACf,cAASZ,MAAM,GAAGa,GADH;AAEf,eAAYN,YAAY,CAACM;AAFV,GAAjB;AAMD;AACH;AACA;AACA;AACA;AACA;AACA;;AAIM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAESC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACL,sBAEI;AAAA,4BACG,QAAC,OAAD;AAAA,6BAEG,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,EAAE,EAAC,IAAvB;AAA4B,QAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,YADH,eAQA,QAAC,IAAD;AAAA,6BAGI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,MAAM,EAAC,OAArB;AAAA,+BAMX,QAAC,IAAD,CAAM,WAAN;AAAA,oBACiBE,QAAQ,gBAAK;AAAA,wFAAmD,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,gBAA0G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADnI;AAAA;AAAA;AAAA;AAAA;AANW;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YARA;AAAA,kBAFJ;AA+BH;;GA/DuBH,Y;UAELL,W;;;KAFKK,Y","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'semantic-ui-react'\r\nimport { isAuth } from '../../helpers/auth';\r\nimport { getTasksById } from '../../redux/slices/Grade';\r\n\r\nexport default function ReminderTask() {\r\n\r\n    const grades = useSelector( state => state.grades.grades);\r\n    const [reminder , setReminder] =useState(false)\r\n    const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n    const taskDetail={\r\n      \"idUser\":isAuth()._id,\r\n      \"idClass\" : currentClass._id,\r\n      \r\n    }\r\n   \r\n   /* for (var i = 0; i < grades.length; i++) {\r\n        if(grades[i].taskStatus===\"Attribué\"){\r\n            setReminder(true);\r\n            break;\r\n            }\r\n            \r\n      }*/\r\n    \r\n   \r\n    \r\n      /*const dispatch = useDispatch();\r\n  \r\n \r\n      useEffect(()=>{\r\n       \r\n          dispatch(getTasksById(taskDetail));\r\n        \r\n         \r\n         },[])\r\n       */\r\n         console.log(grades);\r\n    return (\r\n       \r\n        <>\r\n           <Segment>\r\n           \r\n              <Header color=\"red\" as=\"h3\" textAlign=\"center\">\r\n                TO DO\r\n              </Header>\r\n      \r\n          </Segment>\r\n        <Card>\r\n        \r\n            \r\n            <Card.Content header='TO DO' >\r\n       \r\n   \r\n       \r\n\r\n          \r\n <Card.Description>\r\n                { reminder ? ( <p>Check Your Task List You Have Assign Task clic  <Link to=\"/TaskListStudent\">ici</Link> </p>)  : ( <p>All Done Good No Tasks Assign </p>) }\r\n                \r\n                </Card.Description>\r\n        \r\n        \r\n             \r\n      \r\n      </Card.Content>\r\n      </Card>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}