{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Quiz\\\\EndQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Divider, Grid, Header, Icon, Image, Message, Segment, Table } from 'semantic-ui-react';\nimport { getDetailByTaskByStudent } from '../../redux/slices/Grade';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EndQuiz() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const task = useSelector(state => state.grades.grade);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDetailByTaskByStudent(id));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !task ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        basic: true,\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          centered: true,\n          src: process.env.PUBLIC_URL + \"/Certification.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Congrats \", task[0].student.name, \" you have ben passed the Quiz.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          horizontal: true,\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h4\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"bar chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 9\n            }, this), \"Reponse\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: \"three\",\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: task[0].task.listQuestion.map((quiz, index) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n              children: [/*#__PURE__*/_jsxDEV(Table, {\n                color: \"red\",\n                textAlign: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Table.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                      children: [quiz.fquestion + \"?\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Table.Row, {\n                    positive: quiz.foptionA === quiz.correct_answer,\n                    negative: quiz.foptionA !== quiz.correct_answer && quiz.foptionA === task[0].listReponse[index],\n                    children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                      children: [/*#__PURE__*/_jsxDEV(Icon, {\n                        name: \"check circle\",\n                        color: \"green\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 59,\n                        columnNumber: 25\n                      }, this), quiz.foptionA]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                    positive: quiz.foptionB === quiz.correct_answer,\n                    negative: quiz.foptionB !== quiz.correct_answer && quiz.foptionB === task[0].listReponse[index],\n                    children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                      children: [\" \", quiz.foptionB]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                    positive: quiz.foptionC === quiz.correct_answer,\n                    negative: quiz.foptionC !== quiz.correct_answer && quiz.foptionC === task[0].listReponse[index],\n                    children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                      children: [\" \", quiz.foptionC]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                    positive: quiz.foptionD === quiz.correct_answer,\n                    negative: quiz.foptionD !== quiz.correct_answer && quiz.foptionD === task[0].listReponse[index],\n                    children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                      children: [\" \", quiz.foptionD]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                hidden: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 5\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EndQuiz, \"4hDCmJQUSEv9xDYZqGhJEaCB66I=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = EndQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndQuiz\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Quiz/EndQuiz.js"],"names":["React","useEffect","useDispatch","useSelector","useParams","Divider","Grid","Header","Icon","Image","Message","Segment","Table","getDetailByTaskByStudent","EndQuiz","id","task","state","grades","grade","dispatch","process","env","PUBLIC_URL","student","name","listQuestion","map","quiz","index","fquestion","foptionA","correct_answer","listReponse","foptionB","foptionC","foptionD"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Divider, Grid, Header, Icon, Image, Message, Segment, Table } from 'semantic-ui-react';\r\nimport { getDetailByTaskByStudent } from '../../redux/slices/Grade';\r\n\r\nexport default function EndQuiz() {\r\nconst {id} = useParams()\r\nconst task = useSelector((state) => state.grades.grade)\r\n\r\n    const  dispatch = useDispatch();\r\n   \r\n   useEffect(() => {\r\n      dispatch(getDetailByTaskByStudent(id))\r\n    \r\n    }, [id]);\r\n \r\n    return (\r\n        <div>\r\n          { !task ? (<></>) : (\r\n             <>\r\n            <Segment basic textAlign='center'>\r\n        \r\n       \r\n        \r\n          <Image centered src={process.env.PUBLIC_URL + \"/Certification.png\"} />\r\n    \r\n    \r\n    <p>\r\n      Congrats {task[0].student.name} you have ben passed the Quiz.\r\n    </p>\r\n    \r\n    <Divider horizontal>\r\n      <Header as='h4'>\r\n        <Icon name='bar chart' />\r\n        Reponse\r\n      </Header>\r\n    </Divider>\r\n    <Grid columns=\"three\">\r\n        <Grid.Row>\r\n          \r\n            {task[0].task.listQuestion.map((quiz, index) => (\r\n    <Grid.Column>\r\n                <Table key={index} color=\"red\" textAlign=\"center\">\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>\r\n                        {quiz.fquestion + \"?\"}{\" \"}\r\n                      </Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n\r\n                  <Table.Body>\r\n                    <Table.Row\r\n                      positive={quiz.foptionA === quiz.correct_answer  }\r\n                      negative={quiz.foptionA !==  quiz.correct_answer &&  quiz.foptionA === task[0].listReponse[index]}\r\n                    >\r\n                      <Table.Cell>\r\n                        <Icon name=\"check circle\" color=\"green\" />\r\n                        {quiz.foptionA}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row\r\n                                   positive={quiz.foptionB === quiz.correct_answer  }\r\n                                   negative={quiz.foptionB !==  quiz.correct_answer &&  quiz.foptionB === task[0].listReponse[index]}\r\n                    >\r\n                      <Table.Cell> {quiz.foptionB}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row\r\n                                  positive={quiz.foptionC === quiz.correct_answer  }\r\n                                  negative={quiz.foptionC !==  quiz.correct_answer &&  quiz.foptionC === task[0].listReponse[index]}\r\n                    >\r\n                      <Table.Cell> {quiz.foptionC}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row\r\n                                positive={quiz.foptionD === quiz.correct_answer  }\r\n                                negative={quiz.foptionD !==  quiz.correct_answer &&  quiz.foptionD === task[0].listReponse[index]}\r\n                    >\r\n                      <Table.Cell> {quiz.foptionD}</Table.Cell>\r\n                    </Table.Row>\r\n                  </Table.Body>\r\n                </Table>\r\n                <Divider hidden />\r\n              </Grid.Column>\r\n             ) )}\r\n\r\n             </Grid.Row>\r\n             </Grid>\r\n              </Segment>\r\n\r\n          </>\r\n           \r\n           )}\r\n\r\n\r\n  \r\n    \r\n    </div>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}