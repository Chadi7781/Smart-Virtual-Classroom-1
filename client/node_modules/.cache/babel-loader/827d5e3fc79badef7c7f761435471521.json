{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\question\\\\EditQuestionComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Form, Input, TextArea, Modal, Icon } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { AddquestionsApi } from \"../../api/api\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchQuestions } from \"../../redux/slices/questionslice\";\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\nimport { useHistory } from \"react-router\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\nexport default function EditQuestions({\n  qes\n}) {\n  _s();\n\n  const socket = io(ENDPOINT);\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [Images, setImages] = useState([]);\n\n  const updateImages = newImages => {\n    if (newImages === null) {\n      qes.Filee.forEach(element => {\n        setImages(element);\n      });\n    } else {\n      setImages(newImages);\n    }\n  };\n\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const formik = useFormik({\n    initialValues: {\n      Title: qes.Title,\n      Body: qes.Body,\n      Writerq: {\n        _id: \"\" + documentData._id\n      },\n      Filee: []\n    },\n    validationSchema: yupSchema,\n    onSubmit: async values => {\n      try {\n        if (Images.length !== 0) {\n          values.Filee = Images; // alert(\"images : here : \" + values.Filee);\n        } else {\n          values.Filee = qes.Filee;\n        }\n\n        const res = await AddquestionsApi.putQuestions(values, qes._id);\n\n        if (Images.length != 0) {\n          setEnableUpload(true);\n        }\n\n        updateImages([]);\n\n        if (res.ok === 1) {\n          setEnableUpload(false);\n        }\n\n        history.push(\"/FAQ/\" + qes._id);\n        dispatch(fetchQuestions(currentClass._id));\n        socket.emit(\"send_question\", \"message\");\n      } catch (error) {\n        alert(error);\n      }\n    }\n  });\n  const [enableUpload, setEnableUpload] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Icon, {\n      name: \"edit\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Update your question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            placeholder: \"Title\",\n            label: \"Title\",\n            name: \"Title\",\n            onChange: formik.handleChange,\n            value: formik.values.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          control: TextArea,\n          placeholder: \"whats your question?\",\n          label: \"Content\",\n          name: \"Body\",\n          value: formik.values.Body,\n          onChange: formik.handleChange,\n          error: formik.errors.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\",\n            marginRight: \"5%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              maxHeight: \"40px\"\n            },\n            type: \"submit\",\n            content: \"Edit\",\n            icon: \"edit\",\n            color: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"5%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(FileUploadEdit, {\n              refreshFunction: updateImages,\n              listfile: qes.Filee,\n              Enbale: enableUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditQuestions, \"4VuzzOmFB4AaFMoDELPQ7FyYUyI=\", false, function () {\n  return [useHistory, useDispatch, useFormik];\n});\n\n_c = EditQuestions;\nconst yupSchema = Yup.object({\n  Body: Yup.string().required(\"Champs requis!\")\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"EditQuestions\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/question/EditQuestionComponent.js"],"names":["React","Button","Form","Input","TextArea","Modal","Icon","Yup","useFormik","AddquestionsApi","useState","useDispatch","fetchQuestions","FileUploadEdit","useHistory","io","ENDPOINT","EditQuestions","qes","socket","open","setOpen","history","dispatch","Images","setImages","updateImages","newImages","Filee","forEach","element","documentData","JSON","parse","localStorage","getItem","currentClass","formik","initialValues","Title","Body","Writerq","_id","validationSchema","yupSchema","onSubmit","values","length","res","putQuestions","setEnableUpload","ok","push","emit","error","alert","enableUpload","handleSubmit","handleChange","errors","float","marginRight","maxHeight","display","marginLeft","object","string","required"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Modal,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {  fetchQuestions } from \"../../redux/slices/questionslice\";\r\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\r\nimport { useHistory } from \"react-router\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\nexport default function EditQuestions({ qes }) {\r\n  const socket = io(ENDPOINT);\r\n  const [open, setOpen] = React.useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n    if (newImages === null) {\r\n      qes.Filee.forEach((element) => {\r\n        setImages(element);\r\n      });\r\n    } else {\r\n      setImages(newImages);\r\n    }\r\n  };\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Title: qes.Title,\r\n      Body: qes.Body,\r\n      Writerq: { _id: \"\" + documentData._id },\r\n      Filee: [],\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        if (Images.length !== 0) {\r\n          values.Filee = Images;\r\n         // alert(\"images : here : \" + values.Filee);\r\n        } else {\r\n          values.Filee = qes.Filee;\r\n        }\r\n        const res = await AddquestionsApi.putQuestions(values, qes._id);\r\n        \r\n        if (Images.length != 0) {\r\n          setEnableUpload(true);\r\n        }\r\n        updateImages([]);\r\n        if (res.ok === 1) {\r\n          setEnableUpload(false);\r\n        }        history.push(\"/FAQ/\"+qes._id);\r\n\r\n          dispatch(fetchQuestions(currentClass._id));\r\n          socket.emit(\"send_question\", \"message\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Icon name=\"edit\">Edit</Icon>}\r\n    >\r\n      <Modal.Header>Update your question</Modal.Header>\r\n      <Modal.Content>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Input}\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              name=\"Title\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.Title}\r\n            />\r\n          </Form.Group>\r\n          <Form.Field\r\n            control={TextArea}\r\n            placeholder=\"whats your question?\"\r\n            label=\"Content\"\r\n            name=\"Body\"\r\n            value={formik.values.Body}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.Title}\r\n          />\r\n          <div style={{ float: \"right\", marginRight: \"5%\" }}>\r\n            <Button\r\n              style={{ maxHeight: \"40px\" }}\r\n              type=\"submit\"\r\n              content=\"Edit\"\r\n              icon=\"edit\"\r\n              color=\"red\"\r\n            />\r\n          </div>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ marginLeft: \"5%\" }}>\r\n              <FileUploadEdit\r\n                refreshFunction={updateImages}\r\n                listfile={qes.Filee}\r\n                Enbale={enableUpload}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        \r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\n"]},"metadata":{},"sourceType":"module"}