{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { notificationsApi } from \"../../api/api\";\nlet initialState = {\n  notifications: [],\n  errors: \"\"\n};\nconst notificationSlice = createSlice({\n  name: \"notifications\",\n  initialState,\n  reducers: {\n    setNotifications(state, action) {\n      state.notifications = action.payload;\n    },\n\n    setErrors(state, action) {\n      state.errors = action.payload;\n    },\n\n    addNotifications: (state, action) => {\n      const payload = action.payload;\n      state.notifications.push(payload);\n    }\n  }\n});\nexport const fetchNotifications = id => async dispatch => {\n  const res = notificationsApi.getNotification(id);\n  res.then(data => {\n    dispatch(setNotifications(data));\n  });\n};\nexport const selectNotifications = state => {\n  return [state.notifications.notifications, state.notifications.errors];\n};\nexport const {\n  setNotifications,\n  setErrors,\n  addNotifications\n} = notificationSlice.actions;\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/redux/slices/notificationslice.js"],"names":["createSlice","notificationsApi","initialState","notifications","errors","notificationSlice","name","reducers","setNotifications","state","action","payload","setErrors","addNotifications","push","fetchNotifications","id","dispatch","res","getNotification","then","data","selectNotifications","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,aAAa,EAAE,EADA;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAAnB;AAKA,MAAMC,iBAAiB,GAAGL,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,eAD8B;AAEpCJ,EAAAA,YAFoC;AAGpCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACN,aAAN,GAAsBO,MAAM,CAACC,OAA7B;AACD,KAHO;;AAIRC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACC,OAAtB;AACD,KANO;;AAORE,IAAAA,gBAAgB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACnC,YAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;AACAF,MAAAA,KAAK,CAACN,aAAN,CAAoBW,IAApB,CAAyBH,OAAzB;AACD;AAVO;AAH0B,CAAD,CAArC;AAiBA,OAAO,MAAMI,kBAAkB,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,GAAG,GAAGjB,gBAAgB,CAACkB,eAAjB,CAAiCH,EAAjC,CAAZ;AAEAE,EAAAA,GAAG,CAACE,IAAJ,CAAUC,IAAD,IAAU;AACjBJ,IAAAA,QAAQ,CAACT,gBAAgB,CAACa,IAAD,CAAjB,CAAR;AACD,GAFD;AAGD,CANM;AAQP,OAAO,MAAMC,mBAAmB,GAAIb,KAAD,IAAW;AAC5C,SAAO,CAACA,KAAK,CAACN,aAAN,CAAoBA,aAArB,EAAoCM,KAAK,CAACN,aAAN,CAAoBC,MAAxD,CAAP;AACD,CAFM;AAIP,OAAO,MAAM;AAAEI,EAAAA,gBAAF;AAAoBI,EAAAA,SAApB;AAA+BC,EAAAA;AAA/B,IAAoDR,iBAAiB,CAACkB,OAA5E;AACP,eAAelB,iBAAiB,CAACmB,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { notificationsApi } from \"../../api/api\";\r\n\r\nlet initialState = {\r\n    notifications: [],\r\n  errors: \"\",\r\n};\r\n\r\nconst notificationSlice = createSlice({\r\n  name: \"notifications\",\r\n  initialState,\r\n  reducers: {\r\n    setNotifications(state, action) {\r\n      state.notifications = action.payload;\r\n    },\r\n    setErrors(state, action) {\r\n      state.errors = action.payload;\r\n    },\r\n    addNotifications: (state, action) => {\r\n      const payload = action.payload;\r\n      state.notifications.push(payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const fetchNotifications = (id) => async (dispatch) => {\r\n  const res = notificationsApi.getNotification(id);\r\n\r\n  res.then((data) => {\r\n    dispatch(setNotifications(data));\r\n  });\r\n};\r\n\r\nexport const selectNotifications = (state) => {\r\n  return [state.notifications.notifications, state.notifications.errors];\r\n};\r\n\r\nexport const { setNotifications, setErrors, addNotifications } = notificationSlice.actions;\r\nexport default notificationSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}