{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Class\\\\ArchieveClassComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Dropdown, Modal } from \"semantic-ui-react\";\nimport { fetchclass, fetchActiveClass } from \"../../redux/slices/classsline\";\nimport { AddclassApi } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ArchieveClassComponent(props) {\n  _s();\n\n  const [modalOpen, SetModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\n\n  const handleOpen = e => SetModalOpen(true);\n\n  const handleClose = e => SetModalOpen(false);\n\n  const handleSubmit = async e => {\n    let params = e.target.getAttribute(\"classid\");\n    let error = {\n      visible: false,\n      message: \"\"\n    };\n\n    try {\n      const res = await AddclassApi.updateClassActive(params);\n      dispatch(fetchclass(documentData.role, documentData._id));\n      dispatch(fetchActiveClass(documentData._id));\n      handleClose();\n    } catch (err) {\n      error = {\n        visible: true,\n        message: JSON.stringify(err.errors, null, 2)\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      trigger: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: handleOpen,\n        icon: \"archive\",\n        text: \"Archive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this),\n      open: modalOpen,\n      onClose: handleClose,\n      dimmer: \"inverted\",\n      size: \"tiny\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: props.headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to archive class named\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: props.classes.className\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), \" ?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          classid: props.classes._id,\n          color: \"red\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"black\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ArchieveClassComponent, \"HaWjl4e0TRnfgRUF6UOWdAPGSKc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ArchieveClassComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArchieveClassComponent\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Class/ArchieveClassComponent.js"],"names":["useState","useDispatch","Button","Dropdown","Modal","fetchclass","fetchActiveClass","AddclassApi","ArchieveClassComponent","props","modalOpen","SetModalOpen","dispatch","documentData","JSON","parse","localStorage","getItem","handleOpen","e","handleClose","handleSubmit","params","target","getAttribute","error","visible","message","res","updateClassActive","role","_id","err","stringify","errors","headerTitle","classes","className"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Dropdown, Modal } from \"semantic-ui-react\";\r\nimport {  fetchclass,fetchActiveClass } from \"../../redux/slices/classsline\";\r\nimport { AddclassApi} from \"../../api/api\";\r\nexport default function ArchieveClassComponent(props) {\r\n  const [modalOpen, SetModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const handleOpen = (e) => SetModalOpen(true);\r\n  const handleClose = (e) => SetModalOpen(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    let params = e.target.getAttribute(\"classid\");\r\n    let error = { visible: false, message: \"\" };\r\n    try {\r\n      const res = await AddclassApi.updateClassActive(params);\r\n      dispatch(fetchclass(documentData.role, documentData._id));\r\n      dispatch(fetchActiveClass(documentData._id));\r\n      handleClose();\r\n    } catch (err) {\r\n      error = {\r\n        visible: true,\r\n        message: JSON.stringify(err.errors, null, 2),\r\n      };\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        trigger={\r\n          <Dropdown.Item onClick={handleOpen} icon=\"archive\" text=\"Archive\" />\r\n        }\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <p>\r\n            Are you sure you want to archive class named{\" \"}\r\n            <strong>{props.classes.className}</strong> ?\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            classid={props.classes._id}\r\n            color=\"red\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"black\">\r\n            No\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}