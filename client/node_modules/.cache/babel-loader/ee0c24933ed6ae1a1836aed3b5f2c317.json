{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\UncorrectedTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Button, Card, Header, Icon, Image, Input, Loader, Segment } from 'semantic-ui-react';\nimport { isAuth } from '../../helpers/auth';\nimport { assignGradeToStudent } from '../../redux/slices/Grade';\nimport { getDetailTask } from '../../redux/slices/Task';\nimport CorrectedTask from './CorrectedTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UncorrectedTask(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [grade, setGrade] = useState();\n  const [_id, setIdTask] = useState();\n  const [objgrade, setObjGrade] = useState({\n    \"_id\": null,\n    \"grade\": null\n  });\n\n  const submitGrade = (e, data) => {\n    console.log(grade);\n    setObjGrade({\n      \"_id\": data,\n      \"grade\": e.target.value\n    });\n    console.log(objgrade);\n  };\n\n  const dispatch = useDispatch();\n\n  const assignGrade = () => {\n    dispatch(assignGradeToStudent(objgrade));\n  };\n\n  useEffect(() => {\n    dispatch(getDetailTask(id));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card.Group, {\n      children: !props.uncorrectTasks ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Loader, {\n          active: true,\n          inline: \"centered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 46\n      }, this) : props.uncorrectTasks.map((task, index) => task.grade === null ? /*#__PURE__*/_jsxDEV(Card, {\n        color: \"red\",\n        raised: true,\n        children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            floated: \"right\",\n            size: \"mini\",\n            src: task.student.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n            children: task.student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: task.taskStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"File \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"grade\",\n            type: \"number\",\n            size: \"mini\",\n            onChange: e => submitGrade(e, task._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            onClick: () => assignGrade(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UncorrectedTask, \"k8G1MmIgH2gFB0o2whD3e1JTt4I=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = UncorrectedTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"UncorrectedTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/UncorrectedTask.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","Button","Card","Header","Icon","Image","Input","Loader","Segment","isAuth","assignGradeToStudent","getDetailTask","CorrectedTask","UncorrectedTask","props","id","grade","setGrade","_id","setIdTask","objgrade","setObjGrade","submitGrade","e","data","console","log","target","value","dispatch","assignGrade","uncorrectTasks","map","task","index","student","picture","name","taskStatus"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router';\r\nimport { Button, Card, Header, Icon, Image, Input, Loader, Segment } from 'semantic-ui-react'\r\nimport { isAuth } from '../../helpers/auth';\r\nimport { assignGradeToStudent } from '../../redux/slices/Grade';\r\nimport { getDetailTask } from '../../redux/slices/Task';\r\nimport CorrectedTask from './CorrectedTask';\r\n\r\n\r\n\r\nexport default function UncorrectedTask(props) {\r\n  const {id} = useParams();\r\n    const [grade , setGrade] = useState();\r\n    const [_id, setIdTask] = useState();\r\n    const [objgrade , setObjGrade] =useState({\"_id\" : null , \"grade\" :null})\r\n    const submitGrade =   ( e ,data) => {\r\n        \r\n       \r\n       \r\n    console.log(grade)\r\n        setObjGrade({\"_id\" :data,\"grade\" : e.target.value })\r\n\r\n console.log(objgrade)\r\n  \r\n    };\r\n    const  dispatch = useDispatch();\r\n\r\n    const assignGrade = () =>{\r\n\r\n        dispatch(assignGradeToStudent(objgrade));\r\n    }\r\n      \r\n    useEffect(() => {\r\n     \r\n      \r\n      dispatch(getDetailTask(id));\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n              <Card.Group>\r\n                  { !props.uncorrectTasks ? (<div> <Loader active inline='centered' /></div>)  : (\r\n\r\n props.uncorrectTasks.map((task,index) =>\r\n    task.grade ===null ? (\r\n  <Card key={index} color='red' raised>\r\n\r\n   \r\n\r\n    <Card.Content>\r\n      <Image\r\n        floated='right'\r\n        size='mini'\r\n        \r\n        src={task.student.picture}\r\n      />\r\n      <Card.Header>{task.student.name}\r\n   \r\n      </Card.Header>\r\n     \r\n      <Card.Meta >\r\n          <strong>{task.taskStatus}</strong>\r\n          \r\n  \r\n  </Card.Meta>\r\n      <Card.Description>\r\n     <strong>File </strong>\r\n      </Card.Description>\r\n    </Card.Content>\r\n    <Card.Content extra>\r\n  \r\n    <Input\r\n   \r\n  name=\"grade\"\r\n   type=\"number\"\r\n  size='mini'\r\n  \r\n\r\n\r\nonChange={(e) => submitGrade(e , task._id)}\r\n\r\n\r\n/><Button color=\"red\" onClick={()=>assignGrade()} >Send</Button>\r\n    \r\n    </Card.Content>\r\n  </Card>\r\n    ): (\r\n<></>\r\n    ))\r\n                   )}\r\n  \r\n  </Card.Group>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}