{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\sideBare\\\\sideBareComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Card, Image, Button, Icon, Message, Menu, Label, Grid, List, Divider, Dropdown, Segment, Step } from \"semantic-ui-react\";\nimport { isAuth, signout } from \"../../helpers/auth\";\nimport moment from \"moment\";\nimport Main from \"../Main/Main\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchNotifications, selectNotifications } from \"../../redux/slices/notificationslice\";\nimport io from \"socket.io-client\";\nimport { notificationsApi } from \"../../api/api\";\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\n\nfunction SideBareComponent() {\n  _s();\n\n  const socket = io(ENDPOINT);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchNotifications(user._id));\n  }, [dispatch]);\n  const state = useSelector(state => state.user.userUpdated);\n  const [notifications, errr] = useSelector(selectNotifications);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {}, [state]);\n  const [activeItem, SetActiveItem] = useState(\"Dashboard\");\n\n  const handleItemClick = (e, {\n    name\n  }) => {\n    if (name === \"Logout\") {\n      signout(() => {\n        toast.error(\"Signout Successfully\");\n      });\n      SetActiveItem(name);\n    } else {\n      SetActiveItem(name);\n    }\n  };\n\n  const [nbrNotif, setNbrNotif] = useState(false);\n  useEffect(() => {\n    let nn = notifications.filter(notif => notif.status !== true);\n\n    if (nn.length !== 0) {\n      setNbrNotif(true);\n    } else {\n      setNbrNotif(false);\n    }\n\n    socket.on(\"new-notification\", content => {\n      content.forEach(i => {\n        if (user._id === i) {\n          setNbrNotif(true);\n          dispatch(fetchNotifications(i));\n        }\n      });\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const updatenotification = async id_notif => {\n    try {\n      const res = await notificationsApi.putNotification(id_notif);\n      dispatch(fetchNotifications(user._id));\n      let nn = notifications.filter(notif => notif.status !== true);\n\n      if (nn.length !== 0) {\n        setNbrNotif(true);\n      } else {\n        setNbrNotif(false);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      stackable: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        stackable: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: isAuth().picture,\n          wrapped: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [isAuth().name, \"  |  \", nbrNotif && /*#__PURE__*/_jsxDEV(Label, {\n              circular: true,\n              color: \"red\",\n              empty: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              icon: \"bell outline\",\n              scrolling: true,\n              children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Header, {\n                  icon: \"bell outline\",\n                  content: \"      Notification\",\n                  as: \"h3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), notifications.map((notif, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [notif.Course !== null && /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/detailCourses/\" + notif.Course,\n                    onClick: () => updatenotification(notif._id),\n                    children: [/*#__PURE__*/_jsxDEV(List, {\n                      divided: true,\n                      children: /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                          name: \"file text\",\n                          size: \"large\",\n                          verticalAlign: \"middle\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 122,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: [notif.status === false ? /*#__PURE__*/_jsxDEV(List.Header, {\n                            as: \"p\",\n                            style: {\n                              color: \"blue\"\n                            },\n                            children: notif.Message\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 130,\n                            columnNumber: 35\n                          }, this) : /*#__PURE__*/_jsxDEV(List.Header, {\n                            as: \"p\",\n                            children: notif.Message\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 134,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              style: {\n                                fontSize: \"13px\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                                date: notif.Date,\n                                locale: \"en-US\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 140,\n                                columnNumber: 37\n                              }, this), \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 139,\n                              columnNumber: 35\n                            }, this), \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 138,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this), notif.Question !== null && /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/FAQ/\" + notif.Question,\n                    onClick: () => updatenotification(notif._id),\n                    children: [/*#__PURE__*/_jsxDEV(List, {\n                      divided: true,\n                      children: /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                          name: \"question circle outline\",\n                          size: \"large\",\n                          verticalAlign: \"middle\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 160,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: [notif.status === false ? /*#__PURE__*/_jsxDEV(List.Header, {\n                            as: \"p\",\n                            style: {\n                              color: \"blue\"\n                            },\n                            children: notif.Message\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 168,\n                            columnNumber: 35\n                          }, this) : /*#__PURE__*/_jsxDEV(List.Header, {\n                            as: \"p\",\n                            children: notif.Message\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 172,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              style: {\n                                fontSize: \"13px\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                                date: notif.Date,\n                                locale: \"en-US\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 178,\n                                columnNumber: 37\n                              }, this), \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 177,\n                              columnNumber: 35\n                            }, this), \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 176,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(Step.Group, {\n                  size: \"mini\",\n                  widths: \"seven\",\n                  children: [/*#__PURE__*/_jsxDEV(Step, {\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"bell\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Step.Content, {\n                      children: /*#__PURE__*/_jsxDEV(Step.Title, {\n                        children: \"ALL\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Step, {\n                    active: true,\n                    children: /*#__PURE__*/_jsxDEV(Step.Content, {\n                      children: /*#__PURE__*/_jsxDEV(Step.Title, {\n                        children: \"Notifications\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: [\"Joined in \", moment(isAuth().createdAt).format(\"yy\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: isAuth().bio === \"\" || !isAuth().bio ? /*#__PURE__*/_jsxDEV(Message, {\n              attached: true,\n              header: \"Welcome to our site!\",\n              content: \"If you are new in our community go to your profile and add a Bio ,it help you express yourself \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this) : isAuth().bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            size: \"small\",\n            fluid: true,\n            vertical: true,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/class\",\n              children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n                icon: \"comments\",\n                name: \"Dashboard\",\n                active: activeItem === \"Dashboard\",\n                onClick: handleItemClick,\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/archiveclass\",\n              children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n                icon: \"archive\",\n                name: \"Archived\",\n                active: activeItem === \"Archived\",\n                onClick: handleItemClick,\n                children: \"Archived\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/schedule\",\n              children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n                name: \"Routine\",\n                active: activeItem === \"Routine\",\n                onClick: handleItemClick,\n                children: \"Routine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/updateProfile/\" + isAuth()._id,\n              children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n                name: \"Profile\",\n                active: activeItem === \"Profile\",\n                onClick: handleItemClick,\n                children: isAuth().bio === \"\" || !isAuth().bio || isAuth().linkedInUrl === \"\" || !isAuth().linkedInUrl || isAuth().GithubUrl === \"\" || !isAuth().GithubUrl || isAuth().picture === \"\" || !isAuth().picture ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Label, {\n                    color: \"red\",\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 23\n                  }, this), \"Profile\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\" \", \"Profile\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n                name: \"Logout\",\n                active: activeItem === \"Logout\",\n                onClick: handleItemClick,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SideBareComponent, \"9JmYf6oTprgNGTfEWrtigJFBuGc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SideBareComponent;\nexport default SideBareComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBareComponent\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/sideBare/sideBareComponent.js"],"names":["React","useState","useEffect","Link","toast","Card","Image","Button","Icon","Message","Menu","Label","Grid","List","Divider","Dropdown","Segment","Step","isAuth","signout","moment","Main","useDispatch","useSelector","fetchNotifications","selectNotifications","io","notificationsApi","ReactTimeAgo","ENDPOINT","SideBareComponent","socket","dispatch","user","_id","state","userUpdated","notifications","errr","JSON","parse","localStorage","getItem","activeItem","SetActiveItem","handleItemClick","e","name","error","nbrNotif","setNbrNotif","nn","filter","notif","status","length","on","content","forEach","i","disconnect","updatenotification","id_notif","res","putNotification","alert","picture","map","index","Course","color","fontSize","Date","Question","createdAt","format","bio","linkedInUrl","GithubUrl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Card,\r\n  Image,\r\n  Button,\r\n  Icon,\r\n  Message,\r\n  Menu,\r\n  Label,\r\n  Grid,\r\n  List,\r\n  Divider,\r\n  Dropdown,\r\n  Segment,\r\n  Step,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth, signout } from \"../../helpers/auth\";\r\nimport moment from \"moment\";\r\nimport Main from \"../Main/Main\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchNotifications,\r\n  selectNotifications,\r\n} from \"../../redux/slices/notificationslice\";\r\nimport io from \"socket.io-client\";\r\nimport { notificationsApi } from \"../../api/api\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\nfunction SideBareComponent() {\r\n  const socket = io(ENDPOINT);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchNotifications(user._id));\r\n  }, [dispatch]);\r\n  const state = useSelector((state) => state.user.userUpdated);\r\n  const [notifications, errr] = useSelector(selectNotifications);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  useEffect(() => {}, [state]);\r\n\r\n  const [activeItem, SetActiveItem] = useState(\"Dashboard\");\r\n  const handleItemClick = (e, { name }) => {\r\n    if (name === \"Logout\") {\r\n      signout(() => {\r\n        toast.error(\"Signout Successfully\");\r\n      });\r\n      SetActiveItem(name);\r\n    } else {\r\n      SetActiveItem(name);\r\n    }\r\n  };\r\n\r\n  const [nbrNotif, setNbrNotif] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let nn = notifications.filter((notif) => notif.status !== true);\r\n    if (nn.length !== 0) {\r\n      setNbrNotif(true);\r\n    } else {\r\n      setNbrNotif(false);\r\n    }\r\n\r\n    socket.on(\"new-notification\", (content) => {\r\n      content.forEach((i) => {\r\n        if (user._id === i) {\r\n          setNbrNotif(true);\r\n\r\n          dispatch(fetchNotifications(i));\r\n        }\r\n      });\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const updatenotification = async (id_notif) => {\r\n    try {\r\n      const res = await notificationsApi.putNotification(id_notif);\r\n      dispatch(fetchNotifications(user._id));\r\n      let nn = notifications.filter((notif) => notif.status !== true);\r\n      if (nn.length !== 0) {\r\n        setNbrNotif(true);\r\n      } else {\r\n        setNbrNotif(false);\r\n      }\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Grid stackable>\r\n        <Card stackable>\r\n          <Image src={isAuth().picture} wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Header>\r\n              {isAuth().name}\r\n              {\"  |  \"}\r\n              {nbrNotif && <Label circular color=\"red\" empty></Label>}\r\n\r\n              <Dropdown icon=\"bell outline\" scrolling>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Header\r\n                    icon=\"bell outline\"\r\n                    content=\"      Notification\"\r\n                    as=\"h3\"\r\n                  />\r\n                  <Divider />\r\n                  {notifications.map((notif, index) => (\r\n                    <div>\r\n                      {notif.Course !== null && (\r\n                        <Link\r\n                          to={\"/detailCourses/\" + notif.Course}\r\n                          onClick={() => updatenotification(notif._id)}\r\n                        >\r\n                          <List divided>\r\n                            <List.Item>\r\n                              <List.Icon\r\n                                name=\"file text\"\r\n                                size=\"large\"\r\n                                verticalAlign=\"middle\"\r\n                              />\r\n\r\n                              <List.Content>\r\n                                {notif.status === false ? (\r\n                                  <List.Header as=\"p\" style={{ color: \"blue\" }}>\r\n                                    {notif.Message}\r\n                                  </List.Header>\r\n                                ) : (\r\n                                  <List.Header as=\"p\">\r\n                                    {notif.Message}\r\n                                  </List.Header>\r\n                                )}\r\n                                <List.Description>\r\n                                  <p style={{ fontSize: \"13px\" }}>\r\n                                    <ReactTimeAgo\r\n                                      date={notif.Date}\r\n                                      locale=\"en-US\"\r\n                                    />{\" \"}\r\n                                  </p>{\" \"}\r\n                                </List.Description>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          </List>\r\n                          <Divider />\r\n                        </Link>\r\n                      )}\r\n                      <Dropdown.Divider />\r\n                      {notif.Question !== null && (\r\n                        <Link\r\n                          to={\"/FAQ/\" + notif.Question}\r\n                          onClick={() => updatenotification(notif._id)}\r\n                        >\r\n                          <List divided>\r\n                            <List.Item>\r\n                              <List.Icon\r\n                                name=\"question circle outline\"\r\n                                size=\"large\"\r\n                                verticalAlign=\"middle\"\r\n                              />\r\n\r\n                              <List.Content>\r\n                                {notif.status === false ? (\r\n                                  <List.Header as=\"p\" style={{ color: \"blue\" }}>\r\n                                    {notif.Message}\r\n                                  </List.Header>\r\n                                ) : (\r\n                                  <List.Header as=\"p\">\r\n                                    {notif.Message}\r\n                                  </List.Header>\r\n                                )}\r\n                                <List.Description>\r\n                                  <p style={{ fontSize: \"13px\" }}>\r\n                                    <ReactTimeAgo\r\n                                      date={notif.Date}\r\n                                      locale=\"en-US\"\r\n                                    />{\" \"}\r\n                                  </p>{\" \"}\r\n                                </List.Description>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          </List>\r\n                          <Divider />\r\n                        </Link>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  <Step.Group size=\"mini\" widths=\"seven\">\r\n                    <Step>\r\n                      <Icon name=\"bell\" />\r\n                      <Step.Content>\r\n                        <Step.Title>ALL</Step.Title>\r\n                      </Step.Content>\r\n                    </Step>\r\n\r\n                    <Step active>\r\n                      <Step.Content>\r\n                        <Step.Title>Notifications</Step.Title>\r\n                      </Step.Content>\r\n                    </Step>\r\n                  </Step.Group>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Header>\r\n            <Card.Meta>\r\n              <span className=\"date\">\r\n                Joined in {moment(isAuth().createdAt).format(\"yy\")}\r\n              </span>\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              {isAuth().bio === \"\" || !isAuth().bio ? (\r\n                <Message\r\n                  attached\r\n                  header=\"Welcome to our site!\"\r\n                  content=\"If you are new in our community go to your profile and add a Bio ,it help you express yourself \"\r\n                />\r\n              ) : (\r\n                isAuth().bio\r\n              )}\r\n            </Card.Description>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Menu size=\"small\" fluid vertical>\r\n              <Link to=\"/class\">\r\n                <Menu.Item\r\n                  icon=\"comments\"\r\n                  name=\"Dashboard\"\r\n                  active={activeItem === \"Dashboard\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  Dashboard\r\n                </Menu.Item>\r\n              </Link>\r\n              <Link to=\"/archiveclass\">\r\n                <Menu.Item\r\n                  icon=\"archive\"\r\n                  name=\"Archived\"\r\n                  active={activeItem === \"Archived\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  Archived\r\n                </Menu.Item>\r\n              </Link>\r\n\r\n              <Link to=\"/schedule\">\r\n                <Menu.Item\r\n                  name=\"Routine\"\r\n                  active={activeItem === \"Routine\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  Routine\r\n                </Menu.Item>\r\n              </Link>\r\n              <Link to={\"/updateProfile/\" + isAuth()._id}>\r\n                <Menu.Item\r\n                  name=\"Profile\"\r\n                  active={activeItem === \"Profile\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  {isAuth().bio === \"\" ||\r\n                  !isAuth().bio ||\r\n                  isAuth().linkedInUrl === \"\" ||\r\n                  !isAuth().linkedInUrl ||\r\n                  isAuth().GithubUrl === \"\" ||\r\n                  !isAuth().GithubUrl ||\r\n                  isAuth().picture === \"\" ||\r\n                  !isAuth().picture ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <Label color=\"red\">1</Label>\r\n                      {\"Profile\"}\r\n                    </>\r\n                  ) : (\r\n                    <> {\"Profile\"}</>\r\n                  )}\r\n                </Menu.Item>\r\n              </Link>\r\n              <Link to=\"/login\">\r\n                <Menu.Item\r\n                  name=\"Logout\"\r\n                  active={activeItem === \"Logout\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  Logout\r\n                </Menu.Item>\r\n              </Link>\r\n            </Menu>\r\n          </Card.Content>\r\n          <Card.Content extra>\r\n            <a>\r\n              <Icon name=\"group\" />\r\n              <Main></Main>\r\n            </a>\r\n          </Card.Content>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideBareComponent;\r\n"]},"metadata":{},"sourceType":"module"}