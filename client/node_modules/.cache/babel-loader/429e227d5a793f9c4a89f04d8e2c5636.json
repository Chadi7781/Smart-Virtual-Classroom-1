{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\SendTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Step, Icon, Button, Label, Item, Divider, Header, Grid, Segment, Table, List, Image, Confirm } from 'semantic-ui-react';\nimport { assignTask, postTasks } from '../../redux/slices/Task';\nimport moment from \"moment\";\nimport ReactPlayer from 'react-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SendTask(props) {\n  _s();\n\n  const [activeIndex, setActiveIndex] = useState();\n  const dispatch = useDispatch();\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const onSubmitAssignTask = () => {//dispatch(assignTask(props.data));\n  };\n\n  var step = 3;\n\n  const onSubmitSaveTask = () => {\n    dispatch(postTasks(props.data));\n    props.nextStep(step + 1);\n  };\n\n  const handleClick = (e, title) => {\n    const newIndex = activeIndex === title.index ? -1 : title.index;\n    setActiveIndex(newIndex);\n  };\n\n  const changeScrollPosition = newScrollPosition => {\n    setScrollPosition(newScrollPosition);\n  };\n\n  const [open, setOpen] = useState(false);\n  const [close, setClose] = useState(false);\n\n  const clicOpen = () => {\n    setOpen(true);\n  };\n\n  const clicConfirm = () => {\n    dispatch(postTasks(props.data));\n    props.nextStep(step + 1);\n    setOpen(false);\n  };\n\n  const clicConfirmAssign = () => {\n    //console.log(\"cc\")\n    //console.log(props.data);\n    dispatch(assignTask(props.data));\n    props.nextStep(step + 1);\n    setOpen(false);\n  };\n\n  const clicClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      centered: true,\n      columns: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      horizontal: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h4\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"newspaper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), \"Info Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      divided: \"vertically\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        columns: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            children: /*#__PURE__*/_jsxDEV(Item.Group, {\n              divided: true,\n              children: /*#__PURE__*/_jsxDEV(Item, {\n                children: /*#__PURE__*/_jsxDEV(Item.Content, {\n                  children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                    as: \"a\",\n                    children: props.data.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"cinema\",\n                      children: moment(props.data.endDate).format(\"MMMM Do yy\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                    children: props.data.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Item.Extra, {\n                    children: /*#__PURE__*/_jsxDEV(Label, {\n                      icon: \"tasks\",\n                      content: props.data.typeTask\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 9\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            children: /*#__PURE__*/_jsxDEV(Item.Group, {\n              children: /*#__PURE__*/_jsxDEV(Item, {\n                children: /*#__PURE__*/_jsxDEV(Item.Content, {\n                  verticalAlign: \"middle\",\n                  children: /*#__PURE__*/_jsxDEV(Item.Header, {\n                    children: /*#__PURE__*/_jsxDEV(List, {\n                      animated: true,\n                      verticalAlign: \"middle\",\n                      children: [/*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(Image, {\n                          avatar: true,\n                          src: \"https://react.semantic-ui.com/images/avatar/small/helen.jpg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 7\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: /*#__PURE__*/_jsxDEV(List.Header, {\n                            children: \"Helen\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 118,\n                            columnNumber: 9\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 117,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 5\n                      }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(Image, {\n                          avatar: true,\n                          src: \"https://react.semantic-ui.com/images/avatar/small/christian.jpg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 122,\n                          columnNumber: 7\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: /*#__PURE__*/_jsxDEV(List.Header, {\n                            children: \"Christian\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 124,\n                            columnNumber: 9\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 123,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 5\n                      }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(Image, {\n                          avatar: true,\n                          src: \"https://react.semantic-ui.com/images/avatar/small/daniel.jpg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 128,\n                          columnNumber: 7\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: /*#__PURE__*/_jsxDEV(List.Header, {\n                            children: \"Daniel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 130,\n                            columnNumber: 9\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 129,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 5\n                      }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(Image, {\n                          avatar: true,\n                          src: \"https://react.semantic-ui.com/images/avatar/small/daniel.jpg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 134,\n                          columnNumber: 7\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: /*#__PURE__*/_jsxDEV(List.Header, {\n                            children: \"Daniel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 136,\n                            columnNumber: 9\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 135,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 5\n                      }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(Image, {\n                          avatar: true,\n                          src: \"https://react.semantic-ui.com/images/avatar/small/daniel.jpg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 140,\n                          columnNumber: 7\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: /*#__PURE__*/_jsxDEV(List.Header, {\n                            children: \"Daniel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 142,\n                            columnNumber: 9\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 5\n                      }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(Image, {\n                          avatar: true,\n                          src: \"https://react.semantic-ui.com/images/avatar/small/daniel.jpg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 146,\n                          columnNumber: 7\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: /*#__PURE__*/_jsxDEV(List.Header, {\n                            children: \"Daniel\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 148,\n                            columnNumber: 9\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 5\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 9\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      horizontal: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h4\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), \"Questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: \"three\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: props.data.typeTask === 'Quiz' ? props.data.listQuestion.map((quiz, index) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            color: \"red\",\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n              children: /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: [quiz.fquestion + \"?\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 4\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Row, {\n                positive: quiz.foptionA === quiz.correct_answer,\n                negative: quiz.foptionA !== quiz.correct_answer,\n                children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"check circle\",\n                    color: \"green\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 6\n                  }, this), quiz.foptionA]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 4\n              }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                positive: quiz.foptionB === quiz.correct_answer,\n                negative: quiz.foptionB !== quiz.correct_answer,\n                children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [\"  \", quiz.foptionB]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 4\n              }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                positive: quiz.foptionC === quiz.correct_answer,\n                negative: quiz.foptionC !== quiz.correct_answer,\n                children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [\"  \", quiz.foptionC]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 4\n              }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                positive: quiz.foptionD === quiz.correct_answer,\n                negative: quiz.foptionD !== quiz.correct_answer,\n                children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [\"  \", quiz.foptionD]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 4\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 2\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 3\n        }, this)) : !props.data.listQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: props.data.listQuestion.map((files, index) => files.split(\".\").pop() === \"pdf\" || files.split(\".\").pop() === \"pptx\" || files.split(\".\").pop() === \"docx\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: files,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                    width: 3,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + \"/files-type/\" + files.split(\".\").pop() + \".png\",\n                      style: {\n                        margin: \"10px\",\n                        height: \"100px\",\n                        width: \"100px\"\n                      },\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                    width: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                      children: /*#__PURE__*/_jsxDEV(Header, {\n                        as: \"h4\",\n                        color: \"red\",\n                        children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                      children: /*#__PURE__*/_jsxDEV(Header, {\n                        as: \"h4\",\n                        color: \"grey\",\n                        children: [files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop(), \" File\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this) : files.split(\".\").pop() === \"mp3\" || files.split(\".\").pop() === \"mp4\" ? /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              width: \"300px\",\n              height: \"230px\",\n              controls: true,\n              url: files\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this) : files.split(\".\").pop() === \"png\" || files.split(\".\").pop() === \"jpg\" || files.split(\".\").pop() === \"jpeg\" || files.split(\".\").pop() === \"gif\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 3,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: files,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: files,\n                    alt: files.split(\"-\").pop(),\n                    style: {\n                      margin: \"10px\",\n                      height: \"100px\",\n                      width: \"100px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Header, {\n                    as: \"h4\",\n                    color: \"red\",\n                    children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Header, {\n                    as: \"h4\",\n                    color: \"grey\",\n                    children: [files.split(\".\").pop(), \" File\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this) :\n            /*#__PURE__*/\n            // <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\n            //   <img\n            //     src={files}\n            //     width=\"300px\"\n            //     style={{ margin: \"2px\" }}\n            //     alt=\"\"\n            //   />\n            // </a>\n            _jsxDEV(\"a\", {\n              href: files,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 3,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      margin: \"10px\",\n                      height: \"100px\",\n                      width: \"100px\"\n                    },\n                    src: process.env.PUBLIC_URL + \"/files-type/\" + \"noFile.png\",\n                    alt: files.split(\"-\").pop()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Header, {\n                      as: \"h4\",\n                      color: \"red\",\n                      children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Header, {\n                      as: \"h4\",\n                      color: \"grey\",\n                      children: [files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop(), \" File\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n      floated: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => clicOpen(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        header: \"Cancel Add \",\n        content: \"Are you sure?\",\n        open: open,\n        onCancel: clicClose,\n        onConfirm: clicConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        type: \"submit\",\n        onClick: () => clicOpen() //onClick={onSubmitSaveTask}\n        ,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        header: \"Save Task To Assign\",\n        content: \"Are you sure?\",\n        open: open,\n        onCancel: clicClose,\n        onConfirm: clicConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        type: \"submit\" // onClick={onSubmitAssignTask}\n        ,\n        onClick: () => clicOpen(),\n        children: \"Assign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        header: \"Assign Task To Student\",\n        content: \"Are you sure?\",\n        open: open,\n        onCancel: clicClose,\n        onConfirm: clicConfirmAssign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SendTask, \"AbrnndvjkfTsmM85Emx7slOfDAs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SendTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/SendTask.js"],"names":["React","useState","useDispatch","Step","Icon","Button","Label","Item","Divider","Header","Grid","Segment","Table","List","Image","Confirm","assignTask","postTasks","moment","ReactPlayer","SendTask","props","activeIndex","setActiveIndex","dispatch","scrollPosition","setScrollPosition","onSubmitAssignTask","step","onSubmitSaveTask","data","nextStep","handleClick","e","title","newIndex","index","changeScrollPosition","newScrollPosition","open","setOpen","close","setClose","clicOpen","clicConfirm","clicConfirmAssign","clicClose","endDate","format","description","typeTask","listQuestion","map","quiz","fquestion","foptionA","correct_answer","foptionB","foptionC","foptionD","files","split","pop","process","env","PUBLIC_URL","margin","height","width","slice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Step,Icon,Button, Label,Item ,Divider,Header,Grid, Segment, Table, List, Image, Confirm} from 'semantic-ui-react';\nimport { assignTask, postTasks } from '../../redux/slices/Task';\nimport moment from \"moment\";\n\nimport ReactPlayer from 'react-player';\nexport default function SendTask(props) {\n\n\n\n    const [activeIndex,setActiveIndex] = useState();\n    const dispatch = useDispatch();\n    const [scrollPosition,setScrollPosition] = useState(0);\n\n\n const onSubmitAssignTask = ()=>{\n \n  //dispatch(assignTask(props.data));\n\n}\nvar step=3;\n    const onSubmitSaveTask = ()=>{\n     \n  \n      dispatch(postTasks(props.data));\n      props.nextStep(step+1);\n  \n    }\n    const handleClick = (e,title) =>{\n      \n        const newIndex = activeIndex === title.index ? -1 : title.index\n        setActiveIndex(newIndex)\n       \n    }\n\n   const  changeScrollPosition = (newScrollPosition) => {\n    setScrollPosition(newScrollPosition)\n  }\n\n  const [open,setOpen] = useState(false)\n  \n  const [close,setClose] = useState(false)\n  const clicOpen = () =>{\n    setOpen(true)\n  }\n  const clicConfirm = () =>{\n   \n    dispatch(postTasks(props.data));\n    props.nextStep(step+1);\n    setOpen(false)\n  }\n  const clicConfirmAssign = () =>{\n    //console.log(\"cc\")\n    //console.log(props.data);\n    dispatch(assignTask(props.data));\n    props.nextStep(step+1);\n    setOpen(false)\n  }\n  const clicClose = () =>{\n    \n    setOpen(false)\n  }\n\n    return (\n        <div >\n\n    <Grid centered columns={3}>\n<Grid.Column>\n\n</Grid.Column>\n</Grid>\n<Divider horizontal>\n      <Header as='h4'>\n        <Icon name='newspaper' />\n        Info Task\n      </Header>\n    </Divider>\n    <Grid divided='vertically'>\n    <Grid.Row columns={2}>\n      <Grid.Column>\n          <Segment raised>\n          <Item.Group divided>\n          <Item>\n     \n\n      <Item.Content>\n        <Item.Header as='a'>{props.data.title}</Item.Header>\n        <Item.Meta>\n          <span className='cinema'>{moment(props.data.endDate).format(\"MMMM Do yy\")}</span>\n        </Item.Meta>\n        <Item.Description>{props.data.description}</Item.Description>\n        <Item.Extra>\n        \n          <Label icon='tasks' content={props.data.typeTask} />\n        </Item.Extra>\n      </Item.Content>\n    </Item>\n    </Item.Group>\n       </Segment>\n        \n      </Grid.Column>\n      <Grid.Column>\n      <Segment raised>\n    \n      \n      <Item.Group>\n    <Item>\n     \n\n      <Item.Content verticalAlign='middle'>\n        <Item.Header>\n        \n        <List animated verticalAlign='middle'>\n    <List.Item>\n      <Image avatar src='https://react.semantic-ui.com/images/avatar/small/helen.jpg' />\n      <List.Content>\n        <List.Header>Helen</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <Image avatar src='https://react.semantic-ui.com/images/avatar/small/christian.jpg' />\n      <List.Content>\n        <List.Header>Christian</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <Image avatar src='https://react.semantic-ui.com/images/avatar/small/daniel.jpg' />\n      <List.Content>\n        <List.Header>Daniel</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <Image avatar src='https://react.semantic-ui.com/images/avatar/small/daniel.jpg' />\n      <List.Content>\n        <List.Header>Daniel</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <Image avatar src='https://react.semantic-ui.com/images/avatar/small/daniel.jpg' />\n      <List.Content>\n        <List.Header>Daniel</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <Image avatar src='https://react.semantic-ui.com/images/avatar/small/daniel.jpg' />\n      <List.Content>\n        <List.Header>Daniel</List.Header>\n      </List.Content>\n    </List.Item>\n  </List>\n        </Item.Header>\n      </Item.Content>\n    </Item>\n    </Item.Group>\n \n      </Segment>\n      </Grid.Column>\n    </Grid.Row>\n    </Grid>\n    <Divider horizontal>\n      <Header as='h4'>\n        <Icon name='tasks' />\n        Questions\n      </Header>\n    </Divider>\n    <Grid columns='three' >\n    <Grid.Row>\n    {props.data.typeTask ==='Quiz' ?  (\n\nprops.data.listQuestion.map((quiz,index) => \n  <Grid.Column>\n<Table  key={index} color=\"red\" textAlign=\"center\" >\n\n <Table.Header>\n   <Table.Row>\n     <Table.HeaderCell >{quiz.fquestion + \"?\"} </Table.HeaderCell>\n \n   </Table.Row>\n </Table.Header>\n\n <Table.Body>\n   <Table.Row positive={ quiz.foptionA === quiz.correct_answer } negative={ quiz.foptionA !== quiz.correct_answer } >\n     <Table.Cell>  \n     <Icon name='check circle' color=\"green\"/>\n        {quiz.foptionA}\n      \n        </Table.Cell>\n    \n   \n  \n    \n \n       \n   </Table.Row>\n   <Table.Row positive={ quiz.foptionB === quiz.correct_answer }  negative={ quiz.foptionB !== quiz.correct_answer }>\n     <Table.Cell>  {quiz.foptionB}</Table.Cell>\n   \n   </Table.Row>\n   <Table.Row positive={ quiz.foptionC === quiz.correct_answer }  negative={ quiz.foptionC !== quiz.correct_answer }>\n     <Table.Cell>  {quiz.foptionC}</Table.Cell>\n   \n   </Table.Row>\n   <Table.Row positive={ quiz.foptionD === quiz.correct_answer }  negative={ quiz.foptionD !== quiz.correct_answer }>\n     <Table.Cell>  {quiz.foptionD}</Table.Cell>\n   \n   </Table.Row>\n </Table.Body>\n\n</Table>\n<Divider hidden />\n</Grid.Column>\n\n)\n\n\n    ) :  (\n\n      \n         !props.data.listQuestion  ? (\n<></>\n         ) : (\n          <Grid>\n          <Grid.Row>\n            {props.data.listQuestion.map((files, index) =>\n              files.split(\".\").pop() === \"pdf\" ||\n              files.split(\".\").pop() === \"pptx\" ||\n              files.split(\".\").pop() === \"docx\" ? (\n                <div key={index}>\n                  <a\n                    href={files}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <div>\n                      <Grid.Column width={3}>\n                        <img\n                          src={\n                            process.env.PUBLIC_URL +\n                            \"/files-type/\" +\n                            files.split(\".\").pop() +\n                            \".png\"\n                          }\n                          style={{\n                            margin: \"10px\",\n                            height: \"100px\",\n                            width: \"100px\",\n                          }}\n                          alt=\"\"\n                        />\n                      </Grid.Column>\n                      <Grid.Column width={3}>\n                        <Grid.Row>\n                          <Header as=\"h4\" color=\"red\">\n                          {files.split(\"-\").pop().slice(0,7)+ \".\"+ files.split(\".\").pop()}\n                          </Header>\n                        </Grid.Row>\n                        <Grid.Row>\n                          <Header as=\"h4\" color=\"grey\">\n                          {files.split(\"-\").pop().slice(0,7)+ \".\"+ files.split(\".\").pop()} File\n                          </Header>\n                        </Grid.Row>\n                      </Grid.Column>\n                    </div>\n                  </a>\n                </div>\n              ) : files.split(\".\").pop() === \"mp3\" ||\n                files.split(\".\").pop() === \"mp4\" ? (\n                <ReactPlayer\n                  key={index}\n                  width=\"300px\"\n                  height=\"230px\"\n                  controls={true}\n                  url={files}\n                />\n              ) : files.split(\".\").pop() === \"png\" ||\n                files.split(\".\").pop() === \"jpg\" ||\n                files.split(\".\").pop() === \"jpeg\" ||\n                files.split(\".\").pop() === \"gif\" ? (\n                <div>\n                  <Grid.Column width={3}>\n                  <a\n                    href={files}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Image\n                      src={files}\n                      alt={files.split(\"-\").pop()}\n                      style={{\n                        margin: \"10px\",\n                        height: \"100px\",\n                        width: \"100px\",\n                      }}\n                    />\n                    </a>\n                  </Grid.Column>\n                  <Grid.Column width={3}>\n                    <Grid.Row>\n                      <Header as=\"h4\" color=\"red\">\n\n                        {files.split(\"-\").pop().slice(0,7)+ \".\"+ files.split(\".\").pop()}\n                      </Header>\n                    </Grid.Row>\n                    <Grid.Row>\n                      <Header as=\"h4\" color=\"grey\">\n                        {files.split(\".\").pop()} File\n                      </Header>\n                    </Grid.Row>\n                  </Grid.Column>\n                </div>\n              ) : (\n                // <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\n                //   <img\n                //     src={files}\n                //     width=\"300px\"\n                //     style={{ margin: \"2px\" }}\n                //     alt=\"\"\n                //   />\n                // </a>\n                <a\n                  href={files}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <div>\n                    <Grid.Column width={3}>\n                      <img\n                        style={{\n                          margin: \"10px\",\n                          height: \"100px\",\n                          width: \"100px\",\n                        }}\n                        src={\n                          process.env.PUBLIC_URL +\n                          \"/files-type/\" +\n                          \"noFile.png\"\n                        }\n                        alt={files.split(\"-\").pop()}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={3}>\n                      <Grid.Row>\n                        <Header as=\"h4\" color=\"red\">\n                        {files.split(\"-\").pop().slice(0,7)+ \".\"+ files.split(\".\").pop()}\n                        </Header>\n                      </Grid.Row>\n                      <Grid.Row>\n                        <Header as=\"h4\" color=\"grey\">\n                        {files.split(\"-\").pop().slice(0,7)+ \".\"+ files.split(\".\").pop()} File\n                        </Header>\n                      </Grid.Row>\n                    </Grid.Column>\n                  </div>\n                </a>\n              )\n            )}\n          </Grid.Row>\n        </Grid>\n         )\n      \n\n    )}\n      \n    \n     </Grid.Row>\n  </Grid>\n \n     \n      <Button.Group floated='right'>\n    <Button onClick={()=>clicOpen()}>Cancel</Button>\n    <Confirm\n        header='Cancel Add '\n        content=\"Are you sure?\"\n          open={open}\n          onCancel={clicClose}\n          onConfirm={clicConfirm}\n        />\n    <Button.Or />\n    <Button\n     color=\"red\"\n     type=\"submit\" \n     onClick={()=>clicOpen()}\n     //onClick={onSubmitSaveTask}\n    >\n      Save</Button>\n      <Confirm\n        header='Save Task To Assign'\n        content=\"Are you sure?\"\n          open={open}\n          onCancel={clicClose}\n          onConfirm={clicConfirm}\n        />\n    <Button.Or />\n    <Button\n      \n      color=\"red\"\n       type=\"submit\" \n       \n      // onClick={onSubmitAssignTask}\n       onClick={()=>clicOpen()}\n      >Assign</Button>\n          <Confirm\n        header='Assign Task To Student'\n        content=\"Are you sure?\"\n          open={open}\n          onCancel={clicClose}\n          onConfirm={clicConfirmAssign}\n        />\n  </Button.Group>\n \n    </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}