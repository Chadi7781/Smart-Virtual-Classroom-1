{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\SendTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Step, Icon, Button, Label, Item, Divider, Header, Grid, Segment, Table, List, Image, Confirm } from \"semantic-ui-react\";\nimport { assignTask, postTasks } from \"../../redux/slices/Task\";\nimport moment from \"moment\";\nimport ReactPlayer from \"react-player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SendTask(props) {\n  _s();\n\n  const [activeIndex, setActiveIndex] = useState();\n  const dispatch = useDispatch();\n  var step = 3;\n  const [cancel, setCancel] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [opensave, setOpensave] = useState(false);\n  const [close, setClose] = useState(false);\n\n  const clicCancel = () => {\n    setCancel(true);\n  };\n\n  const clicOpen = () => {\n    setOpen(true);\n  };\n\n  const clicOpensave = () => {\n    setOpensave(true);\n  };\n\n  const clicConfirmCancel = () => {\n    //dispatch(postTasks(props.data));\n    // props.nextStep(step + 1);\n    setCancel(false);\n  };\n\n  const clicConfirm = () => {\n    dispatch(postTasks(props.data));\n    props.nextStep(step + 1);\n    setOpensave(false);\n  };\n\n  const clicConfirmAssign = () => {\n    dispatch(assignTask(props.data));\n    props.nextStep(step + 1);\n    setOpen(false);\n  };\n\n  const clicClose = () => {\n    setOpen(false);\n  };\n\n  const clicClosesave = () => {\n    setOpensave(false);\n  };\n\n  const clicCloseCancel = () => {\n    setCancel(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      centered: true,\n      columns: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      horizontal: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h4\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"newspaper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \"Info Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      divided: \"vertically\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        columns: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            children: /*#__PURE__*/_jsxDEV(Item.Group, {\n              divided: true,\n              children: /*#__PURE__*/_jsxDEV(Item, {\n                children: /*#__PURE__*/_jsxDEV(Item.Content, {\n                  children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                    as: \"a\",\n                    children: props.data.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"cinema\",\n                      children: moment(props.data.endDate).format(\"MMMM Do yy\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                    children: props.data.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Item.Extra, {\n                    children: /*#__PURE__*/_jsxDEV(Label, {\n                      icon: \"tasks\",\n                      content: props.data.typeTask\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            children: /*#__PURE__*/_jsxDEV(Item.Group, {\n              children: /*#__PURE__*/_jsxDEV(Item, {\n                children: /*#__PURE__*/_jsxDEV(Item.Content, {\n                  verticalAlign: \"middle\",\n                  children: /*#__PURE__*/_jsxDEV(Item.Header, {\n                    children: /*#__PURE__*/_jsxDEV(List, {\n                      animated: true,\n                      verticalAlign: \"middle\",\n                      children: props.data.listStudents.map(student => /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(Image, {\n                          avatar: true,\n                          src: student.picture\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 112,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                          children: /*#__PURE__*/_jsxDEV(List.Header, {\n                            children: student.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 117,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 25\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      horizontal: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h4\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \"Questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: \"three\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: props.data.typeTask === \"Quiz\" ? props.data.listQuestion.map((quiz, index) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            color: \"red\",\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n              children: /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: [quiz.fquestion + \"?\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Row, {\n                positive: quiz.foptionA === quiz.correct_answer,\n                negative: quiz.foptionA !== quiz.correct_answer,\n                children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"check circle\",\n                    color: \"green\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 25\n                  }, this), quiz.foptionA]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                positive: quiz.foptionB === quiz.correct_answer,\n                negative: quiz.foptionB !== quiz.correct_answer,\n                children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [\" \", quiz.foptionB]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                positive: quiz.foptionC === quiz.correct_answer,\n                negative: quiz.foptionC !== quiz.correct_answer,\n                children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [\" \", quiz.foptionC]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Row, {\n                positive: quiz.foptionD === quiz.correct_answer,\n                negative: quiz.foptionD !== quiz.correct_answer,\n                children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [\" \", quiz.foptionD]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)) : props.data.listQuestion.legnth >= 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: props.data.listQuestion.map((files, index) => files.split(\".\").pop() === \"pdf\" || files.split(\".\").pop() === \"pptx\" || files.split(\".\").pop() === \"docx\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: files,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                    width: 3,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: process.env.PUBLIC_URL + \"/files-type/\" + files.split(\".\").pop() + \".png\",\n                      style: {\n                        margin: \"10px\",\n                        height: \"100px\",\n                        width: \"100px\"\n                      },\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                    width: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                      children: /*#__PURE__*/_jsxDEV(Header, {\n                        as: \"h4\",\n                        color: \"red\",\n                        children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                      children: /*#__PURE__*/_jsxDEV(Header, {\n                        as: \"h4\",\n                        color: \"grey\",\n                        children: [files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop(), \" \", \"File\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this) : files.split(\".\").pop() === \"mp3\" || files.split(\".\").pop() === \"mp4\" ? /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              width: \"300px\",\n              height: \"230px\",\n              controls: true,\n              url: files\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this) : files.split(\".\").pop() === \"png\" || files.split(\".\").pop() === \"jpg\" || files.split(\".\").pop() === \"jpeg\" || files.split(\".\").pop() === \"gif\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 3,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: files,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: files,\n                    alt: files.split(\"-\").pop(),\n                    style: {\n                      margin: \"10px\",\n                      height: \"100px\",\n                      width: \"100px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Header, {\n                    as: \"h4\",\n                    color: \"red\",\n                    children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Header, {\n                    as: \"h4\",\n                    color: \"grey\",\n                    children: [files.split(\".\").pop(), \" File\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this) :\n            /*#__PURE__*/\n            // <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\n            //   <img\n            //     src={files}\n            //     width=\"300px\"\n            //     style={{ margin: \"2px\" }}\n            //     alt=\"\"\n            //   />\n            // </a>\n            _jsxDEV(\"a\", {\n              href: files,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 3,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      margin: \"10px\",\n                      height: \"100px\",\n                      width: \"100px\"\n                    },\n                    src: process.env.PUBLIC_URL + \"/files-type/\" + \"noFile.png\",\n                    alt: files.split(\"-\").pop()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Header, {\n                      as: \"h4\",\n                      color: \"red\",\n                      children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Header, {\n                      as: \"h4\",\n                      color: \"grey\",\n                      children: [files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop(), \" \", \"File\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n      floated: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => clicOpen(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        header: \"Cancel Add \",\n        content: \"Are you sure?\",\n        open: open,\n        onCancel: clicClose,\n        onConfirm: clicConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        type: \"submit\",\n        onClick: () => clicOpensave() //onClick={onSubmitSaveTask}\n        ,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        header: \"Save Task To Assign\",\n        content: \"Are you sure?\",\n        open: opensave,\n        onCancel: clicClosesave,\n        onConfirm: clicConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        type: \"submit\" // onClick={onSubmitAssignTask}\n        ,\n        onClick: () => clicOpen(),\n        children: \"Assign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        header: \"Assign Task To Student\",\n        content: \"Are you sure?\",\n        open: open,\n        onCancel: clicClose,\n        onConfirm: clicConfirmAssign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendTask, \"5EXPqK5DCBPpFxwGXaEFsDFmc8A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SendTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/SendTask.js"],"names":["React","useState","useDispatch","Step","Icon","Button","Label","Item","Divider","Header","Grid","Segment","Table","List","Image","Confirm","assignTask","postTasks","moment","ReactPlayer","SendTask","props","activeIndex","setActiveIndex","dispatch","step","cancel","setCancel","open","setOpen","opensave","setOpensave","close","setClose","clicCancel","clicOpen","clicOpensave","clicConfirmCancel","clicConfirm","data","nextStep","clicConfirmAssign","clicClose","clicClosesave","clicCloseCancel","title","endDate","format","description","typeTask","listStudents","map","student","picture","name","listQuestion","quiz","index","fquestion","foptionA","correct_answer","foptionB","foptionC","foptionD","legnth","files","split","pop","process","env","PUBLIC_URL","margin","height","width","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,IARF,EASEC,OATF,EAUEC,KAVF,EAWEC,IAXF,EAYEC,KAZF,EAaEC,OAbF,QAcO,mBAdP;AAeA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,yBAAtC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,WAAP,MAAwB,cAAxB;;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,EAA9C;AACA,QAAMuB,QAAQ,GAAGtB,WAAW,EAA5B;AAIA,MAAIuB,IAAI,GAAG,CAAX;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC2B,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC6B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMiC,UAAU,GAAG,MAAM;AACvBP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAGA,QAAMQ,QAAQ,GAAG,MAAM;AACrBN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAMO,YAAY,GAAG,MAAM;AACzBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAGA,QAAMM,iBAAiB,GAAG,MAAM;AAC9B;AACD;AACAV,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA,GAJD;;AAKA,QAAMW,WAAW,GAAG,MAAM;AACxBd,IAAAA,QAAQ,CAACP,SAAS,CAACI,KAAK,CAACkB,IAAP,CAAV,CAAR;AACAlB,IAAAA,KAAK,CAACmB,QAAN,CAAef,IAAI,GAAG,CAAtB;AACAM,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAJD;;AAKA,QAAMU,iBAAiB,GAAG,MAAM;AAC9BjB,IAAAA,QAAQ,CAACR,UAAU,CAACK,KAAK,CAACkB,IAAP,CAAX,CAAR;AACAlB,IAAAA,KAAK,CAACmB,QAAN,CAAef,IAAI,GAAG,CAAtB;AACAI,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAJD;;AAKA,QAAMa,SAAS,GAAG,MAAM;AACtBb,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAGA,QAAMc,aAAa,GAAG,MAAM;AAC1BZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAGA,QAAMa,eAAe,GAAG,MAAM;AAC5BjB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,OAAO,EAAE,CAAxB;AAAA,6BACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AAAS,MAAA,UAAU,MAAnB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,YAAd;AAAA,6BACE,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAE,CAAnB;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,MAAM,MAAf;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,OAAO,MAAnB;AAAA,qCACE,QAAC,IAAD;AAAA,uCACE,QAAC,IAAD,CAAM,OAAN;AAAA,0CACE,QAAC,IAAD,CAAM,MAAN;AAAa,oBAAA,EAAE,EAAC,GAAhB;AAAA,8BAAqBN,KAAK,CAACkB,IAAN,CAAWM;AAAhC;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,2CACE;AAAM,sBAAA,SAAS,EAAC,QAAhB;AAAA,gCACG3B,MAAM,CAACG,KAAK,CAACkB,IAAN,CAAWO,OAAZ,CAAN,CAA2BC,MAA3B,CAAkC,YAAlC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFF,eAOE,QAAC,IAAD,CAAM,WAAN;AAAA,8BACG1B,KAAK,CAACkB,IAAN,CAAWS;AADd;AAAA;AAAA;AAAA;AAAA,0BAPF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAA,2CACE,QAAC,KAAD;AAAO,sBAAA,IAAI,EAAC,OAAZ;AAAoB,sBAAA,OAAO,EAAE3B,KAAK,CAACkB,IAAN,CAAWU;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAuBE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,MAAM,MAAf;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AAAA,qCACE,QAAC,IAAD;AAAA,uCACE,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,aAAa,EAAC,QAA5B;AAAA,yCACE,QAAC,IAAD,CAAM,MAAN;AAAA,2CACE,QAAC,IAAD;AAAM,sBAAA,QAAQ,MAAd;AAAe,sBAAA,aAAa,EAAC,QAA7B;AAAA,gCACG5B,KAAK,CAACkB,IAAN,CAAWW,YAAX,CAAwBC,GAAxB,CAA6BC,OAAD,iBAC7B,QAAC,IAAD,CAAM,IAAN;AAAA,gDACE,QAAC,KAAD;AACE,0BAAA,MAAM,MADR;AAEE,0BAAA,GAAG,EAAEA,OAAO,CAACC;AAFf;AAAA;AAAA;AAAA;AAAA,gCADF,eAKE,QAAC,IAAD,CAAM,OAAN;AAAA,iDACE,QAAC,IAAD,CAAM,MAAN;AAAA,sCAAcD,OAAO,CAACE;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gCALF;AAAA;AAAA;AAAA;AAAA;AAAA,8BADC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eA6DE,QAAC,OAAD;AAAS,MAAA,UAAU,MAAnB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7DF,eAmEE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA,6BACE,QAAC,IAAD,CAAM,GAAN;AAAA,kBACGjC,KAAK,CAACkB,IAAN,CAAWU,QAAX,KAAwB,MAAxB,GACC5B,KAAK,CAACkB,IAAN,CAAWgB,YAAX,CAAwBJ,GAAxB,CAA4B,CAACK,IAAD,EAAOC,KAAP,kBAC1B,QAAC,IAAD,CAAM,MAAN;AAAA,kCACE,QAAC,KAAD;AAAmB,YAAA,KAAK,EAAC,KAAzB;AAA+B,YAAA,SAAS,EAAC,QAAzC;AAAA,oCACE,QAAC,KAAD,CAAO,MAAP;AAAA,qCACE,QAAC,KAAD,CAAO,GAAP;AAAA,uCACE,QAAC,KAAD,CAAO,UAAP;AAAA,6BACGD,IAAI,CAACE,SAAL,GAAiB,GADpB,EACyB,GADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,KAAD,CAAO,IAAP;AAAA,sCACE,QAAC,KAAD,CAAO,GAAP;AACE,gBAAA,QAAQ,EAAEF,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,cADnC;AAEE,gBAAA,QAAQ,EAAEJ,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,cAFnC;AAAA,uCAIE,QAAC,KAAD,CAAO,IAAP;AAAA,0CACE,QAAC,IAAD;AAAM,oBAAA,IAAI,EAAC,cAAX;AAA0B,oBAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGJ,IAAI,CAACG,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,KAAD,CAAO,GAAP;AACE,gBAAA,QAAQ,EAAEH,IAAI,CAACK,QAAL,KAAkBL,IAAI,CAACI,cADnC;AAEE,gBAAA,QAAQ,EAAEJ,IAAI,CAACK,QAAL,KAAkBL,IAAI,CAACI,cAFnC;AAAA,uCAIE,QAAC,KAAD,CAAO,IAAP;AAAA,kCAAcJ,IAAI,CAACK,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,sBAVF,eAgBE,QAAC,KAAD,CAAO,GAAP;AACE,gBAAA,QAAQ,EAAEL,IAAI,CAACM,QAAL,KAAkBN,IAAI,CAACI,cADnC;AAEE,gBAAA,QAAQ,EAAEJ,IAAI,CAACM,QAAL,KAAkBN,IAAI,CAACI,cAFnC;AAAA,uCAIE,QAAC,KAAD,CAAO,IAAP;AAAA,kCAAcJ,IAAI,CAACM,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAsBE,QAAC,KAAD,CAAO,GAAP;AACE,gBAAA,QAAQ,EAAEN,IAAI,CAACO,QAAL,KAAkBP,IAAI,CAACI,cADnC;AAEE,gBAAA,QAAQ,EAAEJ,IAAI,CAACO,QAAL,KAAkBP,IAAI,CAACI,cAFnC;AAAA,uCAIE,QAAC,KAAD,CAAO,IAAP;AAAA,kCAAcJ,IAAI,CAACO,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,sBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAAYN,KAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAwCE,QAAC,OAAD;AAAS,YAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,kBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,GA6CGpC,KAAK,CAACkB,IAAN,CAAWgB,YAAX,CAAwBS,MAAxB,IAAiC,CAAjC,gBACF,qCADE,gBAGF,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,GAAN;AAAA,sBACG3C,KAAK,CAACkB,IAAN,CAAWgB,YAAX,CAAwBJ,GAAxB,CAA4B,CAACc,KAAD,EAAQR,KAAR,KAC3BQ,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,KAA3B,IACAF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,MAD3B,IAEAF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,MAF3B,gBAGE;AAAA,qCACE;AAAG,gBAAA,IAAI,EAAEF,KAAT;AAAgB,gBAAA,MAAM,EAAC,QAAvB;AAAgC,gBAAA,GAAG,EAAC,qBAApC;AAAA,uCACE;AAAA,0CACE,QAAC,IAAD,CAAM,MAAN;AAAa,oBAAA,KAAK,EAAE,CAApB;AAAA,2CACE;AACE,sBAAA,GAAG,EACDG,OAAO,CAACC,GAAR,CAAYC,UAAZ,GACA,cADA,GAEAL,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EAFA,GAGA,MALJ;AAOE,sBAAA,KAAK,EAAE;AACLI,wBAAAA,MAAM,EAAE,MADH;AAELC,wBAAAA,MAAM,EAAE,OAFH;AAGLC,wBAAAA,KAAK,EAAE;AAHF,uBAPT;AAYE,sBAAA,GAAG,EAAC;AAZN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAiBE,QAAC,IAAD,CAAM,MAAN;AAAa,oBAAA,KAAK,EAAE,CAApB;AAAA,4CACE,QAAC,IAAD,CAAM,GAAN;AAAA,6CACE,QAAC,MAAD;AAAQ,wBAAA,EAAE,EAAC,IAAX;AAAgB,wBAAA,KAAK,EAAC,KAAtB;AAAA,kCACGR,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,GAAuBO,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,IACC,GADD,GAECT,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eAQE,QAAC,IAAD,CAAM,GAAN;AAAA,6CACE,QAAC,MAAD;AAAQ,wBAAA,EAAE,EAAC,IAAX;AAAgB,wBAAA,KAAK,EAAC,MAAtB;AAAA,mCACGF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,GAAuBO,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,IACC,GADD,GAECT,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EAHJ,EAG4B,GAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BARF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,eAAUV,KAAV;AAAA;AAAA;AAAA;AAAA,oBAHF,GA0CIQ,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,KAA3B,IACFF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,KADzB,gBAEF,QAAC,WAAD;AAEE,cAAA,KAAK,EAAC,OAFR;AAGE,cAAA,MAAM,EAAC,OAHT;AAIE,cAAA,QAAQ,EAAE,IAJZ;AAKE,cAAA,GAAG,EAAEF;AALP,eACOR,KADP;AAAA;AAAA;AAAA;AAAA,oBAFE,GASAQ,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,KAA3B,IACFF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,KADzB,IAEFF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,MAFzB,IAGFF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,OAA2B,KAHzB,gBAIF;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAa,gBAAA,KAAK,EAAE,CAApB;AAAA,uCACE;AACE,kBAAA,IAAI,EAAEF,KADR;AAEE,kBAAA,MAAM,EAAC,QAFT;AAGE,kBAAA,GAAG,EAAC,qBAHN;AAAA,yCAKE,QAAC,KAAD;AACE,oBAAA,GAAG,EAAEA,KADP;AAEE,oBAAA,GAAG,EAAEA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EAFP;AAGE,oBAAA,KAAK,EAAE;AACLI,sBAAAA,MAAM,EAAE,MADH;AAELC,sBAAAA,MAAM,EAAE,OAFH;AAGLC,sBAAAA,KAAK,EAAE;AAHF;AAHT;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAkBE,QAAC,IAAD,CAAM,MAAN;AAAa,gBAAA,KAAK,EAAE,CAApB;AAAA,wCACE,QAAC,IAAD,CAAM,GAAN;AAAA,yCACE,QAAC,MAAD;AAAQ,oBAAA,EAAE,EAAC,IAAX;AAAgB,oBAAA,KAAK,EAAC,KAAtB;AAAA,8BACGR,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,GAAuBO,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,IACC,GADD,GAECT,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE,QAAC,IAAD,CAAM,GAAN;AAAA,yCACE,QAAC,MAAD;AAAQ,oBAAA,EAAE,EAAC,IAAX;AAAgB,oBAAA,KAAK,EAAC,MAAtB;AAAA,+BACGF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EADH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJE;AAAA;AAsCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAG,cAAA,IAAI,EAAEF,KAAT;AAAgB,cAAA,MAAM,EAAC,QAAvB;AAAgC,cAAA,GAAG,EAAC,qBAApC;AAAA,qCACE;AAAA,wCACE,QAAC,IAAD,CAAM,MAAN;AAAa,kBAAA,KAAK,EAAE,CAApB;AAAA,yCACE;AACE,oBAAA,KAAK,EAAE;AACLM,sBAAAA,MAAM,EAAE,MADH;AAELC,sBAAAA,MAAM,EAAE,OAFH;AAGLC,sBAAAA,KAAK,EAAE;AAHF,qBADT;AAME,oBAAA,GAAG,EACDL,OAAO,CAACC,GAAR,CAAYC,UAAZ,GACA,cADA,GAEA,YATJ;AAWE,oBAAA,GAAG,EAAEL,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB;AAXP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAgBE,QAAC,IAAD,CAAM,MAAN;AAAa,kBAAA,KAAK,EAAE,CAApB;AAAA,0CACE,QAAC,IAAD,CAAM,GAAN;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,EAAE,EAAC,IAAX;AAAgB,sBAAA,KAAK,EAAC,KAAtB;AAAA,gCACGF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,GAAuBO,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,IACC,GADD,GAECT,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE,QAAC,IAAD,CAAM,GAAN;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,EAAE,EAAC,IAAX;AAAgB,sBAAA,KAAK,EAAC,MAAtB;AAAA,iCACGF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,GAAuBO,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,IACC,GADD,GAECT,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EAHJ,EAG4B,GAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAlGH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAjDJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnEF,eAqQE,QAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,OAAO,EAAC,OAAtB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMhC,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,OAAO,EAAC,eAFV;AAGE,QAAA,IAAI,EAAEP,IAHR;AAIE,QAAA,QAAQ,EAAEc,SAJZ;AAKE,QAAA,SAAS,EAAEJ;AALb;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,MAAMF,YAAY,EAH7B,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE,QAAC,OAAD;AACE,QAAA,MAAM,EAAC,qBADT;AAEE,QAAA,OAAO,EAAC,eAFV;AAGE,QAAA,IAAI,EAAEN,QAHR;AAIE,QAAA,QAAQ,EAAEa,aAJZ;AAKE,QAAA,SAAS,EAAEL;AALb;AAAA;AAAA;AAAA;AAAA,cAlBF,eAyBE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,cAzBF,eA0BE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,QAAA,OAAO,EAAE,MAAMH,QAAQ,EAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,eAkCE,QAAC,OAAD;AACE,QAAA,MAAM,EAAC,wBADT;AAEE,QAAA,OAAO,EAAC,eAFV;AAGE,QAAA,IAAI,EAAEP,IAHR;AAIE,QAAA,QAAQ,EAAEc,SAJZ;AAKE,QAAA,SAAS,EAAED;AALb;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YArQF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkTD;;GAhWuBrB,Q;UAELlB,W;;;KAFKkB,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Step,\n  Icon,\n  Button,\n  Label,\n  Item,\n  Divider,\n  Header,\n  Grid,\n  Segment,\n  Table,\n  List,\n  Image,\n  Confirm,\n} from \"semantic-ui-react\";\nimport { assignTask, postTasks } from \"../../redux/slices/Task\";\nimport moment from \"moment\";\n\nimport ReactPlayer from \"react-player\";\nexport default function SendTask(props) {\n  const [activeIndex, setActiveIndex] = useState();\n  const dispatch = useDispatch();\n \n\n \n  var step = 3;\n  const [cancel, setCancel] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [opensave, setOpensave] = useState(false);\n\n  const [close, setClose] = useState(false);\n  const clicCancel = () => {\n    setCancel(true);\n  };\n  const clicOpen = () => {\n    setOpen(true);\n  };\n  const clicOpensave = () => {\n    setOpensave(true);\n  };\n  const clicConfirmCancel = () => {\n    //dispatch(postTasks(props.data));\n   // props.nextStep(step + 1);\n   setCancel(false);\n  };\n  const clicConfirm = () => {\n    dispatch(postTasks(props.data));\n    props.nextStep(step + 1);\n    setOpensave(false);\n  };\n  const clicConfirmAssign = () => {\n    dispatch(assignTask(props.data));\n    props.nextStep(step + 1);\n    setOpen(false);\n  };\n  const clicClose = () => {\n    setOpen(false);\n  };\n  const clicClosesave = () => {\n    setOpensave(false);\n  };\n  const clicCloseCancel = () => {\n    setCancel(false);\n  };\n\n  return (\n    <div>\n      <Grid centered columns={3}>\n        <Grid.Column></Grid.Column>\n      </Grid>\n      <Divider horizontal>\n        <Header as=\"h4\">\n          <Icon name=\"newspaper\" />\n          Info Task\n        </Header>\n      </Divider>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Segment raised>\n              <Item.Group divided>\n                <Item>\n                  <Item.Content>\n                    <Item.Header as=\"a\">{props.data.title}</Item.Header>\n                    <Item.Meta>\n                      <span className=\"cinema\">\n                        {moment(props.data.endDate).format(\"MMMM Do yy\")}\n                      </span>\n                    </Item.Meta>\n                    <Item.Description>\n                      {props.data.description}\n                    </Item.Description>\n                    <Item.Extra>\n                      <Label icon=\"tasks\" content={props.data.typeTask} />\n                    </Item.Extra>\n                  </Item.Content>\n                </Item>\n              </Item.Group>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment raised>\n              <Item.Group>\n                <Item>\n                  <Item.Content verticalAlign=\"middle\">\n                    <Item.Header>\n                      <List animated verticalAlign=\"middle\">\n                        {props.data.listStudents.map((student) =>(\n                        <List.Item>\n                          <Image\n                            avatar\n                            src={student.picture}\n                          />\n                          <List.Content>\n                            <List.Header>{student.name}</List.Header>\n                          </List.Content>\n                        </List.Item>\n                  ) )}\n                      </List>\n                    </Item.Header>\n                  </Item.Content>\n                </Item>\n              </Item.Group>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Divider horizontal>\n        <Header as=\"h4\">\n          <Icon name=\"tasks\" />\n          Questions\n        </Header>\n      </Divider>\n      <Grid columns=\"three\">\n        <Grid.Row>\n          {props.data.typeTask === \"Quiz\" ? (\n            props.data.listQuestion.map((quiz, index) => (\n              <Grid.Column>\n                <Table key={index} color=\"red\" textAlign=\"center\">\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>\n                        {quiz.fquestion + \"?\"}{\" \"}\n                      </Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n\n                  <Table.Body>\n                    <Table.Row\n                      positive={quiz.foptionA === quiz.correct_answer}\n                      negative={quiz.foptionA !== quiz.correct_answer}\n                    >\n                      <Table.Cell>\n                        <Icon name=\"check circle\" color=\"green\" />\n                        {quiz.foptionA}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row\n                      positive={quiz.foptionB === quiz.correct_answer}\n                      negative={quiz.foptionB !== quiz.correct_answer}\n                    >\n                      <Table.Cell> {quiz.foptionB}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row\n                      positive={quiz.foptionC === quiz.correct_answer}\n                      negative={quiz.foptionC !== quiz.correct_answer}\n                    >\n                      <Table.Cell> {quiz.foptionC}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row\n                      positive={quiz.foptionD === quiz.correct_answer}\n                      negative={quiz.foptionD !== quiz.correct_answer}\n                    >\n                      <Table.Cell> {quiz.foptionD}</Table.Cell>\n                    </Table.Row>\n                  </Table.Body>\n                </Table>\n                <Divider hidden />\n              </Grid.Column>\n            ))\n          ) : props.data.listQuestion.legnth >=0 ? (\n            <></>\n          ) : (\n            <Grid>\n              <Grid.Row>\n                {props.data.listQuestion.map((files, index) =>\n                  files.split(\".\").pop() === \"pdf\" ||\n                  files.split(\".\").pop() === \"pptx\" ||\n                  files.split(\".\").pop() === \"docx\" ? (\n                    <div key={index}>\n                      <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <div>\n                          <Grid.Column width={3}>\n                            <img\n                              src={\n                                process.env.PUBLIC_URL +\n                                \"/files-type/\" +\n                                files.split(\".\").pop() +\n                                \".png\"\n                              }\n                              style={{\n                                margin: \"10px\",\n                                height: \"100px\",\n                                width: \"100px\",\n                              }}\n                              alt=\"\"\n                            />\n                          </Grid.Column>\n                          <Grid.Column width={3}>\n                            <Grid.Row>\n                              <Header as=\"h4\" color=\"red\">\n                                {files.split(\"-\").pop().slice(0, 7) +\n                                  \".\" +\n                                  files.split(\".\").pop()}\n                              </Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                              <Header as=\"h4\" color=\"grey\">\n                                {files.split(\"-\").pop().slice(0, 7) +\n                                  \".\" +\n                                  files.split(\".\").pop()}{\" \"}\n                                File\n                              </Header>\n                            </Grid.Row>\n                          </Grid.Column>\n                        </div>\n                      </a>\n                    </div>\n                  ) : files.split(\".\").pop() === \"mp3\" ||\n                    files.split(\".\").pop() === \"mp4\" ? (\n                    <ReactPlayer\n                      key={index}\n                      width=\"300px\"\n                      height=\"230px\"\n                      controls={true}\n                      url={files}\n                    />\n                  ) : files.split(\".\").pop() === \"png\" ||\n                    files.split(\".\").pop() === \"jpg\" ||\n                    files.split(\".\").pop() === \"jpeg\" ||\n                    files.split(\".\").pop() === \"gif\" ? (\n                    <div>\n                      <Grid.Column width={3}>\n                        <a\n                          href={files}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Image\n                            src={files}\n                            alt={files.split(\"-\").pop()}\n                            style={{\n                              margin: \"10px\",\n                              height: \"100px\",\n                              width: \"100px\",\n                            }}\n                          />\n                        </a>\n                      </Grid.Column>\n                      <Grid.Column width={3}>\n                        <Grid.Row>\n                          <Header as=\"h4\" color=\"red\">\n                            {files.split(\"-\").pop().slice(0, 7) +\n                              \".\" +\n                              files.split(\".\").pop()}\n                          </Header>\n                        </Grid.Row>\n                        <Grid.Row>\n                          <Header as=\"h4\" color=\"grey\">\n                            {files.split(\".\").pop()} File\n                          </Header>\n                        </Grid.Row>\n                      </Grid.Column>\n                    </div>\n                  ) : (\n                    // <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\n                    //   <img\n                    //     src={files}\n                    //     width=\"300px\"\n                    //     style={{ margin: \"2px\" }}\n                    //     alt=\"\"\n                    //   />\n                    // </a>\n                    <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <div>\n                        <Grid.Column width={3}>\n                          <img\n                            style={{\n                              margin: \"10px\",\n                              height: \"100px\",\n                              width: \"100px\",\n                            }}\n                            src={\n                              process.env.PUBLIC_URL +\n                              \"/files-type/\" +\n                              \"noFile.png\"\n                            }\n                            alt={files.split(\"-\").pop()}\n                          />\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                          <Grid.Row>\n                            <Header as=\"h4\" color=\"red\">\n                              {files.split(\"-\").pop().slice(0, 7) +\n                                \".\" +\n                                files.split(\".\").pop()}\n                            </Header>\n                          </Grid.Row>\n                          <Grid.Row>\n                            <Header as=\"h4\" color=\"grey\">\n                              {files.split(\"-\").pop().slice(0, 7) +\n                                \".\" +\n                                files.split(\".\").pop()}{\" \"}\n                              File\n                            </Header>\n                          </Grid.Row>\n                        </Grid.Column>\n                      </div>\n                    </a>\n                  )\n                )}\n              </Grid.Row>\n            </Grid>\n          )}\n        </Grid.Row>\n      </Grid>\n\n      <Button.Group floated=\"right\">\n        <Button onClick={() => clicOpen()}>Cancel</Button>\n        <Confirm\n          header=\"Cancel Add \"\n          content=\"Are you sure?\"\n          open={open}\n          onCancel={clicClose}\n          onConfirm={clicConfirm}\n        />\n        <Button.Or />\n        <Button\n          color=\"red\"\n          type=\"submit\"\n          onClick={() => clicOpensave()}\n          //onClick={onSubmitSaveTask}\n        >\n          Save\n        </Button>\n        <Confirm\n          header=\"Save Task To Assign\"\n          content=\"Are you sure?\"\n          open={opensave}\n          onCancel={clicClosesave}\n          onConfirm={clicConfirm}\n        />\n        <Button.Or />\n        <Button\n          color=\"red\"\n          type=\"submit\"\n          // onClick={onSubmitAssignTask}\n          onClick={() => clicOpen()}\n        >\n          Assign\n        </Button>\n        <Confirm\n          header=\"Assign Task To Student\"\n          content=\"Are you sure?\"\n          open={open}\n          onCancel={clicClose}\n          onConfirm={clicConfirmAssign}\n        />\n      </Button.Group>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}