{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\ModalAssignTask.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\nimport { assignAfterSave, getTaskByTeacher, updateTaskStatus } from '../../redux/slices/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalAssignTask(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const assign = () => {\n    _s();\n\n    dispatch(updateTaskStatus(taskk));\n    useDispatch(assignAfterSave(taskk));\n    dispatch(getTaskByTeacher(taskDetail));\n    setOpen(false);\n  };\n\n  _s(assign, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n    return [useDispatch];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      size: \"small\",\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Assign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"archive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), \"Assign Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          onClick: () => setOpen(false),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), \" No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"black\",\n          onClick: () => assign(),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), \" Yes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ModalAssignTask, \"iLw5oRex11jeprRbOFCG2RQQzAE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModalAssignTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalAssignTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/ModalAssignTask.js"],"names":["React","useDispatch","Button","Header","Icon","Modal","assignAfterSave","getTaskByTeacher","updateTaskStatus","ModalAssignTask","props","open","setOpen","useState","dispatch","assign","taskk","taskDetail","task","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,QAA4C,mBAA5C;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,gBAA5C,QAAoE,yBAApE;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAAxB;AACA,QAAOC,QAAQ,GAAGb,WAAW,EAA7B;;AACA,QAAMc,MAAM,GAAG,MAAI;AAAA;;AAEfD,IAAAA,QAAQ,CAACN,gBAAgB,CAACQ,KAAD,CAAjB,CAAR;AACFf,IAAAA,WAAW,CAACK,eAAe,CAACU,KAAD,CAAhB,CAAX;AACEF,IAAAA,QAAQ,CAACP,gBAAgB,CAACU,UAAD,CAAjB,CAAR;AACAL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAND;;AAH2C,KAGrCG,MAHqC;AAAA,YAMzCd,WANyC;AAAA;;AAU3C,sBACI;AAAA,2BACM,QAAC,KAAD;AAER,MAAA,OAAO,EAAE,MAAMW,OAAO,CAAC,KAAD,CAFd;AAGR,MAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAHb;AAIR,MAAA,IAAI,EAAED,IAJE;AAKR,MAAA,IAAI,EAAC,OALG;AAMR,MAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND;AAAA,8BAQR,QAAC,MAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cARQ,eAYR,QAAC,KAAD,CAAO,OAAP;AAAA,+BACE;AAAA,oBACGD,KAAK,CAACQ,IAAN,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZQ,eAiBR,QAAC,KAAD,CAAO,OAAP;AAAA,gCACE,QAAC,MAAD;AAAS,UAAA,KAAK,EAAC,KAAf;AAAsB,UAAA,OAAO,EAAE,MAAMP,OAAO,CAAC,KAAD,CAA5C;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAuB,UAAA,OAAO,EAAE,MAAIG,MAAM,EAA1C;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;IAxCuBN,e;UAEFR,W;;;KAFEQ,e","sourcesContent":["import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\r\nimport { assignAfterSave, getTaskByTeacher, updateTaskStatus } from '../../redux/slices/Task';\r\n\r\nexport default function ModalAssignTask(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const  dispatch = useDispatch();\r\n    const assign = ()=>{\r\n      \r\n        dispatch(updateTaskStatus(taskk));\r\n      useDispatch(assignAfterSave(taskk));\r\n        dispatch(getTaskByTeacher(taskDetail));\r\n        setOpen(false)\r\n    }\r\n    return (\r\n        <div>\r\n              <Modal\r\n      \r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      size='small'\r\n      trigger={<Button>Assign</Button>}\r\n    >\r\n      <Header >\r\n        <Icon name='archive' />\r\n        Assign Task\r\n      </Header>\r\n      <Modal.Content>\r\n        <p>\r\n          {props.task.description}\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button  color='red'  onClick={() => setOpen(false)}>\r\n          <Icon name='remove' /> No\r\n        </Button>\r\n        <Button color='black'  onClick={()=>assign()}>\r\n          <Icon name='checkmark' /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}