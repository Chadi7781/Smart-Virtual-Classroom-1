{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\AllTasksStudent.js\";\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react';\nimport { getTasksById } from '../../redux/slices/Grade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllTasksStudent(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.allGrades.length <= 0 ? /*#__PURE__*/_jsxDEV(Segment, {\n      placeholder: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        icon: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 3\n        }, this), \"No Tasks For you .\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 1\n    }, this) : props.allGrades.map((task, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: task.task.typeTask === \"Quiz\" ? \"/TaskQuiz/\" + task._id : \"/TaskFileDetail/\" + task._id,\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        color: \"red\",\n        raised: true,\n        children: /*#__PURE__*/_jsxDEV(Item.Group, {\n          divided: true,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n              size: \"tiny\",\n              avatar: true,\n              src: \"https://react.semantic-ui.com/images/avatar/small/helen.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                as: \"a\",\n                children: task.task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"cinema\",\n                    children: moment(task.task.DateAt).format(\"MMMM Do yy\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                children: task.task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: task.taskStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 14\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = AllTasksStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTasksStudent\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/AllTasksStudent.js"],"names":["moment","React","useEffect","useDispatch","useSelector","Link","Button","Divider","Header","Icon","Item","Label","Segment","Statistic","getTasksById","AllTasksStudent","props","allGrades","length","map","task","index","typeTask","_id","title","DateAt","format","description","taskStatus"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,KAA9C,EAAqDC,OAArD,EAA8DC,SAA9D,QAA+E,mBAA/E;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAGA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAI3C,sBACI;AAAA,cACQA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,IAA0B,CAA1B,gBAEhB,QAAC,OAAD;AAAS,MAAA,WAAW,MAApB;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFgB,GAUIF,KAAK,CAACC,SAAN,CAAgBE,GAAhB,CAAoB,CAACC,IAAD,EAAMC,KAAN,kBAEpB,QAAC,IAAD;AAAM,MAAA,EAAE,EAAED,IAAI,CAACA,IAAL,CAAUE,QAAV,KAAqB,MAArB,GAA8B,eAAaF,IAAI,CAACG,GAAhD,GAAsD,qBAAmBH,IAAI,CAACG,GAAxF;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,KAAf;AAAqB,QAAA,MAAM,MAA3B;AAAA,+BAEC,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,MAAnB;AAAA,iCAEV,QAAC,IAAD;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,IAAI,EAAC,MAAjB;AACC,cAAA,MAAM,MADP;AACQ,cAAA,GAAG,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,oBADA,eAIC,QAAC,IAAD,CAAM,OAAN;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAa,gBAAA,EAAE,EAAC,GAAhB;AAAA,0BAAqBH,IAAI,CAACA,IAAL,CAAUI;AAA/B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,uCACE;AAAA,+CAAQ;AAAM,oBAAA,SAAS,EAAC,QAAhB;AAAA,8BAA0BxB,MAAM,CAACoB,IAAI,CAACA,IAAL,CAAUK,MAAX,CAAN,CAAyBC,MAAzB,CAAgC,YAAhC;AAA1B;AAAA;AAAA;AAAA;AAAA,0BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE,QAAC,IAAD,CAAM,WAAN;AAAA,0BAAmBN,IAAI,CAACA,IAAL,CAAUO;AAA7B;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJD,eAeK;AAAA,wBAAQP,IAAI,CAACQ;AAAb;AAAA;AAAA;AAAA;AAAA,oBAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,WAAyBP,KAAzB;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFA;AAXZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH;KArDuBN,e","sourcesContent":["import moment from 'moment';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react'\r\nimport { getTasksById } from '../../redux/slices/Grade';\r\n\r\n\r\nexport default function AllTasksStudent(props) {\r\n\r\n   \r\n    \r\n    return (\r\n        <div>\r\n              { props.allGrades.length <= 0 ? (\r\n\r\n<Segment placeholder>\r\n<Header icon>\r\n  <Icon name='tasks' />\r\n  No Tasks For you .\r\n</Header>\r\n\r\n</Segment> \r\n                   ) : (\r\n                    props.allGrades.map((task,index) =>\r\n                    \r\n                    <Link to={task.task.typeTask===\"Quiz\" ? \"/TaskQuiz/\"+task._id : \"/TaskFileDetail/\"+task._id}>                      \r\n                      <Segment color='red' raised > \r\n                     \r\n                       <Item.Group divided key={index} >\r\n                      \r\n             <Item  >\r\n             <Item.Image size='tiny' \r\n              avatar src='https://react.semantic-ui.com/images/avatar/small/helen.jpg' /> \r\n           \r\n              <Item.Content >\r\n                <Item.Header as='a'>{task.task.title}</Item.Header>\r\n                <Item.Meta>\r\n                  <span > <span className='cinema'>{moment(task.task.DateAt).format(\"MMMM Do yy\")}</span></span>\r\n                </Item.Meta>\r\n                <Item.Description>{task.task.description}</Item.Description>\r\n              \r\n                \r\n             \r\n                </Item.Content>\r\n             \r\n                  <label>{task.taskStatus}</label>\r\n             \r\n              \r\n              \r\n                \r\n             </Item>\r\n             \r\n             </Item.Group>\r\n             \r\n             </Segment>\r\n             </Link>\r\n\r\n                     ))}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}