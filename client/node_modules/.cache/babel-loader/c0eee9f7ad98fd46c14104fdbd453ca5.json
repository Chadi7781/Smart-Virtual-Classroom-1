{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\answer\\\\EditAnswer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button, Form, TextArea, Modal, Icon } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { AddAnswersApi } from \"../../api/api\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchQuestions } from \"../../redux/slices/questionslice\";\nimport FileUpload from \"../../utlis/FileUpload\";\nimport { fetchAnswers } from \"../../redux/slices/answerslice\";\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditAnswer(props) {\n  _s();\n\n  const answer = props.answerSelected;\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [error] = useState({\n    visible: false,\n    message: \"\"\n  });\n  const dispatch = useDispatch();\n  const [Images, setImages] = useState([]);\n\n  const updateImages = newImages => {\n    if (newImages === null) {\n      answer.Filee.forEach(element => {\n        setImages(element);\n      });\n    } else {\n      //alert(\"hi\");\n      setUp(1);\n      setImages(newImages);\n    }\n  };\n\n  const [up, setUp] = useState(0);\n  const formik = useFormik({\n    initialValues: {\n      Body: answer.Body,\n      Writerq: {\n        _id: \"604e421a647d1719cb93d08e\"\n      },\n      Filee: []\n    },\n    validationSchema: yupSchema,\n    onSubmit: async values => {\n      try {\n        if (Images.length !== 0) {\n          values.Filee = Images;\n        } else {\n          values.Filee = answer.Filee;\n        }\n\n        const res = await AddAnswersApi.putAnswers(values, answer._id);\n        setEnableUpload(true);\n        dispatch(fetchAnswers(answer.Question._id));\n      } catch (error) {\n        alert(error);\n      }\n    }\n  });\n  const [enableUpload, setEnableUpload] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Icon, {\n      name: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Update Your Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          control: TextArea,\n          placeholder: \"write your answer here\",\n          label: \"Content\",\n          name: \"Body\",\n          value: formik.values.Body,\n          onChange: formik.handleChange,\n          error: formik.errors.Body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\",\n            marginRight: \"5%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              maxHeight: \"40px\"\n            },\n            type: \"submit\",\n            content: \"Edit\",\n            icon: \"edit\",\n            color: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"black\",\n            onClick: () => setOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"5%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(FileUploadEdit, {\n              refreshFunction: updateImages,\n              listfile: answer.Filee,\n              Enbale: enableUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAnswer, \"UpKWeOcYwwhemEbbFHDx4sAQfQM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = EditAnswer;\nconst yupSchema = Yup.object({\n  Body: Yup.string().required(\"Champs requis!\")\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAnswer\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/answer/EditAnswer.js"],"names":["React","useEffect","Button","Form","TextArea","Modal","Icon","Yup","useFormik","AddAnswersApi","useState","useDispatch","fetchQuestions","FileUpload","fetchAnswers","FileUploadEdit","EditAnswer","props","answer","answerSelected","open","setOpen","handleClickOpen","handleClose","error","visible","message","dispatch","Images","setImages","updateImages","newImages","Filee","forEach","element","setUp","up","formik","initialValues","Body","Writerq","_id","validationSchema","yupSchema","onSubmit","values","length","res","putAnswers","setEnableUpload","Question","alert","enableUpload","handleSubmit","handleChange","errors","float","marginRight","maxHeight","display","marginLeft","object","string","required"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, Form, TextArea, Modal, Icon } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddAnswersApi } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchQuestions } from \"../../redux/slices/questionslice\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport { fetchAnswers } from \"../../redux/slices/answerslice\";\r\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\r\n\r\nexport default function EditAnswer(props) {\r\n  const answer = props.answerSelected;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [error] = useState({ visible: false, message: \"\" });\r\n  const dispatch = useDispatch();\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n    if (newImages === null) {\r\n      answer.Filee.forEach((element) => {\r\n        setImages(element);\r\n      });\r\n    } else {\r\n      //alert(\"hi\");\r\n      setUp(1);\r\n      setImages(newImages);\r\n    }\r\n  };\r\n\r\n  const [up, setUp] = useState(0);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Body: answer.Body,\r\n      Writerq: { _id: \"604e421a647d1719cb93d08e\" },\r\n      Filee: [],\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        if (Images.length !== 0) {\r\n          values.Filee = Images;\r\n        } else {\r\n          values.Filee = answer.Filee;\r\n        }\r\n\r\n        const res = await AddAnswersApi.putAnswers(values, answer._id);\r\n        setEnableUpload(true);\r\n\r\n        dispatch(fetchAnswers(answer.Question._id));\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Icon name=\"edit\"></Icon>}\r\n    >\r\n      <Modal.Header>Update Your Answer</Modal.Header>\r\n      <Modal.Content>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Field\r\n            control={TextArea}\r\n            placeholder=\"write your answer here\"\r\n            label=\"Content\"\r\n            name=\"Body\"\r\n            value={formik.values.Body}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.Body}\r\n          />\r\n          <div style={{ float: \"right\", marginRight: \"5%\" }}>\r\n            <Button\r\n              style={{ maxHeight: \"40px\" }}\r\n              type=\"submit\"\r\n              content=\"Edit\"\r\n              icon=\"edit\"\r\n              color=\"red\"\r\n            />\r\n            <Button color=\"black\" onClick={() => setOpen(false)}>\r\n          Cancel\r\n        </Button>\r\n          </div>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ marginLeft: \"5%\" }}>\r\n            <FileUploadEdit\r\n            refreshFunction={updateImages}\r\n            listfile={answer.Filee}\r\n            Enbale={enableUpload}\r\n          />\r\n            </div>\r\n          </div>\r\n         \r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        \r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\n"]},"metadata":{},"sourceType":"module"}