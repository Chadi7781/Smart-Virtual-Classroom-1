{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport Select from 'react-select';\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\nimport { Dropdown, Button, Form, Grid, Rail, Segment, TextArea } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  key: 1,\n  text: 'Quiz',\n  value: 'Quiz'\n}, {\n  key: 2,\n  text: 'File',\n  value: 'File'\n}];\nexport default function AddTask(props) {\n  _s();\n\n  const seances = useSelector(state => state.seance.seance);\n  const data1 = [{\n    value: 'Java',\n    label: 'Java'\n  }, {\n    value: 'PiWeb',\n    label: 'PiWeb'\n  }, {\n    value: 'NoSql',\n    label: 'NoSql'\n  }];\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  /*const data = [\r\n    {id : \"606a379141fdc1d2a0d0078d\" ,student : 'Sofien'},\r\n    {id : \"606a379141fdc1d2a0d0078d\" ,student : 'hamza'},\r\n    {id : \"606781123ed972382c721fce\" ,student : 'omar'},\r\n    {id : \"606b849539df17362cc2a222\" ,student : 'Louay'}\r\n  ]*/\n\n  const [themeChosen] = useState(data1);\n  const [studentChosen] = useState(currentClass.classUsers);\n  const [theme, setTheme] = useState(props.data.theme);\n  const SeanceOptions = [{\n    value: Number,\n    label: \"\"\n  }];\n\n  for (let i = 0; i < seances.length; i++) {\n    const option = {\n      value: seances[i]._id,\n      label: seances[i].titre\n    };\n    SeanceOptions.push(option);\n  }\n\n  var step = 1;\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator\n  });\n\n  const event = () => {\n    props.addTask(tasks);\n    console.log(tasks.listStudents);\n    props.nextStep(step + 1);\n  };\n\n  const onSelect = (selectedList, selectedItem) => {\n    console.log(selectedItem);\n    props.addTask(tasks.listStudents.push(selectedItem));\n    console.log(tasks.listStudents);\n  };\n\n  const onRemove = (selectedList, removedItem) => {\n    props.addTask(tasks.listStudents = selectedList.filter(item => item._id !== removedItem._id));\n    console.log(tasks.listStudents);\n  };\n\n  const selectedTheme = data => {\n    console.log(data);\n    setTheme(data);\n    props.addTask(tasks.theme = data.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      centered: true,\n      columns: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          raised: true,\n          children: [/*#__PURE__*/_jsxDEV(Rail, {\n            position: \"left\",\n            children: /*#__PURE__*/_jsxDEV(Segment, {\n              raised: true,\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                values: theme,\n                styles: {\n                  backgroundColor: \"red\"\n                },\n                onChange: selectedTheme,\n                options: SeanceOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                label: \"Title\",\n                required: true,\n                value: tasks.title,\n                onChange: e => setTask({ ...tasks,\n                  title: e.target.value\n                }),\n                placeholder: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n                label: \"Description\",\n                value: tasks.description,\n                onChange: e => setTask({ ...tasks,\n                  description: e.target.value\n                }),\n                placeholder: \"Description..\",\n                style: {\n                  minHeight: 50\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Type of Task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                onChange: (e, data) => setTask({ ...tasks,\n                  typeTask: data.value\n                }),\n                placeholder: \"I open on focus\",\n                openOnFocus: true,\n                options: options,\n                selection: true,\n                required: true,\n                value: tasks.typeTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 11\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Due\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(SemanticDatepicker, {\n                onChange: (e, data) => setTask({ ...tasks,\n                  endDate: data.value\n                }),\n                value: tasks.endDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Rail, {\n            position: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Segment, {\n              raised: true,\n              textAlign: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Multiselect, {\n                style: {\n                  chips: {\n                    background: \"red\"\n                  },\n                  option: {\n                    color: \"black\"\n                  },\n                  searchBox: {\n                    border: \"none\"\n                  }\n                },\n                fluid: true,\n                selection: true,\n                multiple: true,\n                displayValue: \"name\",\n                options: studentChosen,\n                selectedValues: tasks.listStudents,\n                onSelect: onSelect,\n                onRemove: onRemove,\n                placeholder: \"Select Student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 11\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: step > 2 || !tasks.title && !tasks.description && !tasks.typeTask,\n      type: \"submit\",\n      floated: \"right\",\n      color: \"red\",\n      onClick: event,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTask, \"YaET0Z8cazMvyz8M99Q75a1BEIs=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/AddTask.js"],"names":["React","useState","Multiselect","Select","SemanticDatepicker","Dropdown","Button","Form","Grid","Rail","Segment","TextArea","useSelector","options","key","text","value","AddTask","props","seances","state","seance","data1","label","currentClass","JSON","parse","localStorage","getItem","themeChosen","studentChosen","classUsers","theme","setTheme","data","SeanceOptions","Number","i","length","option","_id","titre","push","step","tasks","setTask","title","description","typeTask","listQuestion","listStudents","endDate","creator","event","addTask","console","log","nextStep","onSelect","selectedList","selectedItem","onRemove","removedItem","filter","item","selectedTheme","backgroundColor","e","target","minHeight","chips","background","color","searchBox","border"],"mappings":"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","sourcesContent":["import React , {  useState } from 'react';\r\n\r\nimport { Multiselect} from 'multiselect-react-dropdown';\r\nimport Select from 'react-select'\r\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\r\n\r\nimport { Dropdown,Button,Form ,Grid, Rail, Segment,TextArea} from 'semantic-ui-react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst options = [\r\n  { key: 1, text: 'Quiz', value: 'Quiz' },\r\n  { key: 2, text: 'File', value: 'File' },\r\n\r\n]\r\nexport default function AddTask(props) {\r\n  const seances = useSelector((state) => state.seance.seance);\r\n  const data1 = [\r\n    { value: 'Java', label: 'Java' },\r\n    { value: 'PiWeb', label: 'PiWeb' },\r\n    { value: 'NoSql', label: 'NoSql' }\r\n  ]\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n/*const data = [\r\n  {id : \"606a379141fdc1d2a0d0078d\" ,student : 'Sofien'},\r\n  {id : \"606a379141fdc1d2a0d0078d\" ,student : 'hamza'},\r\n  {id : \"606781123ed972382c721fce\" ,student : 'omar'},\r\n  {id : \"606b849539df17362cc2a222\" ,student : 'Louay'}\r\n]*/\r\n\r\nconst [themeChosen] = useState(data1)\r\nconst [studentChosen] = useState(currentClass.classUsers)\r\nconst [theme , setTheme] = useState(props.data.theme);\r\n\r\n\r\nconst SeanceOptions = [{ value: Number,label: \"\" }];\r\n\r\nfor (let i = 0; i < seances.length; i++) {\r\n  const option = {\r\n    value: seances[i]._id,\r\n    label: seances[i].titre,\r\n   \r\n  };\r\n\r\n  SeanceOptions.push(option);\r\n}\r\n\r\n  \r\n\r\n\r\nvar step = 1;\r\n \r\n        const [tasks , setTask] = useState({\r\n           \r\n            title : props.data.title,\r\n            description : props.data.description,\r\n            theme : props.data.theme,\r\n            typeTask : props.data.typeTask,\r\n            listQuestion : props.data.listQuestion,\r\n            listStudents : props.data.listStudents,\r\n            endDate : props.data.endDate,\r\n            creator : props.data.creator\r\n         \r\n        });\r\n \r\n   \r\n        const event = ()=>{\r\n         \r\n          \r\n          props.addTask(tasks);\r\n          console.log(tasks.listStudents);\r\n        \r\n          props.nextStep(step+1);\r\n        \r\n        }\r\n      \r\n  \r\nconst onSelect = (selectedList, selectedItem)=>{\r\n  console.log(selectedItem);\r\n  props.addTask(tasks.listStudents.push(selectedItem))\r\n\r\n  console.log(tasks.listStudents)\r\n}\r\nconst onRemove = (selectedList, removedItem)=>{\r\n\r\n props.addTask(tasks.listStudents = selectedList.filter((item) => item._id !== removedItem._id ));\r\n\r\n    console.log(tasks.listStudents)\r\n\r\n}\r\n\r\nconst selectedTheme = (data) =>{\r\n  console.log(data);\r\n  setTheme(data);\r\n  props.addTask(tasks.theme=data.value);\r\n}\r\n \r\n\r\n    return (\r\n      \r\n        <div >\r\n       \r\n        <Grid centered columns={3}>\r\n    <Grid.Column>\r\n      <Segment raised>\r\n        \r\n        <Rail  position='left'>\r\n          <Segment raised textAlign=\"center\">\r\n          <Select \r\n \r\n values={theme}\r\n         styles={{backgroundColor:\"red\"}}\r\n      onChange={selectedTheme}\r\n          options={SeanceOptions} />\r\n\r\n          </Segment>\r\n        </Rail>\r\n        <Form >\r\n        <Form.Field>\r\n      \r\n          <Form.Input  label='Title'   required value={tasks.title} onChange={ e  =>  setTask({ ...tasks, title : e.target.value })} placeholder='Title' />\r\n        </Form.Field>\r\n        <Form.Field   required>\r\n          <label>Description</label>\r\n          <TextArea label='Description'    value={tasks.description} onChange={ e  =>  setTask({ ...tasks, description : e.target.value })} placeholder='Description..' style={{ minHeight: 50 }} />\r\n       </Form.Field>\r\n       <Form.Field   required>\r\n          <label>Type of Task </label>\r\n          <Dropdown\r\n          onChange={(e,data)  =>  setTask({ ...tasks, typeTask : data.value})}\r\n      placeholder='I open on focus'\r\n      openOnFocus\r\n      options={options}\r\n      selection\r\n      required\r\n      value={tasks.typeTask}\r\n    />{' '}\r\n     \r\n  \r\n       </Form.Field>\r\n     <Form.Field>\r\n     <label>Due</label>\r\n     <SemanticDatepicker \r\n      onChange={ (e,data)  =>  setTask({ ...tasks, endDate : data.value})} \r\n      value={tasks.endDate}\r\n      />\r\n     </Form.Field>\r\n    \r\n     \r\n        \r\n        </Form>\r\n        <Rail  position='right'>\r\n          <Segment raised textAlign=\"center\">\r\n          <Multiselect\r\n          \r\n         style={       \r\n           {chips : {background : \"red\"},\r\n            option : {color : \"black\"},\r\n            searchBox: {border: \"none\"}}\r\n          }\r\n       \r\n         fluid\r\n         selection\r\n         multiple\r\n    displayValue=\"name\"\r\n         options={studentChosen}\r\n         selectedValues={tasks.listStudents}\r\n         onSelect={onSelect}\r\n         onRemove = {onRemove}\r\n       \r\n         placeholder='Select Student'\r\n      \r\n      \r\n        \r\n     \r\n    />{' '}\r\n            \r\n           \r\n          </Segment>\r\n        </Rail>\r\n      </Segment>\r\n    </Grid.Column>\r\n  </Grid>\r\n\r\n <Button\r\n      disabled={step>2 || ( (!tasks.title) && (!tasks.description) && (!tasks.typeTask))}\r\n         \r\n              type=\"submit\" \r\n              floated='right'\r\n              color=\"red\"\r\n              onClick={event} >Next</Button>\r\n    </div>\r\n     \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}