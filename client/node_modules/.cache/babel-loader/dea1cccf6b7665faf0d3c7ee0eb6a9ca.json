{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\StepsBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Step, Icon, Button, Divider, Header, Message } from 'semantic-ui-react';\nimport AddTask from './AddTask';\nimport SendTask from './SendTask';\nimport AddQuiz from '../Quiz/AddQuiz';\nimport TaskFile from './TaskFile';\nimport { isAuth } from '../../helpers/auth';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StepsBar() {\n  _s();\n\n  const classs = JSON.parse(localStorage.getItem(\"idClass\"));\n  /* save data quiz */\n\n  const [quiz, setQuiz] = useState({\n    id: \"\",\n    fquestion: \"\",\n    foptionA: \"\",\n    foptionB: \"\",\n    foptionC: \"\",\n    foptionD: \"\",\n    fpoint: \"\"\n  });\n  /* save task data to upload late or update  */\n\n  const [task, setTask] = useState({\n    title: \"\",\n    description: \"\",\n    theme: \"\",\n    cour: classs._id,\n    typeTask: \"\",\n    listQuestion: [],\n    listStudents: [],\n    endDate: null,\n    creator: isAuth()._id\n  });\n  console.log(\"step : \");\n  console.log(task);\n  const [step, setStep] = useState(1);\n  console.log(step);\n\n  const handleNextStep = () => {\n    setStep(step + 1);\n  };\n\n  const handleBackStep = () => {\n    setStep(step - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      content: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Step.Group, {\n      widths: 3,\n      children: [/*#__PURE__*/_jsxDEV(Step, {\n        completed: step === 2 || step === 3 || step === 4,\n        active: step === 1,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"newspaper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Step.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Step.Title, {\n            children: \"Info Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Step.Description, {\n            children: \"Add Task Details ..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        completed: step === 3 || step === 4,\n        active: step === 2,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Step.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Step.Title, {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Step.Description, {\n            children: \"Add Task Content ..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        active: step === 3,\n        completed: step === 4,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Step.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Step.Title, {\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Step.Description, {\n            children: \"Confirm Your Add ..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), step === 1 ? /*#__PURE__*/_jsxDEV(AddTask, {\n      data: task,\n      addTask: task => setTask(task),\n      nextStep: step => setStep(step)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, this) : step === 2 ? task.typeTask === \"File\" ? /*#__PURE__*/_jsxDEV(TaskFile, {\n      data: task,\n      addTask: task => setTask(task),\n      nextStep: step => setStep(step)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(AddQuiz, {\n      data: task,\n      addTask: task => setTask(task),\n      nextStep: step => setStep(step)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }, this) : step === 3 ? /*#__PURE__*/_jsxDEV(SendTask, {\n      data: task,\n      nextStep: step => setStep(step)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        success: true,\n        header: \"Your Task  was successful Added\",\n        content: \"You may now log-in with the username you have chosen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/ListTask\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          color: \"red\",\n          children: \"View All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: step < 2 || step > 3,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: step < 2,\n        floated: \"left\",\n        onClick: handleBackStep,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StepsBar, \"E7L01YjqkFnU+WQM4x2K9W/ZyZE=\");\n\n_c = StepsBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepsBar\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/StepsBar.js"],"names":["React","useState","Step","Icon","Button","Divider","Header","Message","AddTask","SendTask","AddQuiz","TaskFile","isAuth","Link","StepsBar","classs","JSON","parse","localStorage","getItem","quiz","setQuiz","id","fquestion","foptionA","foptionB","foptionC","foptionD","fpoint","task","setTask","title","description","theme","cour","_id","typeTask","listQuestion","listStudents","endDate","creator","console","log","step","setStep","handleNextStep","handleBackStep"],"mappings":"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","sourcesContent":["import React, {  useState } from 'react'\n\nimport {Step,Icon,Button ,Divider,Header, Message} from 'semantic-ui-react';\nimport AddTask from './AddTask';\nimport SendTask from './SendTask';\nimport AddQuiz from '../Quiz/AddQuiz';\nimport TaskFile from './TaskFile';\nimport { isAuth } from '../../helpers/auth';\nimport { Link } from 'react-router-dom';\n\n\nexport default function StepsBar() {\n\n  const classs = JSON.parse(localStorage.getItem(\"idClass\"));\n  /* save data quiz */\n  const [quiz , setQuiz] = useState({\n    id : \"\",\n    fquestion : \"\",\n    foptionA : \"\",\n    foptionB : \"\",\n    foptionC : \"\",\n    foptionD : \"\",\n    fpoint : \"\",\n\n\n})\n\n\n\n  /* save task data to upload late or update  */\n  const [task , setTask] = useState({\n   \n    title : \"\",\n    description : \"\",\n    theme : \"\",\n    cour : classs._id,\n    typeTask : \"\",\n    listQuestion : [],\n    listStudents : [],\n    endDate : null,\n    creator : isAuth()._id\n \n});\nconsole.log(\"step : \")\nconsole.log(task);\n \n  const [step, setStep] = useState(1);\nconsole.log(step)\n  const handleNextStep = ()=>{\n \n    setStep(step+1)\n   \n   \n  }\n  \n  const handleBackStep = ()=>{\n    \n    setStep(step-1)\n\n  }\n   \n    return (\n        <div>\n              <Divider hidden/>\n    <Header  as='h2' content='Add Task' />\n    \n    <Divider />\n    <Step.Group widths={3}>\n    <Step completed={step===2 || step===3 || step===4} active={step===1}>\n      <Icon name='newspaper' />\n      <Step.Content>\n        <Step.Title>Info Task</Step.Title>\n        <Step.Description>Add Task Details ..</Step.Description>\n      </Step.Content>\n    </Step>\n    <Step completed={step=== 3 || step ===4} active={step===2}>\n      <Icon name='tasks' />\n      <Step.Content>\n        <Step.Title>Task</Step.Title>\n        <Step.Description>Add Task Content ..</Step.Description>\n      </Step.Content>\n    </Step>\n    <Step  active={step===3}completed={step=== 4}>\n      <Icon name='info' />\n      <Step.Content>\n        <Step.Title>Send</Step.Title>\n        <Step.Description>Confirm Your Add ..</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n \n \n  {step === 1  ?  ( <AddTask data={task} addTask={task => setTask(task)} nextStep={step => setStep(step)} />) :  step === 2 ?\n  \n\n  task.typeTask===\"File\" ?  ( \n  \n    <TaskFile  data={task} addTask={task => setTask(task)}   nextStep={step => setStep(step)} />\n    \n    )  :\n  \n  ( \n  \n  <AddQuiz  data={task} addTask={task => setTask(task)}   nextStep={step => setStep(step)} />\n  \n  )  \n  \n  \n  \n  : step===3 ?  ( <SendTask data={task} nextStep={step => setStep(step)} /> ) : ( <>   \n  <Message\n    success\n    header='Your Task  was successful Added'\n    content='You may now log-in with the username you have chosen'\n  ></Message>\n  <Link to=\"/ListTask\">\n  <Button fluid color=\"red\">View All Tasks</Button>\n  </Link>\n  \n  </>\n  ) }\n\n  \n \n \n \n  \n<div hidden={step<2 || step>3}>\n  <Button \n  disabled={step<2}\n  floated='left'\n  onClick={handleBackStep}\n  >Back</Button>\n\n  </div>\n \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}