{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\DisplayTaskStudent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Statistic, Icon, Divider, Item, Label, Header, Segment, Menu, Grid } from 'semantic-ui-react';\nimport { isAuth } from '../../helpers/auth';\nimport { getTasksById } from '../../redux/slices/Grade';\nimport AllTasksStudent from './AllTasksStudent';\nimport MissingTasks from './MissingTasks';\nimport TasksAssign from './TasksAssign';\nimport TasksRemis from './TasksRemis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DisplayTaskStudent() {\n  _s();\n\n  const [activeItem, setActiveItem] = useState(\"All\");\n  const grades = useSelector(state => state.grades.grades);\n  console.log(grades);\n  const dispatch = useDispatch();\n  console.log(grades);\n  useEffect(() => {\n    dispatch(getTasksById(isAuth()._id));\n  }, [dispatch]);\n\n  const handleItemClick = (e, {\n    name\n  }) => setActiveItem(name);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      content: \"List Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 3,\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            pointing: true,\n            secondary: true,\n            vertical: true,\n            children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n              name: \"All\",\n              active: activeItem === \"All\",\n              onClick: handleItemClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n              name: \"Attribu\\xE9\",\n              active: activeItem === \"Attribué\",\n              onClick: handleItemClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n              name: \"Remis\",\n              active: activeItem === \"Remis\",\n              onClick: handleItemClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n              name: \"Manquant\",\n              active: activeItem === \"Manquant\",\n              onClick: handleItemClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 13,\n          children: activeItem === \"All\" ? /*#__PURE__*/_jsxDEV(AllTasksStudent, {\n            allGrades: grades\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 48\n          }, this) : activeItem === \"Attribué\" ? /*#__PURE__*/_jsxDEV(TasksAssign, {\n            taskAssign: grades\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 50\n          }, this) : activeItem === \"Remis\" ? /*#__PURE__*/_jsxDEV(TasksRemis, {\n            remisGrades: grades\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(MissingTasks, {\n            taskmissing: grades\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DisplayTaskStudent, \"gSXrz0xJWRfFHxkRVWkFzEU3/74=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DisplayTaskStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTaskStudent\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/DisplayTaskStudent.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Button","Statistic","Icon","Divider","Item","Label","Header","Segment","Menu","Grid","isAuth","getTasksById","AllTasksStudent","MissingTasks","TasksAssign","TasksRemis","DisplayTaskStudent","activeItem","setActiveItem","grades","state","console","log","dispatch","_id","handleItemClick","e","name"],"mappings":"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","sourcesContent":["import React ,{useEffect, useState} from 'react';\nimport { useSelector ,useDispatch} from 'react-redux';\n\nimport { Button,Statistic, Icon, Divider, Item, Label,Header, Segment, Menu, Grid } from 'semantic-ui-react';\nimport { isAuth } from '../../helpers/auth';\n\nimport { getTasksById } from '../../redux/slices/Grade';\nimport AllTasksStudent from './AllTasksStudent';\nimport MissingTasks from './MissingTasks';\nimport TasksAssign from './TasksAssign';\nimport TasksRemis from './TasksRemis';\n\n\nexport default function DisplayTaskStudent() {\n \n  const [activeItem, setActiveItem] = useState(\"All\");\n  const grades = useSelector( state => state.grades.grades);\n  console.log(grades)\n    const dispatch = useDispatch();\n  console.log(grades);\n    useEffect(()=>{\n     \n        dispatch(getTasksById(isAuth()._id));\n       \n       \n       },[dispatch])\n\n       const handleItemClick = (e, { name }) => setActiveItem(name);\n  return (\n    <>\n       \n    <Divider  hidden/>\n\n   \n\n         <Header  as='h2' content='List Task' />\n         <Divider />\n         <Grid >\n    <Grid.Row>\n      <Grid.Column width={3}>\n         <Menu pointing secondary vertical>\n         <Menu.Item\n          name='All'\n          active={activeItem === \"All\"}\n          onClick={handleItemClick}\n       \n        />\n        <Menu.Item\n          name='Attribué'\n          active={activeItem === \"Attribué\"}\n          onClick={handleItemClick}\n       \n        />\n         <Menu.Item\n          name='Remis'\n          active={activeItem === \"Remis\"}\n          onClick={handleItemClick}\n       \n        />\n        <Menu.Item\n          name='Manquant'\n          active={activeItem === \"Manquant\"}\n          onClick={handleItemClick}\n        />\n       \n      </Menu>\n      </Grid.Column>\n      <Grid.Column width={13}>\n\n                  \n    \n\n                  {   activeItem ===\"All\" ? (  <AllTasksStudent allGrades={grades} /> ) \n                  : activeItem ===\"Attribué\" ?  (<TasksAssign taskAssign={grades}/>) \n                  : activeItem ===\"Remis\" ?  (<TasksRemis remisGrades={grades}/>)\n                  :   (<MissingTasks taskmissing={grades}/>)\n             \n\n                }\n    \n    \n    </Grid.Column>\n     \n     </Grid.Row>\n   </Grid>\n \n\n\n    \n\n\n </>\n        \n  );\n}\n"]},"metadata":{},"sourceType":"module"}