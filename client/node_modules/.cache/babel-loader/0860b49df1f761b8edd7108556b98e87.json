{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TaskFileDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport ReactTimeAgo from 'react-time-ago/commonjs/ReactTimeAgo';\nimport { Button, Card, Container, Divider, Grid, Header, Icon, Image, Message } from 'semantic-ui-react';\nimport { getDetailByTaskByStudent, rendreTask } from '../../redux/slices/Grade';\nimport ModalTask from './ModalTask';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskFileDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const state = useSelector(state => state.grades.grades[0]);\n  const files = useSelector(state => state.tasks.files);\n  const grade = {\n    \"id\": id,\n    \"taskStatus\": \"remis\",\n    \"listReponse\": files\n  };\n  const dispatch = useDispatch();\n\n  const submitTask = () => {\n    console.log(\"grade : \");\n    console.log(grade);\n    dispatch(rendreTask(grade)).then(() => {\n      dispatch(getDetailByTaskByStudent(id));\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getDetailByTaskByStudent(id));\n  }, [id, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !state ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 14,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [\"  \", /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 12,\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h1\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"file alternate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 8\n                  }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                    children: [state.task.title, /*#__PURE__*/_jsxDEV(Header.Subheader, {\n                      children: /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                        date: state.task.DateAt,\n                        locale: \"en-US\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 62,\n                        columnNumber: 12\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 10\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 8\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(Container, {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: state.task.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 8\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: !state.task.listQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : state.task.listQuestion.map((files, index) => files.split(\".\").pop() === \"pdf\" || files.split(\".\").pop() === \"pptx\" || files.split(\".\").pop() === \"docx\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: files,\n                        target: \"_blank\",\n                        rel: \"noopener noreferrer\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                            width: 3,\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: process.env.PUBLIC_URL + \"/files-type/\" + files.split(\".\").pop() + \".png\",\n                              style: {\n                                margin: \"10px\",\n                                height: \"100px\",\n                                width: \"100px\"\n                              },\n                              alt: \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 85,\n                              columnNumber: 8\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 84,\n                            columnNumber: 6\n                          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                            width: 3,\n                            children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h4\",\n                                color: \"red\",\n                                children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 102,\n                                columnNumber: 10\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 101,\n                              columnNumber: 8\n                            }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                              children: /*#__PURE__*/_jsxDEV(Header, {\n                                as: \"h4\",\n                                color: \"grey\",\n                                children: [files.split(\".\").pop(), \" File\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 109,\n                                columnNumber: 10\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 108,\n                              columnNumber: 8\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 100,\n                            columnNumber: 6\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 83,\n                          columnNumber: 4\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 2\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 1\n                    }, this) : files.split(\".\").pop() === \"mp3\" || files.split(\".\").pop() === \"mp4\" ? /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                      width: \"300px\",\n                      height: \"230px\",\n                      controls: true,\n                      url: files\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 1\n                    }, this) : files.split(\".\").pop() === \"png\" || files.split(\".\").pop() === \"jpg\" || files.split(\".\").pop() === \"jpeg\" || files.split(\".\").pop() === \"gif\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                        width: 3,\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: files,\n                          target: \"_blank\",\n                          rel: \"noopener noreferrer\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: files,\n                            alt: files.split(\"-\").pop(),\n                            style: {\n                              margin: \"10px\",\n                              height: \"100px\",\n                              width: \"100px\"\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 137,\n                            columnNumber: 6\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 132,\n                          columnNumber: 4\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 2\n                      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                        width: 3,\n                        children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                          children: /*#__PURE__*/_jsxDEV(Header, {\n                            as: \"h4\",\n                            color: \"red\",\n                            children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 150,\n                            columnNumber: 6\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 4\n                        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                          children: /*#__PURE__*/_jsxDEV(Header, {\n                            as: \"h4\",\n                            color: \"grey\",\n                            children: [files.split(\".\").pop(), \" File\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 157,\n                            columnNumber: 6\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 156,\n                          columnNumber: 4\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 2\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 1\n                    }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: files,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                          width: 3,\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            style: {\n                              margin: \"10px\",\n                              height: \"100px\",\n                              width: \"100px\"\n                            },\n                            src: process.env.PUBLIC_URL + \"/files-type/\" + \"noFile.png\",\n                            alt: files.split(\"-\").pop()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 167,\n                            columnNumber: 6\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 4\n                        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                          width: 3,\n                          children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                            children: /*#__PURE__*/_jsxDEV(Header, {\n                              as: \"h4\",\n                              color: \"red\",\n                              children: files.split(\"-\").pop().slice(0, 7) + \".\" + files.split(\".\").pop()\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 183,\n                              columnNumber: 8\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 182,\n                            columnNumber: 6\n                          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                            children: /*#__PURE__*/_jsxDEV(Header, {\n                              as: \"h4\",\n                              color: \"grey\",\n                              children: [files.split(\".\").pop(), \" File\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 190,\n                              columnNumber: 8\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 189,\n                            columnNumber: 6\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 181,\n                          columnNumber: 4\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 2\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 1\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 8\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 6\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: \"Your Task\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                      children: state.taskStatus === \"remis\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(Message, {\n                          positive: true,\n                          children: /*#__PURE__*/_jsxDEV(Message.Header, {\n                            children: \"Task Added Succesfully\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 215,\n                            columnNumber: 5\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 214,\n                          columnNumber: 13\n                        }, this)\n                      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"         \", /*#__PURE__*/_jsxDEV(Message, {\n                          header: \"Upload Your File Here \",\n                          content: \"Good Luck For your assignment\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 218,\n                          columnNumber: 30\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 9\n                    }, this), /*#__PURE__*/_jsxDEV(ModalTask, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 8\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                    extra: true,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ui two buttons\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        basic: true,\n                        color: \"red\",\n                        onClick: () => submitTask(),\n                        children: \"Rendre Task\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 11\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 9\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 7\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskFileDetail, \"rcagnyXP71I7T9L8tOs6nhOByqc=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch];\n});\n\n_c = TaskFileDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFileDetail\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TaskFileDetail.js"],"names":["React","useEffect","useState","ReactPlayer","useDispatch","useSelector","useParams","ReactTimeAgo","Button","Card","Container","Divider","Grid","Header","Icon","Image","Message","getDetailByTaskByStudent","rendreTask","ModalTask","TaskFileDetail","id","state","grades","files","tasks","grade","dispatch","submitTask","console","log","then","task","title","DateAt","description","listQuestion","map","index","split","pop","process","env","PUBLIC_URL","margin","height","width","slice","taskStatus"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ReactPlayer from 'react-player';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router'\r\nimport ReactTimeAgo from 'react-time-ago/commonjs/ReactTimeAgo';\r\nimport { Button, Card, Container, Divider, Grid, Header, Icon, Image, Message } from 'semantic-ui-react';\r\nimport { getDetailByTaskByStudent, rendreTask } from '../../redux/slices/Grade';\r\nimport ModalTask from './ModalTask';\r\n\r\nexport default function TaskFileDetail() {\r\n\r\n    const {id} = useParams();\r\n   const state = useSelector(state => state.grades.grades[0]);\r\n   const files = useSelector(state => state.tasks.files)\r\n   \r\n\r\n\r\n   \r\n   const grade={\r\n       \"id\":id,\r\n       \"taskStatus\" : \"remis\",\r\n       \"listReponse\" : files\r\n     }\r\n\r\n    const  dispatch = useDispatch();\r\n    const submitTask = ()=>{\r\n      console.log(\"grade : \");\r\n      console.log(grade);\r\n            dispatch(rendreTask(grade)).then(()=>{\r\n              dispatch(getDetailByTaskByStudent(id));\r\n            });\r\n            \r\n      }\r\n\r\n    useEffect(() => {\r\n        dispatch(getDetailByTaskByStudent(id));\r\n    }, [id,dispatch]);\r\n\r\n\r\n  \r\n    return (\r\n        <div>\r\n            { !state ? (<></>)  : ( \r\n <Grid>\r\n  \r\n <Grid.Row>\r\n   <Grid.Column width={1}>\r\n\r\n       \r\n   </Grid.Column>\r\n   <Grid.Column width={14}>\r\n     \r\n   <Grid> <Grid.Row>  <Grid.Column width={12}>\r\n\r\n      \r\n      \r\n     <Header as=\"h1\">\r\n       <Icon name=\"file alternate\" />\r\n       <Header.Content>\r\n         {state.task.title}\r\n         <Header.Subheader>\r\n           <ReactTimeAgo date={state.task.DateAt} locale=\"en-US\" />\r\n         </Header.Subheader>\r\n       </Header.Content>\r\n     </Header>\r\n     <Divider></Divider>\r\n     <br />\r\n     <Container>\r\n       <p>{state.task.description}</p>\r\n     </Container>\r\n     <Grid>\r\n       <Grid.Row>\r\n\r\n    { !state.task.listQuestion ? (<></>) : (\r\n\r\nstate.task.listQuestion.map((files, index) =>\r\n\r\nfiles.split(\".\").pop() === \"pdf\" ||\r\nfiles.split(\".\").pop() === \"pptx\" ||\r\nfiles.split(\".\").pop() === \"docx\" ? (\r\n<div key={index}>\r\n <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\r\n   <div>\r\n     <Grid.Column width={3}>\r\n       <img\r\n         src={\r\n           process.env.PUBLIC_URL +\r\n           \"/files-type/\" +\r\n           files.split(\".\").pop() +\r\n           \".png\"\r\n         }\r\n         style={{\r\n           margin: \"10px\",\r\n           height: \"100px\",\r\n           width: \"100px\",\r\n         }}\r\n         alt=\"\"\r\n       />\r\n     </Grid.Column>\r\n     <Grid.Column width={3}>\r\n       <Grid.Row>\r\n         <Header as=\"h4\" color=\"red\">\r\n           {files.split(\"-\").pop().slice(0, 7) +\r\n             \".\" +\r\n             files.split(\".\").pop()}\r\n         </Header>\r\n       </Grid.Row>\r\n       <Grid.Row>\r\n         <Header as=\"h4\" color=\"grey\">\r\n           {files.split(\".\").pop()} File\r\n         </Header>\r\n       </Grid.Row>\r\n     </Grid.Column>\r\n   </div>\r\n </a>\r\n</div>\r\n) : files.split(\".\").pop() === \"mp3\" ||\r\nfiles.split(\".\").pop() === \"mp4\" ? (\r\n<ReactPlayer\r\n key={index}\r\n width=\"300px\"\r\n height=\"230px\"\r\n controls={true}\r\n url={files}\r\n/>\r\n) : files.split(\".\").pop() === \"png\" ||\r\nfiles.split(\".\").pop() === \"jpg\" ||\r\nfiles.split(\".\").pop() === \"jpeg\" ||\r\nfiles.split(\".\").pop() === \"gif\" ? (\r\n<div>\r\n <Grid.Column width={3}>\r\n   <a\r\n     href={files}\r\n     target=\"_blank\"\r\n     rel=\"noopener noreferrer\"\r\n   >\r\n     <img\r\n       src={files}\r\n       alt={files.split(\"-\").pop()}\r\n       style={{\r\n         margin: \"10px\",\r\n         height: \"100px\",\r\n         width: \"100px\",\r\n       }}\r\n     />\r\n   </a>\r\n </Grid.Column>\r\n <Grid.Column width={3}>\r\n   <Grid.Row>\r\n     <Header as=\"h4\" color=\"red\">\r\n       {files.split(\"-\").pop().slice(0, 7) +\r\n         \".\" +\r\n         files.split(\".\").pop()}\r\n     </Header>\r\n   </Grid.Row>\r\n   <Grid.Row>\r\n     <Header as=\"h4\" color=\"grey\">\r\n       {files.split(\".\").pop()} File\r\n     </Header>\r\n   </Grid.Row>\r\n </Grid.Column>\r\n</div>\r\n) : (\r\n<a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\r\n <div>\r\n   <Grid.Column width={3}>\r\n     <img\r\n      style={{\r\n        margin: \"10px\",\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n      }}\r\n       src={\r\n         process.env.PUBLIC_URL +\r\n         \"/files-type/\" +\r\n         \"noFile.png\"\r\n       }\r\n       alt={files.split(\"-\").pop()}\r\n     />\r\n   </Grid.Column>\r\n   <Grid.Column width={3}>\r\n     <Grid.Row>\r\n       <Header as=\"h4\" color=\"red\">\r\n         {files.split(\"-\").pop().slice(0, 7) +\r\n           \".\" +\r\n           files.split(\".\").pop()}\r\n       </Header>\r\n     </Grid.Row>\r\n     <Grid.Row>\r\n       <Header as=\"h4\" color=\"grey\">\r\n         {files.split(\".\").pop()} File\r\n       </Header>\r\n     </Grid.Row>\r\n   </Grid.Column>\r\n </div>\r\n</a>\r\n)\r\n)\r\n    )}\r\n        \r\n       </Grid.Row>\r\n     </Grid>\r\n     <br />\r\n     <br />\r\n     </Grid.Column>\r\n     <Grid.Column width={4}>\r\n     <Card>\r\n      <Card.Content>\r\n       \r\n        <Card.Header>Your Task</Card.Header> \r\n        \r\n        <Card.Description>\r\n          {state.taskStatus ===\"remis\" ? (<>\r\n            <Message positive>\r\n    <Message.Header>Task Added Succesfully</Message.Header>\r\n    \r\n  </Message>\r\n          </>) : (<>         <Message\r\n    header='Upload Your File Here '\r\n    content='Good Luck For your assignment'\r\n  /></> )}\r\n  \r\n        </Card.Description>\r\n        <br/>\r\n       <ModalTask/>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className='ui two buttons'>\r\n          <Button basic color='red'\r\n          onClick={()=>submitTask()}\r\n          >\r\n            Rendre Task\r\n          </Button>\r\n          \r\n       \r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n     </Grid.Column>\r\n     </Grid.Row>\r\n        </Grid>\r\n \r\n   </Grid.Column>\r\n\r\n\r\n\r\n\r\n\r\n   <Grid.Column width={1}>\r\n  \r\n   </Grid.Column>\r\n   \r\n </Grid.Row>\r\n\r\n</Grid>\r\n\r\n            )}\r\n      \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}