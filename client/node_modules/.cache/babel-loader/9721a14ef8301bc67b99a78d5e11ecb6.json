{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Select from \"react-select\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport { Dropdown, Button, Form, Grid, Rail, Segment, TextArea, Label, Header } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\nimport MultiSelect from \"react-multi-select-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTask(props) {\n  _s();\n\n  const seances = useSelector(state => state.seance.seance);\n  const [selectedSeance, setSelectedSeance] = useState(null);\n  const [theme, setTheme] = useState(props.data.theme);\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const [selected, setSelected] = useState([]);\n  const studentChosen = [];\n  const seanceChosen = [];\n  currentClass.classUsers.forEach(element => {\n    studentChosen.push({\n      label: element.name,\n      value: element\n    });\n  });\n  seances.forEach(element => {\n    seanceChosen.push({\n      label: element.titre,\n      value: element\n    });\n  });\n  var step = 1;\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    cour: props.data.cour,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator\n  });\n\n  const event = () => {\n    props.addTask(selected.forEach(itemselect => {\n      const index = tasks.listStudents.findIndex(item => item._id === itemselect.value._id);\n\n      if (index !== -1) {\n        tasks.listStudents[index] = itemselect.value;\n      }\n\n      tasks.listStudents.push(itemselect.value);\n    }));\n    props.addTask(tasks.theme = selectedSeance.value);\n    console.log(tasks.theme);\n    props.addTask(tasks);\n    props.nextStep(step + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Segment, {\n      raised: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 11,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                  label: \"Title\",\n                  required: true,\n                  value: tasks.title,\n                  onChange: e => setTask({ ...tasks,\n                    title: e.target.value\n                  }),\n                  placeholder: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n                  required: true,\n                  label: \"Description\",\n                  value: tasks.description,\n                  onChange: e => setTask({ ...tasks,\n                    description: e.target.value\n                  }),\n                  placeholder: \"Description..\",\n                  style: {\n                    minHeight: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Due\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SemanticDatepicker, {\n                  onChange: (e, data) => setTask({ ...tasks,\n                    endDate: data.value\n                  }),\n                  value: tasks.endDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 5,\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              as: \"h5\",\n              icon: \"check square outline\",\n              content: \"Choose Theme  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedSeance,\n              onChange: setSelectedSeance,\n              options: seanceChosen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Header, {\n              as: \"h5\",\n              icon: \"check square outline\",\n              content: \" For Student  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              children: /*#__PURE__*/_jsxDEV(MultiSelect, {\n                options: studentChosen,\n                value: selected //  onChange={setSelected}\n                ,\n                labelledBy: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disabled: step > 2 || !tasks.title && !tasks.description && !tasks.typeTask,\n      type: \"submit\",\n      floated: \"right\",\n      color: \"red\",\n      onClick: event,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTask, \"9s358mGa62DbQJqvOXFOOfv+cEE=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/AddTask.js"],"names":["React","useState","Multiselect","Select","SemanticDatepicker","Dropdown","Button","Form","Grid","Rail","Segment","TextArea","Label","Header","useSelector","MultiSelect","AddTask","props","seances","state","seance","selectedSeance","setSelectedSeance","theme","setTheme","data","currentClass","JSON","parse","localStorage","getItem","selected","setSelected","studentChosen","seanceChosen","classUsers","forEach","element","push","label","name","value","titre","step","tasks","setTask","title","description","cour","typeTask","listQuestion","listStudents","endDate","creator","event","addTask","itemselect","index","findIndex","item","_id","console","log","nextStep","e","target","minHeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Select from \"react-select\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\n\nimport {\n  Dropdown,\n  Button,\n  Form,\n  Grid,\n  Rail,\n  Segment,\n  TextArea,\n  Label,\n  Header,\n} from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\nimport MultiSelect from \"react-multi-select-component\";\n\nexport default function AddTask(props) {\n  const seances = useSelector((state) => state.seance.seance);\n  const [selectedSeance, setSelectedSeance] = useState(null);\n\n  const [theme, setTheme] = useState(props.data.theme);\n\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const [selected, setSelected] = useState([]);\n  const studentChosen = [];\n  const seanceChosen = [];\n  currentClass.classUsers.forEach((element) => {\n    studentChosen.push({ label: element.name, value: element });\n  });\n\n  seances.forEach((element) => {\n    seanceChosen.push({ label: element.titre, value: element });\n  });\n\n  var step = 1;\n\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    cour: props.data.cour,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator,\n  });\n\n  const event = () => {\n    props.addTask(\n      selected.forEach((itemselect) => {\n        const index = tasks.listStudents.findIndex(\n          (item) => item._id === itemselect.value._id\n        );\n        if (index !== -1) {\n          tasks.listStudents[index] = itemselect.value;\n        }\n        tasks.listStudents.push(itemselect.value);\n      })\n    );\n\n    props.addTask((tasks.theme = selectedSeance.value));\n    console.log(tasks.theme);\n    props.addTask(tasks);\n\n    props.nextStep(step + 1);\n  };\n\n  return (\n    <div>\n      <Segment raised>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={11}>\n              <Form>\n                <Form.Field>\n                  <Form.Input\n                    label=\"Title\"\n                    required\n                    value={tasks.title}\n                    onChange={(e) =>\n                      setTask({ ...tasks, title: e.target.value })\n                    }\n                    placeholder=\"Title\"\n                  />\n                </Form.Field>\n                <Form.Field required>\n                  <label>Description</label>\n                  <TextArea\n                    required\n                    label=\"Description\"\n                    value={tasks.description}\n                    onChange={(e) =>\n                      setTask({ ...tasks, description: e.target.value })\n                    }\n                    placeholder=\"Description..\"\n                    style={{ minHeight: 50 }}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Due</label>\n                  <SemanticDatepicker\n                    onChange={(e, data) =>\n                      setTask({ ...tasks, endDate: data.value })\n                    }\n                    value={tasks.endDate}\n                  />\n                </Form.Field>\n              </Form>\n            </Grid.Column>\n            <Grid.Column width={5}>\n              <Header\n                as=\"h5\"\n                icon=\"check square outline\"\n                content={\"Choose Theme  \"}\n              />\n              <Select\n                value={selectedSeance}\n                onChange={setSelectedSeance}\n                options={seanceChosen}\n              />\n\n        \n              <Header\n                as=\"h5\"\n                icon=\"check square outline\"\n                content={\" For Student  \"}\n              />\n              <Form.Field required>\n               \n                <MultiSelect\n                  options={studentChosen}\n                  value={selected}\n                //  onChange={setSelected}\n                  labelledBy=\"Select\"\n                />\n              </Form.Field>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Button\n        disabled={\n          step > 2 || (!tasks.title && !tasks.description && !tasks.typeTask)\n        }\n        type=\"submit\"\n        floated=\"right\"\n        color=\"red\"\n        onClick={event}\n      >\n        Next\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}