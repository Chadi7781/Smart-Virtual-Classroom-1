{"ast":null,"code":"import axios from \"axios\";\nexport const api = axios.create({\n  baseURL: \"https://closer-server.herokuapp.com/\",\n  responseType: \"json\"\n});\nexport const notificationsApi = {\n  async getNotification(id) {\n    const {\n      data\n    } = await api.get(`https://closer-server.herokuapp.com/notification/${id}`);\n    return data;\n  },\n\n  async addNotification(notif) {\n    const {\n      data\n    } = await api.post(`https://closer-server.herokuapp.com/notification/add`, notif);\n    return data;\n  },\n\n  async putNotification(id) {\n    const {\n      data\n    } = await api.put(`https://closer-server.herokuapp.com/notification/update/${id}`);\n    return data;\n  }\n\n};\nexport const questionsApi = {\n  async getQuestions(id) {\n    const {\n      data\n    } = await api.get(`question/c/${id}`);\n    return data;\n  },\n\n  async getQuestionsByTags(id, tag) {\n    const {\n      data\n    } = await api.get(`question/findTag/${id}/${tag}`);\n    return data;\n  }\n\n};\nexport const answersApi = {\n  async getAnswers(id) {\n    console.log(id);\n    const {\n      data\n    } = await api.get(`answer/q/${id}`);\n    console.log(data);\n    return data;\n  }\n\n};\nexport const AddquestionsApi = {\n  async postQuestions(questionn) {\n    const {\n      data\n    } = await api.post(`question/add/`, questionn);\n    return data;\n  },\n\n  async uploadFileQuestions(formData, config) {\n    return await api.post(`question/upload/`, formData, config);\n  },\n\n  async putQuestions(newquestionn, id) {\n    const {\n      data\n    } = await api.put(`question/update/${id}`, newquestionn);\n    return data;\n  },\n\n  async deleteQuestions(id) {\n    const {\n      data\n    } = await api.delete(`question/delete/${id}`);\n    return data;\n  }\n\n};\nexport const AddAnswersApi = {\n  async postAnswers(answer) {\n    const {\n      data\n    } = await api.post(`answer/add/`, answer);\n    return data;\n  },\n\n  async deleteAnswers(id) {\n    const {\n      data\n    } = await api.delete(`answer/delete/${id}`);\n    return data;\n  },\n\n  async putAnswers(newanswer, id) {\n    const {\n      data\n    } = await api.put(`answer/update/${id}`, newanswer);\n    return data;\n  } //comments\n  //Hamza\n\n\n};\nexport const CommentsApi = {\n  async getCommentsCourse(id) {\n    const {\n      data\n    } = await api.get(`coursesComment/course/${id}`);\n    return data;\n  },\n\n  async getCommentsTask(id) {\n    const {\n      data\n    } = await api.get(`coursesComment/task/${id}`);\n    console.log(data);\n    return data;\n  },\n\n  async postComments(comment) {\n    const {\n      data\n    } = await api.post(`coursesComment/add/`, comment);\n    return data;\n  },\n\n  async deleteComments(id) {\n    const {\n      data\n    } = await api.delete(`coursesComment/delete/${id}`);\n    return data;\n  },\n\n  async putComments(newcomment, id) {\n    const {\n      data\n    } = await api.put(`coursesComment/update/${id}`, newcomment);\n    return data;\n  }\n\n}; /// hamza\n\nexport const getclassApi = {\n  async getclassByLevel(iduser) {\n    const {\n      data\n    } = await api.get(`class/bylevel/` + iduser);\n    return data;\n  },\n\n  async getUserByEmail(email) {\n    const {\n      data\n    } = await api.get(`class/email/` + email);\n    return data;\n  },\n\n  async getUserByid(id) {\n    const {\n      data\n    } = await api.get(`class/userid/` + id);\n    return data;\n  },\n\n  async CountActiveClass(id) {\n    const {\n      data\n    } = await api.get(`class/countactive/` + id);\n    return data;\n  },\n\n  async getclassByYear(iduser) {\n    const {\n      data\n    } = await api.get(`class/byyear/` + iduser);\n    return data;\n  },\n\n  async getclassById(idclass) {\n    const {\n      data\n    } = await api.get(`class/` + idclass);\n    return data;\n  }\n\n};\nexport const ClassInvitationApi = {\n  async getClassInvitation(email) {\n    const {\n      data\n    } = await api.get(`invitationclass/` + email);\n    return data;\n  },\n\n  async getClassInvitationClassId(id) {\n    const {\n      data\n    } = await api.get(`invitationclass/inviteclassid/` + id);\n    return data;\n  },\n\n  async CountRequestClass(id) {\n    const {\n      data\n    } = await api.get(`invitationclass/countrequest/` + id);\n    return data;\n  },\n\n  async AddClassInvitation(add) {\n    const {\n      data\n    } = await api.post(`invitationclass/`, add);\n    return data;\n  },\n\n  async deleteClassInvitation(id) {\n    const {\n      data\n    } = await api.delete(`invitationclass/${id}`);\n    return data;\n  }\n\n};\nexport const AddclassApi = {\n  async addClass(cl) {\n    const {\n      data\n    } = await api.post(`class/`, cl);\n    return data;\n  },\n\n  async updateClass(id, cl) {\n    const {\n      data\n    } = await api.put(`class/${id}`, cl);\n    return data;\n  },\n\n  async addUserToClass(idclass, email) {\n    const {\n      data\n    } = await api.put(`class/${idclass}/${email}`);\n    return data;\n  },\n\n  async removeUserFromClass(idclass, email) {\n    const {\n      data\n    } = await api.put(`class/r/${idclass}/${email}`);\n    return data;\n  },\n\n  async updateClassActive(id) {\n    const {\n      data\n    } = await api.put(`class/update/archive/${id}`);\n    return data;\n  },\n\n  async deleteClass(id) {\n    const {\n      data\n    } = await api.delete(`class/${id}`);\n    return data;\n  }\n\n};\nexport default api;","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/api/api.js"],"names":["axios","api","create","baseURL","responseType","notificationsApi","getNotification","id","data","get","addNotification","notif","post","putNotification","put","questionsApi","getQuestions","getQuestionsByTags","tag","answersApi","getAnswers","console","log","AddquestionsApi","postQuestions","questionn","uploadFileQuestions","formData","config","putQuestions","newquestionn","deleteQuestions","delete","AddAnswersApi","postAnswers","answer","deleteAnswers","putAnswers","newanswer","CommentsApi","getCommentsCourse","getCommentsTask","postComments","comment","deleteComments","putComments","newcomment","getclassApi","getclassByLevel","iduser","getUserByEmail","email","getUserByid","CountActiveClass","getclassByYear","getclassById","idclass","ClassInvitationApi","getClassInvitation","getClassInvitationClassId","CountRequestClass","AddClassInvitation","add","deleteClassInvitation","AddclassApi","addClass","cl","updateClass","addUserToClass","removeUserFromClass","updateClassActive","deleteClass"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"https://closer-server.herokuapp.com/\",\r\n  responseType: \"json\",\r\n});\r\nexport const notificationsApi = {\r\n  async getNotification(id) {\r\n    const { data } = await api.get(`https://closer-server.herokuapp.com/notification/${id}`);\r\n    return data;\r\n  }, \r\n  async addNotification(notif) {\r\n    const { data } = await api.post(`https://closer-server.herokuapp.com/notification/add`,notif);\r\n    return data;\r\n  },\r\n  async putNotification(id) {\r\n    const { data } = await api.put(`https://closer-server.herokuapp.com/notification/update/${id}`);\r\n    return data;\r\n  },\r\n};\r\nexport const questionsApi = {\r\n  async getQuestions(id) {\r\n    const { data } = await api.get(`question/c/${id}`);\r\n    return data;\r\n  },\r\n  async getQuestionsByTags(id,tag) {\r\n    const { data } = await api.get(`question/findTag/${id}/${tag}`);\r\n    return data;\r\n  },\r\n\r\n};\r\n\r\nexport const answersApi = {\r\n  async getAnswers(id) {\r\n    console.log(id);\r\n    const { data } = await api.get(`answer/q/${id}`);\r\n    console.log(data);\r\n    return data;\r\n  },\r\n};\r\nexport const AddquestionsApi = {\r\n  async postQuestions(questionn) {\r\n    const { data } = await api.post(`question/add/`, questionn);\r\n    return data;\r\n  },\r\n  async uploadFileQuestions(formData, config) {\r\n    return await api.post(`question/upload/`, formData, config);\r\n  },\r\n\r\n  async putQuestions(newquestionn, id) {\r\n    const { data } = await api.put(`question/update/${id}`, newquestionn);\r\n    return data;\r\n  },\r\n  async deleteQuestions(id) {\r\n    const { data } = await api.delete(`question/delete/${id}`);\r\n    return data;\r\n  },\r\n};\r\nexport const AddAnswersApi = {\r\n  async postAnswers(answer) {\r\n    const { data } = await api.post(`answer/add/`, answer);\r\n    return data;\r\n  },\r\n  async deleteAnswers(id) {\r\n    const { data } = await api.delete(`answer/delete/${id}`);\r\n    return data;\r\n  },\r\n  async putAnswers(newanswer, id) {\r\n    const { data } = await api.put(`answer/update/${id}`, newanswer);\r\n    return data;\r\n  },\r\n\r\n  //comments\r\n  \r\n  //Hamza\r\n};\r\nexport const CommentsApi = {\r\n  async getCommentsCourse(id) {\r\n    \r\n    const { data } = await api.get(`coursesComment/course/${id}`);\r\n   \r\n    return data;\r\n  },\r\n  async getCommentsTask(id) {\r\n    const { data } = await api.get(`coursesComment/task/${id}`);\r\n    console.log(data);\r\n    return data;\r\n  },\r\n  \r\n  async postComments(comment) {\r\n    const { data } = await api.post(`coursesComment/add/`, comment);\r\n    return data;\r\n  },\r\n  async deleteComments(id) {\r\n    const { data } = await api.delete(`coursesComment/delete/${id}`);\r\n    return data;\r\n  },\r\n  async putComments(newcomment, id) {\r\n    const { data } = await api.put(`coursesComment/update/${id}`, newcomment);\r\n    return data;\r\n  }};\r\n/// hamza\r\n  export const getclassApi = {\r\n    async getclassByLevel(iduser) {\r\n      const { data } = await api.get(`class/bylevel/` + iduser);\r\n      return data;\r\n    },\r\n    async getUserByEmail(email) {\r\n      const { data } = await api.get(`class/email/` + email);\r\n      return data;\r\n    },\r\n    async getUserByid(id) {\r\n      const { data } = await api.get(`class/userid/` + id);\r\n      return data;\r\n    },\r\n    async CountActiveClass(id) {\r\n      const { data } = await api.get(`class/countactive/` + id);\r\n      return data;\r\n    },\r\n    async getclassByYear(iduser) {\r\n      const { data } = await api.get(`class/byyear/` + iduser);\r\n      return data;\r\n    },\r\n    async getclassById(idclass) {\r\n      const { data } = await api.get(`class/` + idclass);\r\n      return data;\r\n    },\r\n  };\r\n  export const ClassInvitationApi = {\r\n    async getClassInvitation(email) {\r\n      const { data } = await api.get(`invitationclass/` + email);\r\n      return data;\r\n    },\r\n    async getClassInvitationClassId(id) {\r\n      const { data } = await api.get(`invitationclass/inviteclassid/` + id);\r\n      return data;\r\n    },\r\n    async CountRequestClass(id) {\r\n      const { data } = await api.get(`invitationclass/countrequest/` + id);\r\n      return data;\r\n    },\r\n    async AddClassInvitation(add) {\r\n      const { data } = await api.post(`invitationclass/`,add);\r\n      return data;\r\n    },\r\n    async deleteClassInvitation(id) {\r\n      const { data } = await api.delete(`invitationclass/${id}`);\r\n      return data;\r\n    },\r\n  };\r\n  export const AddclassApi = {\r\n    async addClass(cl) {\r\n      const { data } = await api.post(`class/`, cl);\r\n      return data;\r\n    },\r\n    async updateClass(id,cl) {\r\n      const { data } = await api.put(`class/${id}`, cl);\r\n      return data;\r\n    },\r\n    async addUserToClass(idclass,email) {\r\n      const { data } = await api.put(`class/${idclass}/${email}`);\r\n      return data;\r\n    },\r\n    async removeUserFromClass(idclass,email) {\r\n      const { data } = await api.put(`class/r/${idclass}/${email}`);\r\n      return data;\r\n    },\r\n    async updateClassActive(id) {\r\n      const { data } = await api.put(`class/update/archive/${id}`);\r\n      return data;\r\n    },\r\n    async deleteClass(id) {\r\n      const { data } = await api.delete(`class/${id}`);\r\n      return data;\r\n    },\r\n  };\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}