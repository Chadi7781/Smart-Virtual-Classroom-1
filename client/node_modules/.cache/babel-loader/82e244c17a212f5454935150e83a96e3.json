{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TaskFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dropzone from \"react-dropzone-uploader\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport { Button, Divider } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport { addUploadFile } from '../../redux/slices/Task';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskFile(props) {\n  _s();\n\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator\n  });\n  const dispatch = useDispatch();\n  const [multiple_resources, SetMultiple_resources] = useState([]);\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {\n    console.log(status, meta, file);\n\n    if (status === \"done\") {\n      SetMultiple_resources(multiple_resources.concat(file));\n    }\n\n    if (status === \"removed\") {\n      let multiple_resource = multiple_resources.slice();\n      multiple_resource = multiple_resources.filter(u => {\n        return u !== file;\n      });\n      SetMultiple_resources(multiple_resource);\n    }\n  };\n\n  var step = 2;\n\n  const testUpload = () => {\n    dispatch(addUploadFile(multiple_resources)).then(res => {\n      console.log(res.payload);\n      props.addTask(tasks.listQuestion = res.payload);\n      props.addTask(tasks);\n      console.log(tasks);\n    });\n    console.log(tasks);\n    props.nextStep(step + 1);\n  };\n\n  const event = () => {//props.addTask(tasks.listQuestion = inputFields);\n    // props.addTask(tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      styles: {\n        dropzone: {\n          minHeight: 120,\n          maxHeight: 250\n        }\n      },\n      canCancel: true,\n      canRemove: true,\n      canRestart: true,\n      onChangeStatus: handleChangeStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"red\",\n      type: \"submit\",\n      floated: \"right\",\n      onClick: testUpload,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskFile, \"gvtyBeBuA0F7e1z/HyLjU18EQ44=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFile\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TaskFile.js"],"names":["React","useState","Dropzone","Button","Divider","axios","addUploadFile","useDispatch","TaskFile","props","tasks","setTask","title","data","description","theme","typeTask","listQuestion","listStudents","endDate","creator","dispatch","multiple_resources","SetMultiple_resources","handleChangeStatus","meta","file","status","console","log","concat","multiple_resource","slice","filter","u","step","testUpload","then","res","payload","addTask","nextStep","event","dropzone","minHeight","maxHeight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\nimport { Button, Divider } from 'semantic-ui-react';\r\nimport axios from \"axios\"\r\nimport { addUploadFile } from '../../redux/slices/Task';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function TaskFile(props) {\r\n\r\n    const [tasks , setTask] = useState({\r\n           \r\n        title : props.data.title,\r\n        description : props.data.description,\r\n        theme : props.data.theme,\r\n        typeTask : props.data.typeTask,\r\n        listQuestion : props.data.listQuestion,\r\n        listStudents : props.data.listStudents,\r\n        endDate : props.data.endDate,\r\n        creator : props.data.creator\r\n     \r\n    });\r\n    const dispatch = useDispatch()\r\n    const [multiple_resources, SetMultiple_resources] = useState([]);\r\n    const handleChangeStatus = ({ meta, file }, status) => {\r\n      console.log(status, meta, file);\r\n  \r\n      if (status === \"done\") {\r\n\r\n          SetMultiple_resources(multiple_resources.concat(file));\r\n      }\r\n      if (status === \"removed\") {\r\n          let multiple_resource = multiple_resources.slice();\r\n          multiple_resource = multiple_resources.filter((u) => {\r\n            return u !== file;\r\n          });\r\n          SetMultiple_resources(multiple_resource);\r\n      }\r\n    };\r\n    var step=2;\r\n    const testUpload = () => {  \r\n  dispatch(addUploadFile(multiple_resources)).then((res)=>{\r\n      console.log(res.payload);\r\n      props.addTask(tasks.listQuestion = res.payload);\r\n      props.addTask(tasks);\r\n      console.log(tasks)\r\n  \r\n})\r\n  console.log(tasks)\r\n  props.nextStep(step+1);\r\n      }\r\n    \r\n      const event = ()=>{\r\n        \r\n        //props.addTask(tasks.listQuestion = inputFields);\r\n       // props.addTask(tasks);\r\n      \r\n      }\r\n    return (\r\n        <div>\r\n           <Dropzone\r\n          styles={{ dropzone: { minHeight: 120, maxHeight: 250 } }}\r\n          canCancel={true}\r\n          canRemove={true}\r\n          canRestart={true}\r\n          onChangeStatus={handleChangeStatus}\r\n        />\r\n         <Divider hidden></Divider>\r\n  <Button\r\n      \r\n            color=\"red\"\r\n              type=\"submit\" \r\n              floated='right'\r\n              onClick={testUpload}\r\n             >Next</Button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}