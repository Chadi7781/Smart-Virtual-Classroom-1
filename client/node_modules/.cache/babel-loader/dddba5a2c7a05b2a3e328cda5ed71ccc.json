{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\DisplayTaskTeacher.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Statistic, Icon, Divider, Item, Label, Header, Segment, Grid, Image, Accordion } from 'semantic-ui-react';\nimport { isAuth } from '../../helpers/auth';\nimport { getNbrTasksMissing, getNbrTasksRemis, getTaskByTeacher, updateTaskStatus, assignTask, assignAfterSave } from '../../redux/slices/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst teacher = [{\n  id: \"606781123ed972382c721fce\",\n  student: 'Sofien'\n}];\nexport default function DisplayTaskTeacher() {\n  _s();\n\n  const tasks = useSelector(state => state.tasks.tasks);\n  const remis = useSelector(state => state.tasks.nbrRemis);\n  const missing = useSelector(state => state.tasks.nbrMissing);\n  console.log(tasks);\n  const dispatch = useDispatch();\n\n  const onSubmitAssignTask = task => {\n    // dispatch(assignAfterSave(task));\n    dispatch(updateTaskStatus(task)).then(() => {\n      dispatch(assignAfterSave(task)).then(() => {\n        dispatch(getTaskByTeacher(isAuth()._id));\n      });\n    });\n  };\n\n  const getItemInfo = id => {\n    dispatch(getNbrTasksMissing(id));\n    dispatch(getNbrTasksRemis(id));\n  };\n\n  useEffect(() => {\n    dispatch(getTaskByTeacher(isAuth()._id));\n  }, [isAuth()._id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      content: \"List Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this), !tasks ? /*#__PURE__*/_jsxDEV(Segment, {\n      placeholder: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        icon: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 3\n        }, this), \"No Tasks For you \", teacher[0].student, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this) : tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/DetailTask/\" + task._id,\n      children: [/*#__PURE__*/_jsxDEV(Segment, {\n        color: \"red\",\n        raised: true,\n        children: /*#__PURE__*/_jsxDEV(Item.Group, {\n          divided: true,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n              size: \"tiny\",\n              avatar: true,\n              src: process.env.PUBLIC_URL + '/quiz.png'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                as: \"a\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"cinema\",\n                  children: moment(task.endDate).format(\"MMMM Do yy\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              columns: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: /*#__PURE__*/_jsxDEV(Statistic.Group, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                    color: \"red\",\n                    children: [/*#__PURE__*/_jsxDEV(Statistic.Value, {\n                      children: [getItemInfo.call(this, task._id), missing]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 1\n                    }, this), /*#__PURE__*/_jsxDEV(Statistic.Label, {\n                      children: \"Missing\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 1\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 1\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      color: \"green\",\n                      children: [/*#__PURE__*/_jsxDEV(Statistic.Value, {\n                        children: [getItemInfo.call(this, task._id), remis]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 1\n                      }, this), /*#__PURE__*/_jsxDEV(Statistic.Label, {\n                        children: \"Done\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 1\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 1\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 1\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  children: task.status === 'not assign' ? /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"red\",\n                    type: \"submit\",\n                    onClick: () => onSubmitAssignTask(task),\n                    children: \"Assign\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 38\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 1\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this))]\n  }, void 0, true);\n}\n\n_s(DisplayTaskTeacher, \"uUrKjWqm14vhm5PcsopOVcxzA6E=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = DisplayTaskTeacher;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTaskTeacher\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/DisplayTaskTeacher.js"],"names":["moment","React","useEffect","useSelector","useDispatch","Link","Button","Statistic","Icon","Divider","Item","Label","Header","Segment","Grid","Image","Accordion","isAuth","getNbrTasksMissing","getNbrTasksRemis","getTaskByTeacher","updateTaskStatus","assignTask","assignAfterSave","teacher","id","student","DisplayTaskTeacher","tasks","state","remis","nbrRemis","missing","nbrMissing","console","log","dispatch","onSubmitAssignTask","task","then","_id","getItemInfo","map","index","process","env","PUBLIC_URL","title","endDate","format","description","call","status"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport React ,{useEffect} from 'react'\r\nimport { useSelector ,useDispatch} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button,Statistic, Icon, Divider, Item, Label,Header, Segment, Grid, Image, Accordion } from 'semantic-ui-react';\r\nimport { isAuth } from '../../helpers/auth';\r\n\r\n\r\nimport { getNbrTasksMissing, getNbrTasksRemis, getTaskByTeacher ,updateTaskStatus,assignTask, assignAfterSave} from '../../redux/slices/Task';\r\n\r\nconst teacher = [\r\n  {id : \"606781123ed972382c721fce\" ,student : 'Sofien'}]\r\nexport default function DisplayTaskTeacher() {\r\n\r\n    const tasks = useSelector( state => state.tasks.tasks)\r\n    const remis = useSelector( state => state.tasks.nbrRemis)\r\n    const missing = useSelector( state => state.tasks.nbrMissing)\r\n    console.log(tasks)\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmitAssignTask = (task)=>{\r\n      \r\n \r\n     // dispatch(assignAfterSave(task));\r\n      dispatch(updateTaskStatus(task)).then(()=>{\r\n        dispatch(assignAfterSave(task)).then(()=>{\r\n          dispatch(getTaskByTeacher(isAuth()._id))\r\n        })\r\n       \r\n      });\r\n    \r\n    }\r\n  const getItemInfo = (id) =>{\r\n    dispatch(getNbrTasksMissing(id))\r\n          dispatch(getNbrTasksRemis(id))\r\n  }\r\n    useEffect(()=>{\r\n     \r\n        dispatch(getTaskByTeacher(isAuth()._id))\r\n        \r\n        \r\n    \r\n       \r\n       \r\n       },[isAuth()._id])\r\n    return (\r\n        <>\r\n       \r\n         <Divider  hidden/>\r\n \r\n              <Header  as='h2' content='List Task' />\r\n  \r\n                         <Divider />\r\n\r\n                         { !tasks ? (         \r\n            <Segment placeholder>\r\n<Header icon>\r\n  <Icon name='tasks' />\r\n  No Tasks For you {teacher[0].student}.\r\n</Header>\r\n\r\n</Segment>   ) : \r\n\r\n(  tasks.map((task,index) =>\r\n\r\n\r\n<Link to ={\"/DetailTask/\"+task._id}>\r\n\r\n  <Segment color=\"red\" raised> \r\n \r\n   <Item.Group divided key={index} >\r\n \r\n<Item  >\r\n<Item.Image size='tiny' \r\n              avatar src={process.env.PUBLIC_URL+'/quiz.png' }/> \r\n\r\n<Item.Content >\r\n<Item.Header as='a'>{task.title}</Item.Header>\r\n<Item.Meta>\r\n<span className='cinema'>{moment(task.endDate).format(\"MMMM Do yy\")}</span>\r\n\r\n</Item.Meta>\r\n<Item.Description>{task.description}</Item.Description>\r\n\r\n\r\n\r\n</Item.Content>\r\n\r\n\r\n\r\n<Grid columns='equal'>\r\n<Grid.Row >\r\n\r\n<Statistic.Group  size='small'  >\r\n\r\n\r\n<Statistic color=\"red\" >\r\n<Statistic.Value>\r\n\r\n{getItemInfo.call(this, task._id)}\r\n{missing}\r\n</Statistic.Value>\r\n\r\n<Statistic.Label  >Missing</Statistic.Label>\r\n\r\n</Statistic>\r\n\r\n<Grid.Column>\r\n<Statistic color='green'  >\r\n<Statistic.Value>\r\n\r\n{getItemInfo.call(this, task._id)}\r\n{remis}\r\n</Statistic.Value>\r\n<Statistic.Label >Done</Statistic.Label>\r\n</Statistic>\r\n</Grid.Column>\r\n\r\n</Statistic.Group>\r\n  </Grid.Row>\r\n\r\n  <Grid.Row>\r\n    <Grid.Column>\r\n  { task.status === 'not assign' ? ( <Button   color=\"red\"\r\n       type=\"submit\" \r\n       \r\n       onClick={()=>onSubmitAssignTask(task)}>Assign</Button> ) : (<></>) }\r\n  </Grid.Column>\r\n\r\n</Grid.Row>\r\n</Grid>\r\n</Item>\r\n\r\n</Item.Group>\r\n\r\n</Segment>\r\n\r\n<Divider hidden></Divider>\r\n</Link>\r\n))\r\n\r\n}\r\n  \r\n           \r\n           \r\n\r\n \r\n  \r\n\r\n\r\n\r\n      </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}