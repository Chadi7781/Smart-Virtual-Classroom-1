{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Quiz\\\\AddQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Divider, Grid, Segment, Icon, Header } from \"semantic-ui-react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddQuiz(props) {\n  _s();\n\n  const Options = [{\n    key: Number,\n    text: \"dsd\",\n    value: \"Opp\"\n  }, {\n    key: Number,\n    text: \"dsd\",\n    value: \"cc\"\n  }];\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    cour: props.data.cour,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator\n  });\n  const [inputFields, setInputFields] = useState([{\n    id: uuidv4(),\n    fquestion: \"\",\n    foptionA: \"\",\n    foptionB: \"\",\n    foptionC: \"\",\n    foptionD: \"\",\n    correct_answer: \"\",\n    fpoint: \"\"\n  }]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeSelect = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    console.log(newInputFields);\n    setInputFields(newInputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    console.log(id);\n    const newInputFields = inputFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    console.log(newInputFields);\n    setInputFields(newInputFields);\n  };\n\n  const [theme, setTheme] = useState();\n\n  const selectedTheme = (selectedList, selectedItem) => {\n    inputFields[0][\"correct_answer\"] = selectedItem.value;\n    console.log(inputFields);\n    setInputFields(inputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, {\n      id: uuidv4(),\n      fquestion: \"\",\n      foptionA: \"\",\n      foptionB: \"\",\n      foptionC: \"\",\n      foptionD: \"\",\n      correct_answer: \"\",\n      fpoint: \"\"\n    }]);\n  };\n\n  const [selectedItem, SetSelectedItem] = useState();\n\n  const handleRemoveFields = id => {\n    const values = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  };\n\n  var step = 2;\n\n  const event = () => {\n    props.addTask(tasks.listQuestion = inputFields);\n    props.addTask(tasks);\n    props.nextStep(step + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          raised: true,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"qsd\",\n            onSubmit: handleSubmit,\n            children: inputFields.map((inputField, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Question \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                widths: \"equal\",\n                inline: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                  name: \"fquestion\",\n                  fluid: true,\n                  value: inputFields.fquestion,\n                  onChange: event => handleChangeInput(inputField.id, event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                  name: \"fpoint\",\n                  value: inputFields.fquestion,\n                  onChange: event => handleChangeInput(inputField.id, event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"mini\",\n                    disabled: inputFields.length === 1,\n                    onClick: () => handleRemoveFields(inputField.id),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"mini\",\n                    onClick: handleAddFields,\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                icon: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"check circle outline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 27\n                }, this),\n                name: \"foptionA\",\n                fluid: true,\n                value: inputFields.foptionA,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                name: \"foptionB\",\n                label: \"B\",\n                variant: \"filled\",\n                value: inputFields.foptionB,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                name: \"foptionC\",\n                label: \"C\",\n                variant: \"filled\",\n                value: inputFields.foptionC,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                name: \"foptionD\",\n                label: \"D\",\n                variant: \"filled\",\n                value: inputFields.foptionD,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Header, {\n                as: \"h5\",\n                icon: \"images outline\",\n                content: \"Select Correct Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n                required: true,\n                placeholder: \"Select Correct Answer\",\n                style: {\n                  chips: {\n                    background: \"red\"\n                  },\n                  option: {\n                    color: \"black\"\n                  },\n                  searchBox: {\n                    border: \"none\"\n                  },\n                  chips: {\n                    background: \"red\"\n                  }\n                },\n                onSelect: selectedTheme,\n                fluid: true,\n                name: \"correct_answer\",\n                options: Options,\n                selection: true,\n                singleSelect: true,\n                hidePlaceholder: true,\n                displayValue: \"value\",\n                value: inputFields.correct_answer,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, inputField.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"red\",\n      type: \"submit\",\n      floated: \"right\",\n      onClick: event,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddQuiz, \"1dKpaRv43fC1OWg2VXyncVkK2Hk=\");\n\n_c = AddQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuiz\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Quiz/AddQuiz.js"],"names":["React","useState","Button","Form","Divider","Grid","Segment","Icon","Header","v4","uuidv4","Multiselect","AddQuiz","props","Options","key","Number","text","value","tasks","setTask","title","data","description","theme","cour","typeTask","listQuestion","listStudents","endDate","creator","inputFields","setInputFields","id","fquestion","foptionA","foptionB","foptionC","foptionD","correct_answer","fpoint","handleSubmit","e","preventDefault","console","log","handleChangeSelect","event","newInputFields","map","i","target","name","handleChangeInput","setTheme","selectedTheme","selectedList","selectedItem","handleAddFields","SetSelectedItem","handleRemoveFields","values","splice","findIndex","step","addTask","nextStep","inputField","index","length","chips","background","option","color","searchBox","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Divider, Grid, Segment, Icon, Header } from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nexport default function AddQuiz(props) {\r\n  const Options = [\r\n    { key: Number, text: \"dsd\", value: \"Opp\" },\r\n    { key: Number, text: \"dsd\", value: \"cc\" }\r\n];\r\n  const [tasks, setTask] = useState({\r\n    title: props.data.title,\r\n    description: props.data.description,\r\n    theme: props.data.theme,\r\n    cour: props.data.cour,\r\n    typeTask: props.data.typeTask,\r\n    listQuestion: props.data.listQuestion,\r\n    listStudents: props.data.listStudents,\r\n    endDate: props.data.endDate,\r\n    creator: props.data.creator,\r\n  });\r\n\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      fquestion: \"\",\r\n      foptionA: \"\",\r\n      foptionB: \"\",\r\n      foptionC: \"\",\r\n      foptionD: \"\",\r\n      correct_answer: \"\",\r\n      fpoint: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n\r\n  };\r\n\r\n  const handleChangeSelect = (id, event) => {\r\n   \r\n    const newInputFields = inputFields.map((i) => {\r\n    \r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n       \r\n      }\r\n\r\n\r\n      return i;\r\n    });\r\n    console.log(newInputFields);\r\n    setInputFields(newInputFields);\r\n  };\r\n  const handleChangeInput = (id, event) => {\r\n   \r\n    console.log(id);\r\n    const newInputFields = inputFields.map((i) => {\r\n    \r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n       \r\n      }\r\n\r\n\r\n      return i;\r\n    });\r\n    console.log(newInputFields);\r\n    setInputFields(newInputFields);\r\n  };\r\n  const [theme, setTheme] = useState();\r\n  const selectedTheme = (selectedList, selectedItem) => {\r\n\r\n  \r\n    inputFields[0][\"correct_answer\"] = selectedItem.value;\r\n    \r\n    \r\n    console.log(inputFields);\r\n    setInputFields(inputFields);\r\n        \r\n  };\r\n  const handleAddFields = () => {\r\n\r\n    setInputFields([\r\n      ...inputFields,\r\n      {\r\n        id: uuidv4(),\r\n        fquestion: \"\",\r\n        foptionA: \"\",\r\n        foptionB: \"\",\r\n        foptionC: \"\",\r\n        foptionD: \"\",\r\n        correct_answer: \"\",\r\n        fpoint: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  const [selectedItem, SetSelectedItem] = useState();\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  var step = 2;\r\n  const event = () => {\r\n    props.addTask((tasks.listQuestion = inputFields));\r\n    props.addTask(tasks);\r\n    props.nextStep(step + 1);\r\n  };\r\n\r\n \r\n  return (\r\n    <div>\r\n      <Grid centered>\r\n        <Grid.Column>\r\n          <Segment raised>\r\n            <Form className=\"qsd\" onSubmit={handleSubmit}>\r\n              {inputFields.map((inputField, index) => (\r\n                <div key={inputField.id}>\r\n                  <Divider />\r\n                  <label>Question {index + 1}</label>\r\n                  <Form.Group widths=\"equal\" inline>\r\n                    <Form.Input\r\n                      name=\"fquestion\"\r\n                      fluid\r\n                      value={inputFields.fquestion}\r\n                      onChange={(event) =>\r\n                        handleChangeInput(inputField.id, event)\r\n                      }\r\n                    />\r\n\r\n                    <Form.Input\r\n                      name=\"fpoint\"\r\n                      value={inputFields.fquestion}\r\n                      onChange={(event) =>\r\n                        handleChangeInput(inputField.id, event)\r\n                      }\r\n                    />\r\n                    <Button.Group>\r\n                      <Button\r\n                        size=\"mini\"\r\n                        disabled={inputFields.length === 1}\r\n                        onClick={() => handleRemoveFields(inputField.id)}\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      <Button.Or></Button.Or>\r\n                      <Button size=\"mini\" onClick={handleAddFields}>\r\n                        +\r\n                      </Button>\r\n                    </Button.Group>\r\n                  </Form.Group>\r\n                  <label>A</label>\r\n\r\n                  <Form.Input\r\n                    icon={<Icon name=\"check circle outline\" />}\r\n                    name=\"foptionA\"\r\n                    fluid\r\n                    value={inputFields.foptionA}\r\n                    onChange={(event) =>\r\n                      handleChangeInput(inputField.id, event)\r\n                    }\r\n                  />\r\n\r\n                  <Form.Input\r\n                    name=\"foptionB\"\r\n                    label=\"B\"\r\n                    variant=\"filled\"\r\n                    value={inputFields.foptionB}\r\n                    onChange={(event) =>\r\n                      handleChangeInput(inputField.id, event)\r\n                    }\r\n                  />\r\n                  <Form.Input\r\n                    name=\"foptionC\"\r\n                    label=\"C\"\r\n                    variant=\"filled\"\r\n                    value={inputFields.foptionC}\r\n                    onChange={(event) =>\r\n                      handleChangeInput(inputField.id, event)\r\n                    }\r\n                  />\r\n                  <Form.Input\r\n                    name=\"foptionD\"\r\n                    label=\"D\"\r\n                    variant=\"filled\"\r\n                    value={inputFields.foptionD}\r\n                    onChange={(event) =>\r\n                      handleChangeInput(inputField.id, event)\r\n                    }\r\n                    \r\n                  />\r\n                <Header as=\"h5\" icon=\"images outline\" content=\"Select Correct Answer\" />\r\n                <Multiselect\r\n              required\r\n                placeholder=\"Select Correct Answer\"\r\n                style={{\r\n                  chips: { background: \"red\" },\r\n                  option: { color: \"black\" },\r\n                  searchBox: {\r\n                  \r\n                    border: \"none\",\r\n                  },\r\n                  chips: { \r\n                    background: \"red\"\r\n                    }\r\n                }}\r\n                onSelect={selectedTheme}\r\n                fluid\r\n                name=\"correct_answer\"\r\n                options={Options}\r\n                selection\r\n                singleSelect={true}\r\n                hidePlaceholder\r\n                displayValue=\"value\"\r\n                 value={inputFields.correct_answer}\r\n                onChange={(event) =>\r\n                  handleChangeInput(inputField.id, event)\r\n                }\r\n               \r\n              \r\n              \r\n              />\r\n          \r\n    \r\n              \r\n                </div>\r\n              ))}\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <Divider hidden></Divider>\r\n      <Button color=\"red\" type=\"submit\" floated=\"right\" onClick={event}>\r\n        Next\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}