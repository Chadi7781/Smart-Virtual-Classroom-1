{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\coursesAndSeances\\\\ModalSeance.js\";\nimport React from \"react\";\nimport { Dropdown, Feed, Icon, Modal } from \"semantic-ui-react\";\nimport FormSeance from \"./FormSeance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalSeance(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      trigger: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        icon: props.icon,\n        text: props.buttonTriggerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this),\n      dimmer: \"inverted\",\n      size: \"tiny\",\n      closeIcon: \"close\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: props.headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(FormSeance, {\n          buttonSubmitTitle: props.buttonSubmitTitle,\n          buttonColor: props.buttonColor,\n          seanceId: props.seanceId,\n          onSeanceAdded: props.onSeanceAdded,\n          onSeanceUpdated: props.onSeanceUpdated,\n          server: props.server,\n          socket: props.socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ModalSeance;\nexport default ModalSeance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalSeance\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/coursesAndSeances/ModalSeance.js"],"names":["React","Dropdown","Feed","Icon","Modal","FormSeance","ModalSeance","props","icon","buttonTriggerTitle","headerTitle","buttonSubmitTitle","buttonColor","seanceId","onSeanceAdded","onSeanceUpdated","server","socket"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,KAA/B,QAA4C,mBAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,OAAO,eACL,QAAC,QAAD,CAAU,IAAV;AAAe,QAAA,IAAI,EAAEA,KAAK,CAACC,IAA3B;AAAiC,QAAA,IAAI,EAAED,KAAK,CAACE;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAIE,MAAA,MAAM,EAAC,UAJT;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,SAAS,EAAC,OANZ;AAAA,8BAQE,QAAC,KAAD,CAAO,MAAP;AAAA,kBAAeF,KAAK,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,KAAD,CAAO,OAAP;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,iBAAiB,EAAEH,KAAK,CAACI,iBAD3B;AAEE,UAAA,WAAW,EAAEJ,KAAK,CAACK,WAFrB;AAGE,UAAA,QAAQ,EAAEL,KAAK,CAACM,QAHlB;AAIE,UAAA,aAAa,EAAEN,KAAK,CAACO,aAJvB;AAKE,UAAA,eAAe,EAAEP,KAAK,CAACQ,eALzB;AAME,UAAA,MAAM,EAAER,KAAK,CAACS,MANhB;AAOE,UAAA,MAAM,EAAET,KAAK,CAACU;AAPhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD;;KA1BQX,W;AA4BT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Dropdown, Feed, Icon, Modal } from \"semantic-ui-react\";\r\nimport FormSeance from \"./FormSeance\";\r\n\r\nfunction ModalSeance(props) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        trigger={\r\n          <Dropdown.Item icon={props.icon} text={props.buttonTriggerTitle} />\r\n        }\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <FormSeance\r\n            buttonSubmitTitle={props.buttonSubmitTitle}\r\n            buttonColor={props.buttonColor}\r\n            seanceId={props.seanceId}\r\n            onSeanceAdded={props.onSeanceAdded}\r\n            onSeanceUpdated={props.onSeanceUpdated}\r\n            server={props.server}\r\n            socket={props.socket}\r\n          />\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalSeance;\r\n"]},"metadata":{},"sourceType":"module"}