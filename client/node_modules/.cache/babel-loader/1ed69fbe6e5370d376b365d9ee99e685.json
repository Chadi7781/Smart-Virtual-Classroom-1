{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\coursesAndSeances\\\\ScreenRecord.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useMediaRecorder from \"@wmik/use-media-recorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Player({\n  srcBlob,\n  audio\n}) {\n  if (!srcBlob) {\n    return null;\n  }\n\n  if (audio) {\n    return /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: URL.createObjectURL(srcBlob),\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    src: URL.createObjectURL(srcBlob),\n    width: 520,\n    height: 480,\n    controls: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Player;\n\nfunction ScreenRecord() {\n  _s();\n\n  let {\n    error,\n    status,\n    mediaBlob,\n    stopRecording,\n    getMediaStream,\n    startRecording\n  } = useMediaRecorder({\n    recordScreen: true,\n    blobOptions: {\n      type: \"video/webm\"\n    },\n    mediaStreamConstraints: {\n      audio: true,\n      video: true\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Screen recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), error ? `${status} ${error.message}` : status, /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: getMediaStream,\n        disabled: status === \"ready\",\n        children: \"Share screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: startRecording,\n        disabled: status === \"recording\",\n        children: \"Start recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: stopRecording,\n        disabled: status !== \"recording\",\n        children: \"Stop recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      srcBlob: mediaBlob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ScreenRecord, \"H2XcWVZNNSpf/hiz+fcr/SsD0FA=\", false, function () {\n  return [useMediaRecorder];\n});\n\n_c2 = ScreenRecord;\nexport default ScreenRecord;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Player\");\n$RefreshReg$(_c2, \"ScreenRecord\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/coursesAndSeances/ScreenRecord.js"],"names":["React","useMediaRecorder","Player","srcBlob","audio","URL","createObjectURL","ScreenRecord","error","status","mediaBlob","stopRecording","getMediaStream","startRecording","recordScreen","blobOptions","type","mediaStreamConstraints","video","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAhB,EAAoC;AAClC,MAAI,CAACD,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAO,MAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBH,OAApB,CAAZ;AAA0C,MAAA,QAAQ;AAAlD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AACE,IAAA,GAAG,EAAEE,GAAG,CAACC,eAAJ,CAAoBH,OAApB,CADP;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAjBQD,M;;AAmBT,SAASK,YAAT,GAAwB;AAAA;;AACtB,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA,MAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,aAJE;AAKFC,IAAAA,cALE;AAMFC,IAAAA;AANE,MAOAZ,gBAAgB,CAAC;AACnBa,IAAAA,YAAY,EAAE,IADK;AAEnBC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAFM;AAGnBC,IAAAA,sBAAsB,EAAE;AAAEb,MAAAA,KAAK,EAAE,IAAT;AAAec,MAAAA,KAAK,EAAE;AAAtB;AAHL,GAAD,CAPpB;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGV,KAAK,GAAI,GAAEC,MAAO,IAAGD,KAAK,CAACW,OAAQ,EAA9B,GAAkCV,MAF1C,eAGE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEG,cAFX;AAGE,QAAA,QAAQ,EAAEH,MAAM,KAAK,OAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEI,cAFX;AAGE,QAAA,QAAQ,EAAEJ,MAAM,KAAK,WAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEE,aAFX;AAGE,QAAA,QAAQ,EAAEF,MAAM,KAAK,WAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eA2BE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC;AAAjB;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA7CQH,Y;UAQHN,gB;;;MARGM,Y;AA+CT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport useMediaRecorder from \"@wmik/use-media-recorder\";\r\n\r\nfunction Player({ srcBlob, audio }) {\r\n  if (!srcBlob) {\r\n    return null;\r\n  }\r\n\r\n  if (audio) {\r\n    return <audio src={URL.createObjectURL(srcBlob)} controls />;\r\n  }\r\n\r\n  return (\r\n    <video\r\n      src={URL.createObjectURL(srcBlob)}\r\n      width={520}\r\n      height={480}\r\n      controls\r\n    />\r\n  );\r\n}\r\n\r\nfunction ScreenRecord() {\r\n  let {\r\n    error,\r\n    status,\r\n    mediaBlob,\r\n    stopRecording,\r\n    getMediaStream,\r\n    startRecording,\r\n  } = useMediaRecorder({\r\n    recordScreen: true,\r\n    blobOptions: { type: \"video/webm\" },\r\n    mediaStreamConstraints: { audio: true, video: true },\r\n  });\r\n\r\n  return (\r\n    <article>\r\n      <h1>Screen recorder</h1>\r\n      {error ? `${status} ${error.message}` : status}\r\n      <section>\r\n        <button\r\n          type=\"button\"\r\n          onClick={getMediaStream}\r\n          disabled={status === \"ready\"}\r\n        >\r\n          Share screen\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={startRecording}\r\n          disabled={status === \"recording\"}\r\n        >\r\n          Start recording\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={stopRecording}\r\n          disabled={status !== \"recording\"}\r\n        >\r\n          Stop recording\r\n        </button>\r\n      </section>\r\n\r\n      <Player srcBlob={mediaBlob} />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default ScreenRecord;\r\n"]},"metadata":{},"sourceType":"module"}