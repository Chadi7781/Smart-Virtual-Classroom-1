{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { getList, updateSeance, addSeance } from \"../../api/SeanceApi\";\nexport const RetrieveSeances = createAsyncThunk(\"/Seance\", async () => {\n  const {\n    data\n  } = await axios.get(\"https://closer-server.herokuapp.com/seance\");\n  return data;\n});\nexport const AddSeance = createAsyncThunk(\"Seance/AddSeance\", async seance => {\n  const promise = await axios.post(\"https://closer-server.herokuapp.com/seance/\", seance).then(response => {\n    console.log(\"this is response\");\n    console.log(response);\n    console.log(\"this is data\");\n    console.log(response.data); //console.log(response);\n\n    const data = response.data; // assign data\n\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const GetSeancesById = createAsyncThunk(\"Seance/GetSeancesById\", async seanceId => {\n  const promise = await axios.get(\"https://closer-server.herokuapp.com/seance/\" + seanceId).then(response => {\n    console.log(\"this is response\");\n    console.log(response);\n    console.log(\"this is data\");\n    console.log(response.data); //console.log(response);\n\n    const data = response.data; // assign data\n\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const GetSeancesByIdClass = createAsyncThunk(\"Seance/GetSeancesByIdClass\", async idClass => {\n  const promise = await axios.get(\"https://closer-server.herokuapp.com/seance/findByIdClass/\" + idClass).then(response => {\n    console.log(\"this is response\");\n    console.log(response);\n    console.log(\"this is data\");\n    console.log(response.data); //console.log(response);\n\n    const data = response.data; // assign data\n\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const EditSeances = createAsyncThunk(\"Seance/EditSeances\", async seance => {\n  //console.log(seanceId);\n  const promise = await axios.put(\"https://closer-server.herokuapp.com/seance/\" + seance._id, seance).then(response => {\n    console.log(\"this is response\");\n    console.log(response);\n    console.log(\"this is data\");\n    console.log(response.data); //console.log(response);\n\n    const data = response.data; // assign data\n\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const DeleteSeance = createAsyncThunk(\"Seance/DeleteSeance\", async seanceId => {\n  const promise = await axios.delete(\"https://closer-server.herokuapp.com/seance/\" + seanceId).then(response => {\n    console.log(\"this is response\");\n    console.log(response);\n    console.log(\"this is data\");\n    console.log(response.data); //console.log(response);\n\n    const data = response.data; // assign data\n\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const SeanceSlice = createSlice({\n  name: \"Seance\",\n  initialState: {\n    seance: [],\n    status: null,\n    statusUpdate: null,\n    seanceById: null\n  },\n  extraReducers: {\n    [RetrieveSeances.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [RetrieveSeances.fulfilled]: (state, {\n      payload\n    }) => {\n      state.seance = payload;\n      state.status = \"success\";\n    },\n    [RetrieveSeances.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [AddSeance.fulfilled]: (state, action) => {\n      state.seance.push(action.payload.result);\n    },\n    [GetSeancesById.fulfilled]: (state, action) => {\n      state.seanceById = action.payload;\n    },\n    [GetSeancesByIdClass.fulfilled]: (state, action) => {\n      state.seance = action.payload;\n    },\n    [DeleteSeance.fulfilled]: (state, action) => {\n      state.seance = state.seance.filter(u => {\n        return u._id !== action.payload.result._id;\n      });\n    },\n    [EditSeances.fulfilled]: (state, action) => {\n      state.statusUpdate = \"success\";\n      let seance = action.payload.result;\n      let seances = state.seance.slice();\n\n      for (let i = 0, n = seances.length; i < n; i++) {\n        if (seances[i]._id === seance._id) {\n          seances[i].idCour = seance.idCour;\n          seances[i].titre = seance.titre;\n          seances[i].description = seance.description;\n          break; // Stop this loop, we found it!\n        }\n      }\n\n      state.seance = seances;\n    } // AddSeance: (state, action) => {\n    //   state.seance.push(action.payload);\n    // },\n    // GetSeancesById: (state, action) => {\n    //   state.seanceById = action.payload;\n    // },\n    // DeleteSeance: (state, action) => {\n    //   let seance = action.payload;\n    //   let seances = state.seance.slice();\n    //   seances = seances.filter((u) => {\n    //     return u._id !== seance._id;\n    //   });\n    //   state.seances = seances;\n    // },\n    // EditSeances: (state, action) => {\n    //   let seance = action.payload;\n    //   let seances = state.seance.slice();\n    //   for (let i = 0, n = seances.length; i < n; i++) {\n    //     if (seances[i]._id === seance._id) {\n    //       seances[i].idCour = seance.idCour;\n    //       seances[i].titre = seance.titre;\n    //       seances[i].description = seance.description;\n    //       break; // Stop this loop, we found it!\n    //     }\n    //   }\n    //   state.seance = seances;\n    // },\n\n  }\n});\nexport default SeanceSlice.reducer;","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/redux/slices/Seance.js"],"names":["createAsyncThunk","createSlice","axios","getList","updateSeance","addSeance","RetrieveSeances","data","get","AddSeance","seance","promise","post","then","response","console","log","GetSeancesById","seanceId","GetSeancesByIdClass","idClass","EditSeances","put","_id","DeleteSeance","delete","SeanceSlice","name","initialState","status","statusUpdate","seanceById","extraReducers","pending","state","action","fulfilled","payload","rejected","push","result","filter","u","seances","slice","i","n","length","idCour","titre","description","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { getList, updateSeance, addSeance } from \"../../api/SeanceApi\";\r\n\r\nexport const RetrieveSeances = createAsyncThunk(\"/Seance\", async () => {\r\n  const { data } = await axios.get(\r\n    \"https://closer-server.herokuapp.com/seance\"\r\n  );\r\n\r\n  return data;\r\n});\r\n\r\nexport const AddSeance = createAsyncThunk(\r\n  \"Seance/AddSeance\",\r\n  async (seance) => {\r\n    const promise = await axios\r\n      .post(\"https://closer-server.herokuapp.com/seance/\", seance)\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const GetSeancesById = createAsyncThunk(\r\n  \"Seance/GetSeancesById\",\r\n  async (seanceId) => {\r\n    const promise = await axios\r\n      .get(\"https://closer-server.herokuapp.com/seance/\" + seanceId)\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const GetSeancesByIdClass = createAsyncThunk(\r\n  \"Seance/GetSeancesByIdClass\",\r\n  async (idClass) => {\r\n    const promise = await axios\r\n      .get(\r\n        \"https://closer-server.herokuapp.com/seance/findByIdClass/\" + idClass\r\n      )\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const EditSeances = createAsyncThunk(\r\n  \"Seance/EditSeances\",\r\n  async (seance) => {\r\n    //console.log(seanceId);\r\n\r\n    const promise = await axios\r\n      .put(\"https://closer-server.herokuapp.com/seance/\" + seance._id, seance)\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const DeleteSeance = createAsyncThunk(\r\n  \"Seance/DeleteSeance\",\r\n\r\n  async (seanceId) => {\r\n    const promise = await axios\r\n      .delete(\"https://closer-server.herokuapp.com/seance/\" + seanceId)\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const SeanceSlice = createSlice({\r\n  name: \"Seance\",\r\n  initialState: {\r\n    seance: [],\r\n    status: null,\r\n    statusUpdate: null,\r\n    seanceById: null,\r\n  },\r\n  extraReducers: {\r\n    [RetrieveSeances.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [RetrieveSeances.fulfilled]: (state, { payload }) => {\r\n      state.seance = payload;\r\n      state.status = \"success\";\r\n    },\r\n    [RetrieveSeances.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [AddSeance.fulfilled]: (state, action) => {\r\n      state.seance.push(action.payload.result);\r\n    },\r\n    [GetSeancesById.fulfilled]: (state, action) => {\r\n      state.seanceById = action.payload;\r\n    },\r\n    [GetSeancesByIdClass.fulfilled]: (state, action) => {\r\n      state.seance = action.payload;\r\n    },\r\n    [DeleteSeance.fulfilled]: (state, action) => {\r\n      state.seance = state.seance.filter((u) => {\r\n        return u._id !== action.payload.result._id;\r\n      });\r\n    },\r\n    [EditSeances.fulfilled]: (state, action) => {\r\n      state.statusUpdate = \"success\";\r\n      let seance = action.payload.result;\r\n      let seances = state.seance.slice();\r\n      for (let i = 0, n = seances.length; i < n; i++) {\r\n        if (seances[i]._id === seance._id) {\r\n          seances[i].idCour = seance.idCour;\r\n          seances[i].titre = seance.titre;\r\n          seances[i].description = seance.description;\r\n\r\n          break; // Stop this loop, we found it!\r\n        }\r\n      }\r\n      state.seance = seances;\r\n    },\r\n\r\n    // AddSeance: (state, action) => {\r\n    //   state.seance.push(action.payload);\r\n    // },\r\n    // GetSeancesById: (state, action) => {\r\n    //   state.seanceById = action.payload;\r\n    // },\r\n    // DeleteSeance: (state, action) => {\r\n    //   let seance = action.payload;\r\n    //   let seances = state.seance.slice();\r\n    //   seances = seances.filter((u) => {\r\n    //     return u._id !== seance._id;\r\n    //   });\r\n    //   state.seances = seances;\r\n    // },\r\n    // EditSeances: (state, action) => {\r\n    //   let seance = action.payload;\r\n    //   let seances = state.seance.slice();\r\n    //   for (let i = 0, n = seances.length; i < n; i++) {\r\n    //     if (seances[i]._id === seance._id) {\r\n    //       seances[i].idCour = seance.idCour;\r\n    //       seances[i].titre = seance.titre;\r\n    //       seances[i].description = seance.description;\r\n\r\n    //       break; // Stop this loop, we found it!\r\n    //     }\r\n    //   }\r\n    //   state.seance = seances;\r\n    // },\r\n  },\r\n});\r\n\r\nexport default SeanceSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}