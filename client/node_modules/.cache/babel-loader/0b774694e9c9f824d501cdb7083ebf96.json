{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\ModalTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Dropdown, Feed, Grid, Header, Icon, Image, List, Modal } from \"semantic-ui-react\";\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { DeleteResources, UpdateResources, uploadFile } from \"../../redux/slices/Task\";\nimport { UpdateProfilePicture } from \"../../redux/slices/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalTask(props) {\n  _s();\n\n  const Resources = useSelector(state => state.tasks.files);\n  const [open, setOpen] = React.useState(false);\n  const [picture, setPicture] = React.useState([]);\n  const dispatch = useDispatch();\n\n  const updateImages = newImages => {\n    if (newImages === null) {\n      qes.Filee.forEach(element => {\n        setImages(element);\n      });\n    } else {\n      alert(\"hi\");\n      setUp(1);\n      setImages(newImages);\n    }\n  };\n\n  const closeModel = () => {\n    setOpen(false);\n  };\n\n  const handleChangeStatus = async ({\n    meta,\n    file\n  }, status) => {\n    // console.log(status, meta, file);\n    if (status === \"done\") {\n      //setPicture(picture.concat(file))\n      var formData = new FormData();\n      formData.append(\"listQuestion\", file);\n      dispatch(uploadFile(formData)); //  console.log(file);\n    }\n  };\n\n  const handleRemoveUpload = (e, res) => {\n    // console.log(res);\n    dispatch(DeleteResources(res)); //  console.log(\"Trigger remove photo\");\n    //console.log(Resources);\n  };\n\n  const Preview = ({\n    meta\n  }) => {\n    const {\n      name,\n      percent,\n      status\n    } = meta;\n    return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui two buttons\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"cloud upload\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"cloud upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), \"upload File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Select a Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: /*#__PURE__*/_jsxDEV(FileUploadEdit, {\n            refreshFunction: updateImages,\n            listfile: qes.Filee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Discard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Yep, Save\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: closeModel,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalTask, \"Ag1Q0WtiujvvIDwaodk4wBERwvE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ModalTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/ModalTask.js"],"names":["axios","React","Dropzone","useDispatch","useSelector","Button","Dropdown","Feed","Grid","Header","Icon","Image","List","Modal","FileUploadEdit","isAuth","DeleteResources","UpdateResources","uploadFile","UpdateProfilePicture","ModalTask","props","Resources","state","tasks","files","open","setOpen","useState","picture","setPicture","dispatch","updateImages","newImages","qes","Filee","forEach","element","setImages","alert","setUp","closeModel","handleChangeStatus","meta","file","status","formData","FormData","append","handleRemoveUpload","e","res","Preview","name","percent"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Dropdown,\n  Feed,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Modal,\n} from \"semantic-ui-react\";\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { DeleteResources, UpdateResources, uploadFile } from \"../../redux/slices/Task\";\nimport { UpdateProfilePicture } from \"../../redux/slices/User\";\n\nexport default function ModalTask(props) {\n  const Resources = useSelector((state) => state.tasks.files);\n\n  const [open, setOpen] = React.useState(false);\n  const [picture, setPicture] = React.useState([]);\n  const dispatch = useDispatch();\n\n  const updateImages = (newImages) => {\n    if (newImages === null) {\n      qes.Filee.forEach((element) => {\n        setImages(element);\n      });\n    } else {\n      alert(\"hi\")\n      setUp(1);\n      setImages(newImages);\n    }\n  };\n  const closeModel = () => {\n  \n   \n   \n    setOpen(false);\n  };\n  const handleChangeStatus = async ({ meta, file }, status) => {\n   // console.log(status, meta, file);\n\nif(status === \"done\") {\n//setPicture(picture.concat(file))\nvar formData = new FormData();\n\nformData.append(\"listQuestion\", file);\n\n  \n      dispatch(uploadFile(formData));\n  \n       \n     //  console.log(file);\n \n      }\n      \n  };\n\n  const handleRemoveUpload = (e, res) => {\n   \n\n   // console.log(res);\n    dispatch(DeleteResources(res));\n  //  console.log(\"Trigger remove photo\");\n    //console.log(Resources);\n  };\n\n  const Preview = ({ meta }) => {\n    const { name, percent, status } = meta;\n    return <span></span>;\n  };\n\n\n  return (\n    <div>\n     \n\n    \n<Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={\n          <div className='ui two buttons'>\n          <Button \n          icon=\"cloud upload\"\n          >\n            <Icon name=\"cloud upload\"></Icon>\n              upload File\n            </Button>\n            </div>\n         \n        }\n      >\n        <Modal.Header>Select a Photo</Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            \n          <FileUploadEdit\n            refreshFunction={updateImages}\n            listfile={qes.Filee}  \n          />\n\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => setOpen(false)}>\n            Discard\n          </Button>\n          <Button\n            content=\"Yep, Save\"\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            onClick={closeModel}\n            color=\"red\"\n          />\n        </Modal.Actions>\n      </Modal>\n   \n      \n\n\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}