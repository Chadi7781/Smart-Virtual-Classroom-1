{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const rendreTask = createAsyncThunk(\"Task/rendreTask\", async grade => {\n  const {\n    response\n  } = await axios.put(`http://localhost:5000/grade/rendreTask/${grade.id}`, grade);\n  return response;\n});\nexport const getDetailByTaskByStudent = createAsyncThunk(\"Grade/getDetailByTaskByStudent\", async id => {\n  const promise = await axios.get(`http://localhost:5000/grade/DetailByTaskByStudent/${id}`).then(response => {\n    const data = response.data;\n    console.log(data);\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const getListQuestionTasksById = createAsyncThunk(\"Grade/getListQuestionById\", async id => {\n  const {\n    data\n  } = await axios.get(`http://localhost:5000/grade/listQuestion/${id}`);\n  return data;\n});\nexport const assignGradeToStudent = createAsyncThunk(\"Task/UpdateTask\", async grade => {\n  const promise = await axios.put(`http://localhost:5000/grade/`, grade).then(response => {\n    const data = response.data;\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const getTasksById = createAsyncThunk(\"Grade/getTasksById\", async taskDetail => {\n  const promise = await axios.get(`http://localhost:5000/grade?idUser=${taskDetail.idUser}&idClass=${taskDetail.idClass}`).then(response => {\n    const data = response.data;\n    return data;\n  });\n  const data = await promise;\n  return data;\n});\nexport const getGrades = createAsyncThunk(\"Grade/getgrade\", async () => {\n  const {\n    data\n  } = await axios.get(\"http://localhost:5000/grade\");\n  return data;\n});\nexport const postGrades = createAsyncThunk(\"Grade/posteGrade\", async grade => {\n  const {\n    response\n  } = await axios.post(\"http://localhost:5000/grade\", grade);\n  return response.data;\n});\nexport const gradeSlice = createSlice({\n  name: \"Grade\",\n  initialState: {\n    grades: [],\n    listQuestion: [],\n    grade: {},\n    status: null\n  },\n  extraReducers: {\n    [rendreTask.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [rendreTask.fulfilled]: (state, action) => {\n      state.grades = action.payload;\n    },\n    [rendreTask.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getGrades.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getGrades.fulfilled]: (state, {\n      payload\n    }) => {\n      state.grades = payload;\n      state.status = \"success\";\n    },\n    [getGrades.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getTasksById.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getTasksById.fulfilled]: (state, action) => {\n      state.grades = action.payload;\n      state.status = \"success\";\n    },\n    [getTasksById.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    postGrades: (state, action) => {\n      state.grades.push(action.payload);\n    },\n    [assignGradeToStudent.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [assignGradeToStudent.fulfilled]: (state, action) => {\n      const payload = action.payload;\n      const index = state.grades.findIndex(item => item._id === payload._id);\n\n      if (index !== -1) {\n        state.grades[index] = payload;\n        state.status = \"success\";\n      }\n    },\n    [assignGradeToStudent.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getListQuestionTasksById.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getListQuestionTasksById.fulfilled]: (state, action) => {\n      //console.log(action.payload);\n      state.listQuestion = action.payload[0].task.listQuestion;\n    },\n    [getListQuestionTasksById.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [getDetailByTaskByStudent.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDetailByTaskByStudent.fulfilled]: (state, action) => {\n      console.log(action.payload);\n      state.grade = action.payload;\n      state.status = \"success\";\n    },\n    [getDetailByTaskByStudent.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nexport default gradeSlice.reducer;","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/redux/slices/Grade.js"],"names":["createAsyncThunk","createSlice","axios","rendreTask","grade","response","put","id","getDetailByTaskByStudent","promise","get","then","data","console","log","getListQuestionTasksById","assignGradeToStudent","getTasksById","taskDetail","idUser","idClass","getGrades","postGrades","post","gradeSlice","name","initialState","grades","listQuestion","status","extraReducers","pending","state","action","fulfilled","payload","rejected","push","index","findIndex","item","_id","task","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const rendreTask = createAsyncThunk(\"Task/rendreTask\", async (grade) => {\r\n  const { response } = await axios.put(\r\n    `http://localhost:5000/grade/rendreTask/${grade.id}`,\r\n    grade\r\n  );\r\n\r\n  return response;\r\n});\r\nexport const getDetailByTaskByStudent = createAsyncThunk(\r\n  \"Grade/getDetailByTaskByStudent\",\r\n  async (id) => {\r\n    const promise = await axios.get(\r\n      `http://localhost:5000/grade/DetailByTaskByStudent/${id}`\r\n    ).then((response) => {\r\n\r\n      const data = response.data;\r\n      console.log(data);\r\n      return data;\r\n    });\r\n  \r\n  const data = await promise;\r\n  return data;\r\n  }\r\n);\r\nexport const getListQuestionTasksById = createAsyncThunk(\r\n  \"Grade/getListQuestionById\",\r\n  async (id) => {\r\n    const { data } = await axios.get(\r\n      `http://localhost:5000/grade/listQuestion/${id}`\r\n    );\r\n\r\n    return data;\r\n  }\r\n);\r\nexport const assignGradeToStudent = createAsyncThunk(\r\n  \"Task/UpdateTask\",\r\n  async (grade) => {\r\n    const promise = await axios.put(\r\n      `http://localhost:5000/grade/`,\r\n      grade\r\n    ).then((response) => {\r\n      const data = response.data;\r\n      return data;\r\n    });\r\n  \r\n  const data = await promise;\r\n  return data;\r\n  }\r\n);\r\nexport const getTasksById = createAsyncThunk(\r\n  \"Grade/getTasksById\",\r\n  async (taskDetail) => {\r\n    const promise = await axios.get(\r\n      `http://localhost:5000/grade?idUser=${taskDetail.idUser}&idClass=${taskDetail.idClass}`\r\n    ).then((response) => {\r\n      const data = response.data;\r\n      return data;\r\n    });\r\n  \r\n  const data = await promise;\r\n  return data;\r\n  }\r\n);\r\n\r\nexport const getGrades = createAsyncThunk(\"Grade/getgrade\", async () => {\r\n  const { data } = await axios.get(\"http://localhost:5000/grade\");\r\n\r\n  return data;\r\n});\r\n\r\nexport const postGrades = createAsyncThunk(\r\n  \"Grade/posteGrade\",\r\n  async (grade) => {\r\n    const { response } = await axios.post(\r\n      \"http://localhost:5000/grade\",\r\n      grade\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const gradeSlice = createSlice({\r\n  name: \"Grade\",\r\n  initialState: {\r\n    grades: [],\r\n    listQuestion: [],\r\n      grade : {},\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [rendreTask.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [rendreTask.fulfilled]: (state, action) => {\r\n      state.grades = action.payload;\r\n    },\r\n    [rendreTask.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [getGrades.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getGrades.fulfilled]: (state, { payload }) => {\r\n      state.grades = payload;\r\n      state.status = \"success\";\r\n    },\r\n    [getGrades.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [getTasksById.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getTasksById.fulfilled]: (state, action) => {\r\n      state.grades = action.payload;\r\n      state.status = \"success\";\r\n    },\r\n    [getTasksById.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n\r\n    postGrades: (state, action) => {\r\n      state.grades.push(action.payload);\r\n    },\r\n    [assignGradeToStudent.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [assignGradeToStudent.fulfilled]: (state,  action) => {\r\n      const payload = action.payload;\r\n      const index = state.grades.findIndex(\r\n        (item) => item._id === payload._id\r\n      );\r\n      if (index !== -1) {\r\n        state.grades[index] = payload;\r\n        state.status = \"success\";\r\n      }\r\n    },\r\n    [assignGradeToStudent.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [getListQuestionTasksById.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getListQuestionTasksById.fulfilled]: (state, action) => {\r\n      //console.log(action.payload);\r\n      state.listQuestion = action.payload[0].task.listQuestion;\r\n    },\r\n    [getListQuestionTasksById.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [getDetailByTaskByStudent.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getDetailByTaskByStudent.fulfilled]: (state, action) => {\r\n      console.log( action.payload);\r\n      state.grade = action.payload;\r\n      state.status = \"success\";\r\n    },\r\n    [getDetailByTaskByStudent.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default gradeSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}