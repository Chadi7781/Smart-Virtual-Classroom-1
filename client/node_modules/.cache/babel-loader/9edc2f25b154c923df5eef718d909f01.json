{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Quiz\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Icon, Image, Button, Form, Segment, Progress, Container, Header, Divider, Modal } from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth.js\";\nimport { getListQuestionTasksById, assignGradeToStudent, getDetailByTaskByStudent } from \"../../redux/slices/Grade.js\";\nimport { getQuizzes } from \"../../redux/slices/Quiz.js\";\nimport EndQuiz from \"./EndQuiz.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const quizzes = useSelector(state => state.grades.listQuestion); //const task = useSelector((state) => state.grades.grades)\n\n  const [objgrade, setObjGrade] = useState({\n    _id: null,\n    grade: 0,\n    listReponse: []\n  });\n  const [score, setScore] = useState(0);\n  const [cuurQuestion, setCurrQuestion] = useState(0);\n  const [optionChosen, setOptionChosen] = useState(\"\");\n  const [listReponse] = useState([]);\n\n  const nextQuestion = () => {\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) {\n      setScore(score + parseInt(quizzes[cuurQuestion].fpoint));\n    }\n\n    setCurrQuestion(cuurQuestion + 1);\n    listReponse.push(optionChosen);\n    setOptionChosen(\"\");\n  };\n\n  const dispatch = useDispatch();\n\n  const handleResult = () => {\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) {\n      listReponse.push(optionChosen);\n      dispatch(assignGradeToStudent({\n        _id: id,\n        grade: score + parseInt(quizzes[cuurQuestion].fpoint),\n        listReponse: listReponse\n      })).then(() => {\n        dispatch(getDetailByTaskByStudent(id));\n      });\n    } else {\n      listReponse.push(optionChosen);\n      dispatch(assignGradeToStudent({\n        _id: id,\n        grade: score,\n        listReponse: listReponse\n      })).then(() => {\n        dispatch(getDetailByTaskByStudent(id));\n      });\n    }\n\n    dispatch(getDetailByTaskByStudent(id));\n    setOpen(false);\n  };\n\n  const handleChosen = option => {\n    setOptionChosen(optionChosen != option ? option : \"\");\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    // dispatch(getQuizzes());\n    dispatch(getDetailByTaskByStudent(id));\n    dispatch(getListQuestionTasksById(id));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      raised: true,\n      children: [/*#__PURE__*/_jsxDEV(Progress, {\n        active: true,\n        color: \"red\",\n        percent: (1 + cuurQuestion) * 100 / quizzes.length,\n        attached: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), quizzes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", quizzes[cuurQuestion].fquestion + \"?\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", cuurQuestion + 1, \" of \", quizzes.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          section: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionA,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionA),\n          children: quizzes[cuurQuestion].foptionA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionB,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionB),\n          children: quizzes[cuurQuestion].foptionB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionC,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionC),\n          children: quizzes[cuurQuestion].foptionC\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionD,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionD),\n          children: quizzes[cuurQuestion].foptionD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          section: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), cuurQuestion == quizzes.length - 1 ? /*#__PURE__*/_jsxDEV(Modal, {\n          open: open,\n          trigger: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleOpen(),\n            content: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this),\n          dimmer: \"inverted\",\n          size: \"tiny\",\n          closeIcon: \"close\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            children: \"End Quiz !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"sure ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Result/\" + id,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"black\",\n                onClick: () => handleResult(),\n                children: \"View Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => nextQuestion(),\n              disabled: !optionChosen,\n              content: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Segment, {\n        loading: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No Qts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        active: true,\n        color: \"red\",\n        percent: (1 + cuurQuestion) * 100 / quizzes.length,\n        attached: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"baCsYLwPRS+veKZwn63EwqLmFVw=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Quiz/Quiz.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","Link","Icon","Image","Button","Form","Segment","Progress","Container","Header","Divider","Modal","isAuth","getListQuestionTasksById","assignGradeToStudent","getDetailByTaskByStudent","getQuizzes","EndQuiz","Quiz","props","id","quizzes","state","grades","listQuestion","objgrade","setObjGrade","_id","grade","listReponse","score","setScore","cuurQuestion","setCurrQuestion","optionChosen","setOptionChosen","nextQuestion","correct_answer","parseInt","fpoint","push","dispatch","handleResult","then","setOpen","handleChosen","option","open","handleOpen","length","fquestion","foptionA","foptionB","foptionC","foptionD"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,MARF,EASEC,OATF,EAUEC,KAVF,QAWO,mBAXP;AAYA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SACEC,wBADF,EAEEC,oBAFF,EAGEC,wBAHF,QAIO,6BAJP;AAKA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,OAAP,MAAoB,cAApB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAASpB,SAAS,EAAxB;AACA,QAAMqB,OAAO,GAAGtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,YAAzB,CAA3B,CAFkC,CAGlC;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC;AACvC+B,IAAAA,GAAG,EAAE,IADkC;AAEvCC,IAAAA,KAAK,EAAE,CAFgC;AAGvCC,IAAAA,WAAW,EAAE;AAH0B,GAAD,CAAxC;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACoC,YAAD,EAAeC,eAAf,IAAkCrC,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACsC,YAAD,EAAeC,eAAf,IAAkCvC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiC,WAAD,IAAgBjC,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMwC,YAAY,GAAG,MAAM;AACzB,QAAIF,YAAY,KAAKb,OAAO,CAACW,YAAD,CAAP,CAAsBK,cAA3C,EAA0D;AAC1DN,MAAAA,QAAQ,CAACD,KAAK,GAAGQ,QAAQ,CAACjB,OAAO,CAACW,YAAD,CAAP,CAAsBO,MAAvB,CAAjB,CAAR;AACC;;AACDN,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACAH,IAAAA,WAAW,CAACW,IAAZ,CAAiBN,YAAjB;AAEAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GARD;;AAUA,QAAMM,QAAQ,GAAG3C,WAAW,EAA5B;;AACA,QAAM4C,YAAY,GAAG,MAAM;AACzB,QAAIR,YAAY,KAAKb,OAAO,CAACW,YAAD,CAAP,CAAsBK,cAA3C,EAA2D;AACzDR,MAAAA,WAAW,CAACW,IAAZ,CAAiBN,YAAjB;AAEAO,MAAAA,QAAQ,CACN3B,oBAAoB,CAAC;AAAEa,QAAAA,GAAG,EAAEP,EAAP;AAAWQ,QAAAA,KAAK,EAAEE,KAAK,GAAGQ,QAAQ,CAACjB,OAAO,CAACW,YAAD,CAAP,CAAsBO,MAAvB,CAAlC;AAAkEV,QAAAA,WAAW,EAAEA;AAA/E,OAAD,CADd,CAAR,CACsHc,IADtH,CAC2H,MAAI;AAC3HF,QAAAA,QAAQ,CAAC1B,wBAAwB,CAACK,EAAD,CAAzB,CAAR;AACD,OAHH;AAID,KAPD,MAOK;AACHS,MAAAA,WAAW,CAACW,IAAZ,CAAiBN,YAAjB;AAEAO,MAAAA,QAAQ,CACN3B,oBAAoB,CAAC;AAAEa,QAAAA,GAAG,EAAEP,EAAP;AAAWQ,QAAAA,KAAK,EAAEE,KAAlB;AAA0BD,QAAAA,WAAW,EAAEA;AAAvC,OAAD,CADd,CAAR,CAC8Ec,IAD9E,CACmF,MAAI;AACnFF,QAAAA,QAAQ,CAAC1B,wBAAwB,CAACK,EAAD,CAAzB,CAAR;AACD,OAHH;AAID;;AACDqB,IAAAA,QAAQ,CAAC1B,wBAAwB,CAACK,EAAD,CAAzB,CAAR;AAEAwB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAnBD;;AAoBA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/BX,IAAAA,eAAe,CAACD,YAAY,IAAIY,MAAhB,GAAyBA,MAAzB,GAAkC,EAAnC,CAAf;AACD,GAFD;;AAGA,QAAM,CAACC,IAAD,EAAQH,OAAR,IAAmBhD,QAAQ,CAAC,KAAD,CAAjC;;AACA,QAAMoD,UAAU,GAAG,MAAM;AACxBJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,GAFD;;AAGA/C,EAAAA,SAAS,CAAC,MAAM;AACd;AACA4C,IAAAA,QAAQ,CAAC1B,wBAAwB,CAACK,EAAD,CAAzB,CAAR;AACAqB,IAAAA,QAAQ,CAAC5B,wBAAwB,CAACO,EAAD,CAAzB,CAAR;AACD,GAJQ,EAIN,CAACA,EAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,MAAM,MADR;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,OAAO,EAAG,CAAC,IAAIY,YAAL,IAAqB,GAAtB,GAA6BX,OAAO,CAAC4B,MAHhD;AAIE,QAAA,QAAQ,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,cADF,EAQG5B,OAAO,CAAC4B,MAAR,GAAiB,CAAjB,gBACC;AAAA,gCACE;AAAA,0BAAM5B,OAAO,CAACW,YAAD,CAAP,CAAsBkB,SAAtB,GAAkC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACYlB,YAAY,GAAG,CAD3B,UACkCX,OAAO,CAAC4B,MAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,OAAD;AAAS,UAAA,OAAO;AAAhB;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,KAAK,EAAEf,YAAY,IAAIb,OAAO,CAACW,YAAD,CAAP,CAAsBmB,QAH/C;AAIE,UAAA,KAAK,EAAC,MAJR;AAKE,UAAA,OAAO,EAAE,MAAMN,YAAY,CAACxB,OAAO,CAACW,YAAD,CAAP,CAAsBmB,QAAvB,CAL7B;AAAA,oBAOG9B,OAAO,CAACW,YAAD,CAAP,CAAsBmB;AAPzB;AAAA;AAAA;AAAA;AAAA,gBAPF,eAgBE,QAAC,OAAD;AAAS,UAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,KAAK,EAAEjB,YAAY,IAAIb,OAAO,CAACW,YAAD,CAAP,CAAsBoB,QAH/C;AAIE,UAAA,KAAK,EAAC,MAJR;AAKE,UAAA,OAAO,EAAE,MAAMP,YAAY,CAACxB,OAAO,CAACW,YAAD,CAAP,CAAsBoB,QAAvB,CAL7B;AAAA,oBAOG/B,OAAO,CAACW,YAAD,CAAP,CAAsBoB;AAPzB;AAAA;AAAA;AAAA;AAAA,gBAlBF,eA4BE;AAAA;AAAA;AAAA;AAAA,gBA5BF,eA6BE,QAAC,OAAD;AAAS,UAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,gBA7BF,eA+BE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,KAAK,EAAElB,YAAY,IAAIb,OAAO,CAACW,YAAD,CAAP,CAAsBqB,QAH/C;AAIE,UAAA,KAAK,EAAC,MAJR;AAKE,UAAA,OAAO,EAAE,MAAMR,YAAY,CAACxB,OAAO,CAACW,YAAD,CAAP,CAAsBqB,QAAvB,CAL7B;AAAA,oBAOGhC,OAAO,CAACW,YAAD,CAAP,CAAsBqB;AAPzB;AAAA;AAAA;AAAA;AAAA,gBA/BF,eAwCE,QAAC,OAAD;AAAS,UAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,gBAxCF,eAyCE;AAAA;AAAA;AAAA;AAAA,gBAzCF,eA0CE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,KAAK,EAAEnB,YAAY,IAAIb,OAAO,CAACW,YAAD,CAAP,CAAsBsB,QAH/C;AAIE,UAAA,KAAK,EAAC,MAJR;AAKE,UAAA,OAAO,EAAE,MAAMT,YAAY,CAACxB,OAAO,CAACW,YAAD,CAAP,CAAsBsB,QAAvB,CAL7B;AAAA,oBAOGjC,OAAO,CAACW,YAAD,CAAP,CAAsBsB;AAPzB;AAAA;AAAA;AAAA;AAAA,gBA1CF,eAoDE,QAAC,OAAD;AAAS,UAAA,OAAO;AAAhB;AAAA;AAAA;AAAA;AAAA,gBApDF,EAqDGtB,YAAY,IAAIX,OAAO,CAAC4B,MAAR,GAAiB,CAAjC,gBACC,QAAC,KAAD;AACA,UAAA,IAAI,EAAEF,IADN;AAEA,UAAA,OAAO,eACL,QAAC,MAAD;AAAS,YAAA,OAAO,EAAE,MAAIC,UAAU,EAAhC;AAAoC,YAAA,OAAO,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAHF;AAKA,UAAA,MAAM,EAAC,UALP;AAMA,UAAA,IAAI,EAAC,MANL;AAOA,UAAA,SAAS,EAAC,OAPV;AAAA,kCASA,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATA,eAUA,QAAC,KAAD,CAAO,OAAP;AAAA,mCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,kBAVA,eAeA,QAAC,KAAD,CAAO,OAAP;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE,aAAW5B,EAArB;AAAA,qCACF,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAsB,gBAAA,OAAO,EAAE,MAAIsB,YAAY,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,oBADF,eAMG;AAAA;AAAA;AAAA;AAAA,oBANH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBA2BC;AAAA,iCACE,QAAC,MAAD,CAAQ,KAAR;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAE,MAAMN,YAAY,EAD7B;AAEE,cAAA,QAAQ,EAAE,CAACF,YAFb;AAGE,cAAA,OAAO,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,yBAhFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBA6FC,QAAC,OAAD;AAAS,QAAA,OAAO,MAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EACkB,GADlB;AAAA;AAAA;AAAA;AAAA;AAAA,cArGJ,eA0GE,QAAC,QAAD;AACE,QAAA,MAAM,MADR;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,OAAO,EAAG,CAAC,IAAIF,YAAL,IAAqB,GAAtB,GAA6BX,OAAO,CAAC4B,MAHhD;AAIE,QAAA,QAAQ,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,cA1GF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsHD;;GAhLuB/B,I;UACPlB,S,EACCD,W,EAsBCD,W;;;KAxBKoB,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Icon,\r\n  Image,\r\n  Button,\r\n  Form,\r\n  Segment,\r\n  Progress,\r\n  Container,\r\n  Header,\r\n  Divider,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth } from \"../../helpers/auth.js\";\r\nimport {\r\n  getListQuestionTasksById,\r\n  assignGradeToStudent,\r\n  getDetailByTaskByStudent,\r\n} from \"../../redux/slices/Grade.js\";\r\nimport { getQuizzes } from \"../../redux/slices/Quiz.js\";\r\nimport EndQuiz from \"./EndQuiz.js\";\r\n\r\nexport default function Quiz(props) {\r\n  const { id } = useParams();\r\n  const quizzes = useSelector((state) => state.grades.listQuestion);\r\n  //const task = useSelector((state) => state.grades.grades)\r\n  const [objgrade, setObjGrade] = useState({\r\n    _id: null,\r\n    grade: 0,\r\n    listReponse: [],\r\n  });\r\n  const [score, setScore] = useState(0);\r\n  const [cuurQuestion, setCurrQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n  const [listReponse] = useState([]);\r\n\r\n  const nextQuestion = () => {\r\n    if (optionChosen === quizzes[cuurQuestion].correct_answer){\r\n    setScore(score + parseInt(quizzes[cuurQuestion].fpoint));\r\n    }\r\n    setCurrQuestion(cuurQuestion + 1);\r\n    listReponse.push(optionChosen);\r\n  \r\n    setOptionChosen(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const handleResult = () => {\r\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) {\r\n      listReponse.push(optionChosen);\r\n\r\n      dispatch(\r\n        assignGradeToStudent({ _id: id, grade: score + parseInt(quizzes[cuurQuestion].fpoint), listReponse: listReponse })).then(()=>{\r\n          dispatch(getDetailByTaskByStudent(id));\r\n        })\r\n    }else{\r\n      listReponse.push(optionChosen);\r\n\r\n      dispatch(\r\n        assignGradeToStudent({ _id: id, grade: score , listReponse: listReponse })).then(()=>{\r\n          dispatch(getDetailByTaskByStudent(id));\r\n        })\r\n    }\r\n    dispatch(getDetailByTaskByStudent(id));\r\n  \r\n    setOpen(false);\r\n  };\r\n  const handleChosen = (option) => {\r\n    setOptionChosen(optionChosen != option ? option : \"\");\r\n  };\r\n  const [open , setOpen] = useState(false)\r\n  const handleOpen = () => {\r\n   setOpen(true)\r\n  };\r\n  useEffect(() => {\r\n    // dispatch(getQuizzes());\r\n    dispatch(getDetailByTaskByStudent(id));\r\n    dispatch(getListQuestionTasksById(id));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"Quiz\">\r\n      <Divider hidden />\r\n      <Segment raised>\r\n        <Progress\r\n          active\r\n          color=\"red\"\r\n          percent={((1 + cuurQuestion) * 100) / quizzes.length}\r\n          attached=\"top\"\r\n        />\r\n\r\n        {quizzes.length > 0 ? (\r\n          <div>\r\n            <h1> {quizzes[cuurQuestion].fquestion + \"?\"} </h1>\r\n            <p>\r\n              Question {cuurQuestion + 1} of {quizzes.length}\r\n            </p>\r\n            <Divider section />\r\n\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionA}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionA)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionA}\r\n            </Button>\r\n            <Divider hidden />\r\n            <br />\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionB}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionB)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionB}\r\n            </Button>\r\n\r\n            <br />\r\n            <Divider hidden />\r\n\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionC}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionC)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionC}\r\n            </Button>\r\n            <Divider hidden />\r\n            <br />\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionD}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionD)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionD}\r\n            </Button>\r\n\r\n            <Divider section />\r\n            {cuurQuestion == quizzes.length - 1 ? (\r\n              <Modal\r\n              open={open}\r\n              trigger={\r\n                <Button  onClick={()=>handleOpen()} content=\"save\" />\r\n              }\r\n              dimmer=\"inverted\"\r\n              size=\"tiny\"\r\n              closeIcon=\"close\"\r\n            >\r\n              <Modal.Header>End Quiz !</Modal.Header>\r\n              <Modal.Content>\r\n              \r\n              <p>sure ?</p>\r\n                  \r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Link to={\"/Result/\"+id}>\r\n              <Button color=\"black\" onClick={()=>handleResult()}>\r\n                View Result\r\n              </Button>\r\n              </Link>\r\n                 <br></br>\r\n            \r\n            </Modal.Actions>\r\n            </Modal>\r\n            ) : (\r\n              <>\r\n                <Button.Group>\r\n                  <Button\r\n                    onClick={() => nextQuestion()}\r\n                    disabled={!optionChosen}\r\n                    content=\"Continue\"\r\n                  />\r\n                </Button.Group>\r\n              </>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Segment loading>\r\n            <h1>No Qts</h1>{\" \"}\r\n          </Segment>\r\n        )}\r\n\r\n        <Progress\r\n          active\r\n          color=\"red\"\r\n          percent={((1 + cuurQuestion) * 100) / quizzes.length}\r\n          attached=\"bottom\"\r\n        />\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}