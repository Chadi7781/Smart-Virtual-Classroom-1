{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\coursesAndSeances\\\\DetailCourses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\nimport ScreenRecord from \"./ScreenRecord\";\nimport { Button, Comment, Container, Divider, Form, Grid, Header, Icon, Label } from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { GetCoursesById } from \"../../redux/slices/Courses\";\nimport CommentComponent from \"../Comment/CommentComponent\";\nimport CommentChat from \"./CommentChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DetailCourses() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const ress = useSelector(state => state.courses.Resources);\n  const [titre, setTitre] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [dateCreation, setDateCreation] = useState(Date.now());\n  const [resources, setResources] = useState([]);\n  useEffect(() => {\n    dispatch(GetCoursesById(id)).then(response => {\n      console.log(response);\n      setTitre(response.payload.titre);\n      setDescription(response.payload.description);\n      setDateCreation(response.payload.dateCreation);\n      setResources(response.payload.multiple_resources);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      stackable: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 14,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            as: \"h1\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"file alternate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n              children: [titre, /*#__PURE__*/_jsxDEV(Header.Subheader, {\n                children: /*#__PURE__*/_jsxDEV(ReactTimeAgo, {\n                  date: dateCreation,\n                  locale: \"en-US\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            stackable: true,\n            children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: resources.map((files, index) => files.type === \"application/pdf\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: files.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                      width: 3,\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: process.env.PUBLIC_URL + \"/files-type/\" + \"pdf\" + \".png\",\n                        style: {\n                          margin: \"10px\",\n                          height: \"100px\",\n                          width: \"100px\"\n                        },\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                      width: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                        children: /*#__PURE__*/_jsxDEV(Header, {\n                          as: \"h4\",\n                          color: \"red\",\n                          children: files.originalname.slice(0, 7)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 92,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                        children: /*#__PURE__*/_jsxDEV(Header, {\n                          as: \"h4\",\n                          color: \"grey\",\n                          children: [files.type.slice(0, 7), \" File\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this) : files.type === \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: files.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                      width: 3,\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: process.env.PUBLIC_URL + \"/files-type/\" + \"pptx\" + \".png\",\n                        style: {\n                          margin: \"10px\",\n                          height: \"100px\",\n                          width: \"100px\"\n                        },\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                      width: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                        children: /*#__PURE__*/_jsxDEV(Header, {\n                          as: \"h4\",\n                          color: \"red\",\n                          children: files.originalname.slice(0, 7)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 132,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                        children: /*#__PURE__*/_jsxDEV(Header, {\n                          as: \"h4\",\n                          color: \"grey\",\n                          children: [files.type.slice(0, 7), \" File\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this) : files.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: files.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                      width: 3,\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: process.env.PUBLIC_URL + \"/files-type/\" + \"docx\" + \".png\",\n                        style: {\n                          margin: \"10px\",\n                          height: \"100px\",\n                          width: \"100px\"\n                        },\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                      width: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                        children: /*#__PURE__*/_jsxDEV(Header, {\n                          as: \"h4\",\n                          color: \"red\",\n                          children: files.originalname.slice(0, 7)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                        children: /*#__PURE__*/_jsxDEV(Header, {\n                          as: \"h4\",\n                          color: \"grey\",\n                          children: [files.type.slice(0, 7), \" File\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this) : files.type === \"audio/mpeg\" || files.type === \"video/mp4\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 3,\n                  children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                    width: \"240px\",\n                    height: \"100px\",\n                    controls: true,\n                    url: files.url\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Header, {\n                      as: \"h4\",\n                      color: \"red\",\n                      children: files.originalname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Header, {\n                      as: \"h4\",\n                      color: \"grey\",\n                      children: [files.type.slice(0, 7), \" File\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this) : files.type === \"image/png\" || files.type === \"image/jpg\" || files.type === \"image/jpeg\" || files.type === \"image/gif\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 3,\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: files.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: files.url,\n                      alt: files.originalname,\n                      style: {\n                        margin: \"10px\",\n                        height: \"100px\",\n                        width: \"100px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Header, {\n                      as: \"h4\",\n                      color: \"red\",\n                      children: files.originalname.slice(0, 7)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                    children: /*#__PURE__*/_jsxDEV(Header, {\n                      as: \"h4\",\n                      color: \"grey\",\n                      children: [files.type.slice(0, 7), \" File\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n                href: files.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                    width: 3,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      style: {\n                        margin: \"10px\",\n                        height: \"100px\",\n                        width: \"100px\"\n                      },\n                      src: process.env.PUBLIC_URL + \"/files-type/\" + \"noFile.png\",\n                      alt: files.originalname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                    width: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                      children: /*#__PURE__*/_jsxDEV(Header, {\n                        as: \"h4\",\n                        color: \"red\",\n                        children: files.originalname.slice(0, 7)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                      children: /*#__PURE__*/_jsxDEV(Header, {\n                        as: \"h4\",\n                        color: \"grey\",\n                        children: [files.type.slice(0, 7), \" File\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CommentComponent, {\n            courseID: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailCourses, \"crv3OPwES7z+06D4lRqd2RuIZ3c=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = DetailCourses;\nexport default DetailCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailCourses\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/coursesAndSeances/DetailCourses.js"],"names":["React","useState","useEffect","ReactPlayer","useDispatch","useSelector","useParams","ReactTimeAgo","ScreenRecord","Button","Comment","Container","Divider","Form","Grid","Header","Icon","Label","isAuth","GetCoursesById","CommentComponent","CommentChat","DetailCourses","id","dispatch","ress","state","courses","Resources","titre","setTitre","description","setDescription","dateCreation","setDateCreation","Date","now","resources","setResources","then","response","console","log","payload","multiple_resources","map","files","index","type","url","process","env","PUBLIC_URL","margin","height","width","originalname","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport ScreenRecord from \"./ScreenRecord\";\r\nimport {\r\n  Button,\r\n  Comment,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport { GetCoursesById } from \"../../redux/slices/Courses\";\r\nimport CommentComponent from \"../Comment/CommentComponent\";\r\nimport CommentChat from \"./CommentChat\";\r\n\r\nfunction DetailCourses() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const ress = useSelector((state) => state.courses.Resources);\r\n  const [titre, setTitre] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [dateCreation, setDateCreation] = useState(Date.now());\r\n  const [resources, setResources] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(GetCoursesById(id)).then((response) => {\r\n      console.log(response);\r\n      setTitre(response.payload.titre);\r\n      setDescription(response.payload.description);\r\n      setDateCreation(response.payload.dateCreation);\r\n      setResources(response.payload.multiple_resources);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid stackable>\r\n        <Grid.Row>\r\n          <Grid.Column width={1}></Grid.Column>\r\n          <Grid.Column width={14}>\r\n            <Header as=\"h1\">\r\n              <Icon name=\"file alternate\" />\r\n              <Header.Content>\r\n                {titre}\r\n                <Header.Subheader>\r\n                  <ReactTimeAgo date={dateCreation} locale=\"en-US\" />\r\n                </Header.Subheader>\r\n              </Header.Content>\r\n            </Header>\r\n            <Divider></Divider>\r\n            <br />\r\n            <Container>\r\n              <p>{description}</p>\r\n            </Container>\r\n            <br />\r\n            <Grid stackable>\r\n              <Grid.Row>\r\n                {resources.map((files, index) =>\r\n                  files.type === \"application/pdf\" ? (\r\n                    <div key={index}>\r\n                      <a\r\n                        href={files.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <div>\r\n                          <Grid.Column width={3}>\r\n                            <img\r\n                              src={\r\n                                process.env.PUBLIC_URL +\r\n                                \"/files-type/\" +\r\n                                \"pdf\" +\r\n                                \".png\"\r\n                              }\r\n                              style={{\r\n                                margin: \"10px\",\r\n                                height: \"100px\",\r\n                                width: \"100px\",\r\n                              }}\r\n                              alt=\"\"\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column width={3}>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"red\">\r\n                                {files.originalname.slice(0, 7)}\r\n                              </Header>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"grey\">\r\n                                {files.type.slice(0, 7)} File\r\n                              </Header>\r\n                            </Grid.Row>\r\n                          </Grid.Column>\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  ) : files.type ===\r\n                    \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ? (\r\n                    <div key={index}>\r\n                      <a\r\n                        href={files.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <div>\r\n                          <Grid.Column width={3}>\r\n                            <img\r\n                              src={\r\n                                process.env.PUBLIC_URL +\r\n                                \"/files-type/\" +\r\n                                \"pptx\" +\r\n                                \".png\"\r\n                              }\r\n                              style={{\r\n                                margin: \"10px\",\r\n                                height: \"100px\",\r\n                                width: \"100px\",\r\n                              }}\r\n                              alt=\"\"\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column width={3}>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"red\">\r\n                                {files.originalname.slice(0, 7)}\r\n                              </Header>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"grey\">\r\n                                {files.type.slice(0, 7)} File\r\n                              </Header>\r\n                            </Grid.Row>\r\n                          </Grid.Column>\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  ) : files.type ===\r\n                    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ? (\r\n                    <div key={index}>\r\n                      <a\r\n                        href={files.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <div>\r\n                          <Grid.Column width={3}>\r\n                            <img\r\n                              src={\r\n                                process.env.PUBLIC_URL +\r\n                                \"/files-type/\" +\r\n                                \"docx\" +\r\n                                \".png\"\r\n                              }\r\n                              style={{\r\n                                margin: \"10px\",\r\n                                height: \"100px\",\r\n                                width: \"100px\",\r\n                              }}\r\n                              alt=\"\"\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column width={3}>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"red\">\r\n                                {files.originalname.slice(0, 7)}\r\n                              </Header>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"grey\">\r\n                                {files.type.slice(0, 7)} File\r\n                              </Header>\r\n                            </Grid.Row>\r\n                          </Grid.Column>\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  ) : files.type === \"audio/mpeg\" ||\r\n                    files.type === \"video/mp4\" ? (\r\n                    <div>\r\n                      <Grid.Column width={3}>\r\n                        <ReactPlayer\r\n                          key={index}\r\n                          width=\"240px\"\r\n                          height=\"100px\"\r\n                          controls={true}\r\n                          url={files.url}\r\n                        />\r\n                      </Grid.Column>\r\n                      <Grid.Column width={3}>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"red\">\r\n                            {files.originalname}\r\n                          </Header>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"grey\">\r\n                            {files.type.slice(0, 7)} File\r\n                          </Header>\r\n                        </Grid.Row>\r\n                      </Grid.Column>\r\n                    </div>\r\n                  ) : files.type === \"image/png\" ||\r\n                    files.type === \"image/jpg\" ||\r\n                    files.type === \"image/jpeg\" ||\r\n                    files.type === \"image/gif\" ? (\r\n                    <div>\r\n                      <Grid.Column width={3}>\r\n                        <a\r\n                          href={files.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <img\r\n                            src={files.url}\r\n                            alt={files.originalname}\r\n                            style={{\r\n                              margin: \"10px\",\r\n                              height: \"100px\",\r\n                              width: \"100px\",\r\n                            }}\r\n                          />\r\n                        </a>\r\n                      </Grid.Column>\r\n                      <Grid.Column width={3}>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"red\">\r\n                            {files.originalname.slice(0, 7)}\r\n                          </Header>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"grey\">\r\n                            {files.type.slice(0, 7)} File\r\n                          </Header>\r\n                        </Grid.Row>\r\n                      </Grid.Column>\r\n                    </div>\r\n                  ) : (\r\n                    <a\r\n                      href={files.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <div>\r\n                        <Grid.Column width={3}>\r\n                          <img\r\n                            style={{\r\n                              margin: \"10px\",\r\n                              height: \"100px\",\r\n                              width: \"100px\",\r\n                            }}\r\n                            src={\r\n                              process.env.PUBLIC_URL +\r\n                              \"/files-type/\" +\r\n                              \"noFile.png\"\r\n                            }\r\n                            alt={files.originalname}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                          <Grid.Row>\r\n                            <Header as=\"h4\" color=\"red\">\r\n                              {files.originalname.slice(0, 7)}\r\n                            </Header>\r\n                          </Grid.Row>\r\n                          <Grid.Row>\r\n                            <Header as=\"h4\" color=\"grey\">\r\n                              {files.type.slice(0, 7)} File\r\n                            </Header>\r\n                          </Grid.Row>\r\n                        </Grid.Column>\r\n                      </div>\r\n                    </a>\r\n                  )\r\n                )}\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <br />\r\n            <CommentComponent courseID={id} />\r\n            <br />\r\n            \r\n          </Grid.Column>\r\n          <Grid.Column width={1}></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailCourses;\r\n"]},"metadata":{},"sourceType":"module"}