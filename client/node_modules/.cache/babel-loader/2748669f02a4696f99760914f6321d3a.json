{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Quiz\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Icon, Image, Button, Form, Segment, Progress, Container, Header, Divider } from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth.js\";\nimport { getListQuestionTasksById, assignGradeToStudent, getDetailByTaskByStudent } from \"../../redux/slices/Grade.js\";\nimport { getQuizzes } from \"../../redux/slices/Quiz.js\";\nimport EndQuiz from \"./EndQuiz.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const quizzes = useSelector(state => state.grades.listQuestion);\n  const [objgrade, setObjGrade] = useState({\n    _id: null,\n    grade: 0,\n    listReponse: []\n  });\n  const [score, setScore] = useState(0);\n  const [cuurQuestion, setCurrQuestion] = useState(0);\n  const [optionChosen, setOptionChosen] = useState(\"\");\n  const [listReponse] = useState([]);\n\n  const nextQuestion = () => {\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) {\n      setScore(score + quizzes[cuurQuestion].fpoint);\n    }\n\n    setCurrQuestion(cuurQuestion + 1);\n    listReponse.push(optionChosen);\n    setOptionChosen(\"\");\n  };\n\n  const dispatch = useDispatch();\n\n  const handleResult = () => {\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) {\n      setScore(score + quizzes[cuurQuestion].fpoint);\n    }\n\n    listReponse.push(optionChosen);\n    dispatch(assignGradeToStudent({\n      _id: id,\n      grade: score,\n      listReponse: listReponse\n    })).then(() => {\n      dispatch(getDetailByTaskByStudent(id));\n    });\n  };\n\n  const handleChosen = option => {\n    setOptionChosen(optionChosen != option ? option : \"\");\n  };\n\n  useEffect(() => {\n    // dispatch(getQuizzes());\n    dispatch(getDetailByTaskByStudent(id));\n    dispatch(getListQuestionTasksById(id));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      raised: true,\n      children: [/*#__PURE__*/_jsxDEV(Progress, {\n        active: true,\n        color: \"red\",\n        percent: (1 + cuurQuestion) * 100 / quizzes.length,\n        attached: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), quizzes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", quizzes[cuurQuestion].fquestion + \"?\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", cuurQuestion + 1, \" of \", quizzes.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          section: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionA,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionA),\n          children: quizzes[cuurQuestion].foptionA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionB,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionB),\n          children: quizzes[cuurQuestion].foptionB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionC,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionC),\n          children: quizzes[cuurQuestion].foptionC\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"big\",\n          fluid: true,\n          basic: optionChosen != quizzes[cuurQuestion].foptionD,\n          color: \"grey\",\n          onClick: () => handleChosen(quizzes[cuurQuestion].foptionD),\n          children: quizzes[cuurQuestion].foptionD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          section: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), cuurQuestion == quizzes.length - 1 ? /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Result/\" + id,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleResult(),\n            animated: \"fade\",\n            children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n              visible: true,\n              children: \"Finish Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n              hidden: true,\n              children: \"View result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => nextQuestion(),\n              disabled: !optionChosen,\n              content: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Segment, {\n        loading: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No Qts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        active: true,\n        color: \"red\",\n        percent: (1 + cuurQuestion) * 100 / quizzes.length,\n        attached: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"T8B3l0aOMHluuVQN1VpqV9yz9C4=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Quiz/Quiz.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","Link","Icon","Image","Button","Form","Segment","Progress","Container","Header","Divider","isAuth","getListQuestionTasksById","assignGradeToStudent","getDetailByTaskByStudent","getQuizzes","EndQuiz","Quiz","props","id","quizzes","state","grades","listQuestion","objgrade","setObjGrade","_id","grade","listReponse","score","setScore","cuurQuestion","setCurrQuestion","optionChosen","setOptionChosen","nextQuestion","correct_answer","fpoint","push","dispatch","handleResult","then","handleChosen","option","length","fquestion","foptionA","foptionB","foptionC","foptionD"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Icon,\r\n  Image,\r\n  Button,\r\n  Form,\r\n  Segment,\r\n  Progress,\r\n  Container,\r\n  Header,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth } from \"../../helpers/auth.js\";\r\nimport {\r\n  getListQuestionTasksById,\r\n  assignGradeToStudent,\r\n  getDetailByTaskByStudent,\r\n} from \"../../redux/slices/Grade.js\";\r\nimport { getQuizzes } from \"../../redux/slices/Quiz.js\";\r\nimport EndQuiz from \"./EndQuiz.js\";\r\n\r\nexport default function Quiz(props) {\r\n  const { id } = useParams();\r\n  const quizzes = useSelector((state) => state.grades.listQuestion);\r\n\r\n  const [objgrade, setObjGrade] = useState({\r\n    _id: null,\r\n    grade: 0,\r\n    listReponse: [],\r\n  });\r\n  const [score, setScore] = useState(0);\r\n  const [cuurQuestion, setCurrQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n  const [listReponse] = useState([]);\r\n\r\n  const nextQuestion = () => {\r\n    if (optionChosen === quizzes[cuurQuestion].correct_answer){\r\n    setScore(score + quizzes[cuurQuestion].fpoint);\r\n    }\r\n    setCurrQuestion(cuurQuestion + 1);\r\n    listReponse.push(optionChosen);\r\n  \r\n    setOptionChosen(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const handleResult = () => {\r\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) {\r\n      setScore(score +quizzes[cuurQuestion].fpoint);\r\n    }\r\n\r\n    listReponse.push(optionChosen);\r\n\r\n    dispatch(\r\n      assignGradeToStudent({ _id: id, grade: score, listReponse: listReponse })).then(()=>{\r\n        dispatch(getDetailByTaskByStudent(id));\r\n      })\r\n    \r\n  };\r\n  const handleChosen = (option) => {\r\n    setOptionChosen(optionChosen != option ? option : \"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // dispatch(getQuizzes());\r\n    dispatch(getDetailByTaskByStudent(id))\r\n    dispatch(getListQuestionTasksById(id));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"Quiz\">\r\n      <Divider hidden />\r\n      <Segment raised>\r\n        <Progress\r\n          active\r\n          color=\"red\"\r\n          percent={((1 + cuurQuestion) * 100) / quizzes.length}\r\n          attached=\"top\"\r\n        />\r\n\r\n        {quizzes.length > 0 ? (\r\n          <div>\r\n            <h1> {quizzes[cuurQuestion].fquestion + \"?\"} </h1>\r\n            <p>\r\n              Question {cuurQuestion + 1} of {quizzes.length}\r\n            </p>\r\n            <Divider section />\r\n\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionA}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionA)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionA}\r\n            </Button>\r\n            <Divider hidden />\r\n            <br />\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionB}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionB)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionB}\r\n            </Button>\r\n\r\n            <br />\r\n            <Divider hidden />\r\n\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionC}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionC)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionC}\r\n            </Button>\r\n            <Divider hidden />\r\n            <br />\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionD}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionD)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionD}\r\n            </Button>\r\n\r\n            <Divider section />\r\n            {cuurQuestion == quizzes.length - 1 ? (\r\n              <Link to={\"/Result/\" + id}>\r\n                <Button onClick={() => handleResult()} animated=\"fade\">\r\n                  <Button.Content visible>Finish Quiz</Button.Content>\r\n                  <Button.Content hidden>View result</Button.Content>\r\n                </Button>\r\n              </Link>\r\n            ) : (\r\n              <>\r\n                <Button.Group>\r\n                  <Button\r\n                    onClick={() => nextQuestion()}\r\n                    disabled={!optionChosen}\r\n                    content=\"Continue\"\r\n                  />\r\n                </Button.Group>\r\n              </>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Segment loading>\r\n            <h1>No Qts</h1>{\" \"}\r\n          </Segment>\r\n        )}\r\n\r\n        <Progress\r\n          active\r\n          color=\"red\"\r\n          percent={((1 + cuurQuestion) * 100) / quizzes.length}\r\n          attached=\"bottom\"\r\n        />\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}