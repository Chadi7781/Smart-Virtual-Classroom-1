{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Quiz\\\\AddQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Divider, Grid, Segment, Icon } from 'semantic-ui-react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddQuiz(props) {\n  _s();\n\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    cour: props.data.cour,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator\n  });\n  const [inputFields, setInputFields] = useState([{\n    id: uuidv4(),\n    fquestion: \"\",\n    foptionA: '',\n    foptionB: '',\n    foptionC: '',\n    foptionD: '',\n    correct_answer: '',\n    fpoint: ''\n  }]);\n  /*const [quiz , setQuiz] = useState({\r\n      id : inputFields.id,\r\n      question : inputFields.fquestion,\r\n      optionA : inputFields.foptionA,\r\n      optionB : inputFields.foptionB,\r\n      optionC : inputFields.foptionC,\r\n      optionD : inputFields.foptionD,\r\n      })*/\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields); //dispatch(postQuiz(quiz));\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n        if (event.target.name === 'foptionA') i['correct_answer'] = event.target.value;\n      }\n\n      return i;\n    });\n    console.log(newInputFields);\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, {\n      id: uuidv4(),\n      fquestion: '',\n      foptionA: '',\n      foptionB: '',\n      foptionC: '',\n      foptionD: '',\n      correct_answer: '',\n      fpoint: ''\n    }]);\n  };\n\n  const handleRemoveFields = id => {\n    const values = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  };\n\n  var step = 2;\n\n  const event = () => {\n    props.addTask(tasks.listQuestion = inputFields);\n    props.addTask(tasks);\n    props.nextStep(step + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          raised: true,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"qsd\",\n            onSubmit: handleSubmit,\n            children: inputFields.map((inputField, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Question \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                widths: \"equal\",\n                inline: true,\n                children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                  name: \"fquestion\",\n                  fluid: true,\n                  value: inputFields.fquestion,\n                  onChange: event => handleChangeInput(inputField.id, event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                  name: \"fpoint\",\n                  value: inputFields.fquestion,\n                  onChange: event => handleChangeInput(inputField.id, event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                icon: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"check circle outline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 24\n                }, this),\n                name: \"foptionA\",\n                fluid: true,\n                value: inputFields.foptionA,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                name: \"foptionB\",\n                label: \"B\",\n                variant: \"filled\",\n                value: inputFields.foptionB,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                name: \"foptionC\",\n                label: \"C\",\n                variant: \"filled\",\n                value: inputFields.foptionC,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                name: \"foptionD\",\n                label: \"D\",\n                variant: \"filled\",\n                value: inputFields.foptionD,\n                onChange: event => handleChangeInput(inputField.id, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"mini\",\n                  disabled: inputFields.length === 1,\n                  onClick: () => handleRemoveFields(inputField.id),\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"mini\",\n                  onClick: handleAddFields,\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 25\n              }, this)]\n            }, inputField.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"red\",\n      type: \"submit\",\n      floated: \"right\",\n      onClick: event,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddQuiz, \"uIhc/5NCZ3zQcA1zb16/yzXL0KA=\");\n\n_c = AddQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuiz\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Quiz/AddQuiz.js"],"names":["React","useState","Button","Form","Divider","Grid","Segment","Icon","v4","uuidv4","AddQuiz","props","tasks","setTask","title","data","description","theme","cour","typeTask","listQuestion","listStudents","endDate","creator","inputFields","setInputFields","id","fquestion","foptionA","foptionB","foptionC","foptionD","correct_answer","fpoint","handleSubmit","e","preventDefault","console","log","handleChangeInput","event","newInputFields","map","i","target","name","value","handleAddFields","handleRemoveFields","values","splice","findIndex","step","addTask","nextStep","inputField","index","length"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react'\r\nimport { Button,Form ,Divider,Grid, Segment, Icon} from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport default function AddQuiz(props) {\r\n\r\n \r\n  const [tasks , setTask] = useState({\r\n           \r\n    title : props.data.title,\r\n    description : props.data.description,\r\n    theme : props.data.theme,\r\n    cour : props.data.cour,\r\n    typeTask : props.data.typeTask,\r\n    listQuestion : props.data.listQuestion,\r\n    listStudents : props.data.listStudents,\r\n    endDate : props.data.endDate,\r\n    creator : props.data.creator\r\n \r\n});\r\n\r\n\r\n\r\n    const [inputFields, setInputFields] = useState(\r\n      \r\n      [\r\n        { id: uuidv4(),\r\n          fquestion: \"\",\r\n          foptionA: '',\r\n          foptionB: '',\r\n          foptionC: '',\r\n          foptionD: '',\r\n          correct_answer: '',\r\n          fpoint : ''\r\n        },\r\n     ] );\r\n   \r\n    \r\n\r\n    /*const [quiz , setQuiz] = useState({\r\n        id : inputFields.id,\r\n        question : inputFields.fquestion,\r\n        optionA : inputFields.foptionA,\r\n        optionB : inputFields.foptionB,\r\n        optionC : inputFields.foptionC,\r\n        optionD : inputFields.foptionD,\r\n\r\n\r\n    })*/\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"InputFields\", inputFields);\r\n      \r\n       \r\n\r\n        //dispatch(postQuiz(quiz));\r\n      };\r\n    \r\n      const handleChangeInput = (id, event) => {\r\n        \r\n        const newInputFields = inputFields.map((i) => {\r\n          if(id === i.id) {\r\n       \r\n            i[event.target.name] = event.target.value;\r\n            if(event.target.name==='foptionA')\r\n            i['correct_answer'] = event.target.value;\r\n          }\r\n          return i;\r\n        })\r\n        console.log(newInputFields);\r\n        setInputFields(newInputFields);\r\n      \r\n    \r\n          \r\n      }\r\n    \r\n      const handleAddFields = () => {\r\n        setInputFields([...inputFields, { id: uuidv4(),  fquestion: '',foptionA: '',foptionB: '',foptionC: '',foptionD: '' ,  correct_answer: '',fpoint:''}])\r\n      }\r\n    \r\n      const handleRemoveFields = id => {\r\n        const values  = [...inputFields];\r\n        values.splice(values.findIndex(value => value.id === id), 1);\r\n        setInputFields(values);\r\n      }\r\n\r\n      var step=2;\r\n      const event = ()=>{\r\n        \r\n        props.addTask(tasks.listQuestion = inputFields);\r\n        props.addTask(tasks);\r\n        props.nextStep(step+1);\r\n      }\r\n  \r\n    return (\r\n        <div >\r\n     \r\n\r\n<Grid centered >\r\n    <Grid.Column>\r\n      <Segment raised>\r\n        \r\n        \r\n      <Form className=\"qsd\" onSubmit={handleSubmit}>\r\n            { inputFields.map((inputField,index) => (\r\n              <div key={inputField.id}>\r\n                \r\n                  <Divider />\r\n                  <label>Question {index+1}</label>\r\n                <Form.Group widths='equal' inline>\r\n               \r\n                <Form.Input\r\n                  name=\"fquestion\"\r\n                  fluid\r\n                \r\n                  value={inputFields.fquestion}  \r\n                  onChange={event => handleChangeInput(inputField.id, event)\r\n                }\r\n                />\r\n                   \r\n                \r\n                     <Form.Input\r\n                  name=\"fpoint\"\r\n           \r\n              \r\n                  value={inputFields.fquestion}\r\n                  onChange={event => handleChangeInput(inputField.id, event)\r\n                }\r\n                />\r\n        \r\n                </Form.Group>\r\n                <label>A</label>\r\n               \r\n                <Form.Input\r\n                 icon={<Icon name=\"check circle outline\"   />}\r\n                  name=\"foptionA\"\r\n                \r\n                fluid\r\n                  value={inputFields.foptionA}\r\n                  onChange={event => handleChangeInput(inputField.id, event)}\r\n                />\r\n         \r\n                 <Form.Input\r\n                 \r\n                  name=\"foptionB\"\r\n                  label=\"B\"\r\n                  variant=\"filled\"\r\n                  value={inputFields.foptionB}\r\n                  onChange={event => handleChangeInput(inputField.id, event)}\r\n                />\r\n                 <Form.Input\r\n                  name=\"foptionC\"\r\n                  label=\"C\"\r\n                  variant=\"filled\"\r\n                  value={inputFields.foptionC}\r\n                  onChange={event => handleChangeInput(inputField.id, event)}\r\n                />\r\n                 <Form.Input\r\n                  name=\"foptionD\"\r\n                  label=\"D\"\r\n                  variant=\"filled\"\r\n                  value={inputFields.foptionD}\r\n                  onChange={event => handleChangeInput(inputField.id, event)}\r\n                />\r\n                        <Button.Group>\r\n                <Button  size='mini'   disabled={inputFields.length === 1}\r\n                 onClick={() => handleRemoveFields(inputField.id)}>\r\n                 -\r\n                </Button>\r\n                <Button.Or></Button.Or>\r\n                <Button \r\n  size='mini'\r\n                  onClick={handleAddFields}\r\n                >\r\n           +\r\n                </Button>\r\n                </Button.Group>\r\n              </div>\r\n            )) }\r\n           \r\n         \r\n          </Form>\r\n       \r\n      </Segment>\r\n    </Grid.Column>\r\n  </Grid>\r\n  <Divider hidden></Divider>\r\n  <Button\r\n      \r\n            color=\"red\"\r\n              type=\"submit\" \r\n              floated='right'\r\n              onClick={event}\r\n             >Next</Button>\r\n    </div>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}