{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\ModalTaskFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Select from \"react-select\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport { Dropdown, Button, Form, Grid, Rail, Segment, TextArea, Label, Modal, Confirm } from \"semantic-ui-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isAuth } from \"../../helpers/auth\";\nimport FileUpload from \"../../utlis/FileUpload\";\nimport { assignTask, postTasks } from \"../../redux/slices/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalTaskFile(props) {\n  _s();\n\n  const [cancel, setCancel] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [opensave, setOpensave] = useState(false);\n  const [close, setClose] = useState(false);\n  const dispatch = useDispatch();\n\n  const clicCancel = () => {\n    setCancel(true);\n  };\n\n  const clicOpen = () => {\n    setOpen(true);\n  };\n\n  const clicOpensave = () => {\n    setOpensave(true);\n  };\n\n  const clicConfirmCancel = () => {\n    //dispatch(postTasks(props.data));\n    // props.nextStep(step + 1);\n    setCancel(false);\n  };\n\n  const clicConfirm = () => {\n    dispatch(postTasks(tasks));\n    setOpensave(false);\n  };\n\n  const clicConfirmAssign = () => {\n    dispatch(assignTask(tasks));\n    setOpen(false);\n  };\n\n  const clicClose = () => {\n    setOpen(false);\n  };\n\n  const clicClosesave = () => {\n    setOpensave(false);\n  };\n\n  const clicCloseCancel = () => {\n    setCancel(false);\n  };\n\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const seances = useSelector(state => state.seance.seance);\n  const [studentChosen] = useState(currentClass.classUsers);\n  const [listStud, setListStud] = useState([]);\n  const [theme, setTheme] = useState([]);\n  const [tasks, setTask] = useState({\n    title: \"\",\n    description: \"\",\n    theme: \"\",\n    cour: currentClass._id,\n    typeTask: \"File\",\n    listQuestion: [],\n    listStudents: [],\n    endDate: null,\n    creator: isAuth()._id\n  });\n\n  const event = selectedList => {\n    //prop(tasks);\n    setTask(...(tasks.theme = theme._id));\n    setTask(...(tasks.listStudents = listStud));\n    console.log(tasks.listStudents);\n  };\n\n  const onSelect = (selectedList, selectedItem) => {\n    console.log(selectedItem);\n    setListStud(selectedList);\n    console.log(listStud);\n  };\n\n  const onRemove = (selectedList, removedItem) => {\n    listStud.filter(item => item._id !== removedItem._id);\n    setListStud(selectedList);\n    console.log(listStud);\n  };\n\n  const selectedTheme = (selectedList, selectedItem) => {\n    console.log(selectedItem);\n    setTheme(selectedItem);\n  };\n\n  const [enableUpload, setEnableUpload] = useState(false);\n  const [Images, setImages] = useState([]);\n\n  const updateImages = newImages => {\n    setImages(newImages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      trigger: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        icon: \"file text\",\n        text: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 18\n      }, this),\n      dimmer: \"inverted\",\n      size: \"tiny\",\n      closeIcon: \"close\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: props.headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 10,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                    label: \"Title\",\n                    required: true,\n                    onChange: e => setTask({ ...tasks,\n                      title: e.target.value\n                    }),\n                    placeholder: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n                    required: true,\n                    label: \"Description\",\n                    onChange: e => setTask({ ...tasks,\n                      description: e.target.value\n                    }),\n                    placeholder: \"Description..\",\n                    style: {\n                      minHeight: 50\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Due\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(SemanticDatepicker, {\n                    onChange: (e, data) => setTask({ ...tasks,\n                      endDate: data.value\n                    }),\n                    value: tasks.endDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"For : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n                required: true,\n                placeholder: \"Select seance\",\n                style: {\n                  chips: {\n                    background: \"red\"\n                  },\n                  option: {\n                    color: \"black\"\n                  },\n                  searchBox: {\n                    border: \"none\"\n                  },\n                  chips: {\n                    // To change css chips(Selected options)\n                    background: \"red\"\n                  }\n                },\n                onSelect: selectedTheme,\n                fluid: true,\n                options: seances,\n                selection: true,\n                singleSelect: true,\n                hidePlaceholder: true,\n                displayValue: \"titre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"For : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n                  placeholder: \"Select Student\",\n                  style: {\n                    chips: {\n                      background: \"red\"\n                    },\n                    option: {\n                      color: \"black\"\n                    },\n                    searchBox: {\n                      // To change search box element look\n                      border: \"none\"\n                    },\n                    chips: {\n                      // To change css chips(Selected options)\n                      background: \"red\"\n                    }\n                  },\n                  loadingMessage: true,\n                  showArrow: true,\n                  fluid: true,\n                  selection: true,\n                  multiple: true,\n                  displayValue: \"name\",\n                  options: studentChosen,\n                  selectedValues: tasks.listStudents,\n                  onSelect: onSelect,\n                  onRemove: onRemove,\n                  hidePlaceholder: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n          refreshFunction: updateImages,\n          listfile: null,\n          Enbale: enableUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          floated: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => clicCancel(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n            header: \"Cancel Add \",\n            content: \"Are you sure?\",\n            open: cancel,\n            onCancel: clicCloseCancel,\n            onConfirm: clicConfirmCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            type: \"submit\",\n            onClick: () => clicOpensave() //onClick={onSubmitSaveTask}\n            ,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n            header: \"Save Task To Assign\",\n            content: \"Are you sure?\",\n            open: opensave,\n            onCancel: clicClosesave,\n            onConfirm: clicConfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            type: \"submit\" // onClick={onSubmitAssignTask}\n            ,\n            onClick: () => clicOpen(),\n            children: \"Assign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n            header: \"Assign Task To Student\",\n            content: \"Are you sure?\",\n            open: open,\n            onCancel: clicClose,\n            onConfirm: clicConfirmAssign\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalTaskFile, \"TLJr5kto4aBofa862e1anzQfaKI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ModalTaskFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTaskFile\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/ModalTaskFile.js"],"names":["React","useState","Multiselect","Select","SemanticDatepicker","Dropdown","Button","Form","Grid","Rail","Segment","TextArea","Label","Modal","Confirm","useDispatch","useSelector","isAuth","FileUpload","assignTask","postTasks","ModalTaskFile","props","cancel","setCancel","open","setOpen","opensave","setOpensave","close","setClose","dispatch","clicCancel","clicOpen","clicOpensave","clicConfirmCancel","clicConfirm","tasks","clicConfirmAssign","clicClose","clicClosesave","clicCloseCancel","currentClass","JSON","parse","localStorage","getItem","seances","state","seance","studentChosen","classUsers","listStud","setListStud","theme","setTheme","setTask","title","description","cour","_id","typeTask","listQuestion","listStudents","endDate","creator","event","selectedList","console","log","onSelect","selectedItem","onRemove","removedItem","filter","item","selectedTheme","enableUpload","setEnableUpload","Images","setImages","updateImages","newImages","headerTitle","e","target","value","minHeight","data","chips","background","option","color","searchBox","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\n\r\nimport {\r\n  Dropdown,\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Rail,\r\n  Segment,\r\n  TextArea,\r\n  Label,\r\n  Modal,\r\n  Confirm,\r\n} from \"semantic-ui-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport { assignTask, postTasks } from \"../../redux/slices/Task\";\r\n\r\nexport default function ModalTaskFile(props) {\r\n\r\n    const [cancel, setCancel] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [opensave, setOpensave] = useState(false);\r\n  \r\n    const [close, setClose] = useState(false);\r\n    const  dispatch = useDispatch();\r\n    const clicCancel = () => {\r\n      setCancel(true);\r\n    };\r\n    const clicOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const clicOpensave = () => {\r\n      setOpensave(true);\r\n    };\r\n    const clicConfirmCancel = () => {\r\n      //dispatch(postTasks(props.data));\r\n     // props.nextStep(step + 1);\r\n     setCancel(false);\r\n    };\r\n    const clicConfirm = () => {\r\n     \r\n      dispatch(postTasks(tasks));\r\n    \r\n      setOpensave(false);\r\n    };\r\n    const clicConfirmAssign = () => {\r\n      dispatch(assignTask(tasks));\r\n    \r\n      setOpen(false);\r\n    };\r\n    const clicClose = () => {\r\n      setOpen(false);\r\n    };\r\n    const clicClosesave = () => {\r\n      setOpensave(false);\r\n    };\r\n    const clicCloseCancel = () => {\r\n      setCancel(false);\r\n    };\r\n    const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n    const seances = useSelector((state) => state.seance.seance);\r\n    const [studentChosen] = useState(currentClass.classUsers);\r\n\r\n    const [listStud , setListStud] = useState([]);\r\n\r\n    const [theme, setTheme] = useState([]);\r\n   \r\n    const [tasks , setTask] = useState({\r\n   \r\n        title : \"\",\r\n        description : \"\",\r\n        theme : \"\",\r\n        cour : currentClass._id,\r\n        typeTask : \"File\",\r\n        listQuestion : [],\r\n        listStudents : [],\r\n        endDate : null,\r\n        creator : isAuth()._id\r\n     \r\n    });\r\n\r\n      const event = (selectedList) => {\r\n        //prop(tasks);\r\n        setTask(...tasks.theme = theme._id);\r\n        setTask(...tasks.listStudents = listStud);\r\n        console.log(tasks.listStudents);\r\n    \r\n     \r\n      };\r\n    \r\n      const onSelect = (selectedList, selectedItem) => {\r\n       console.log(selectedItem);\r\n       setListStud(selectedList);\r\n\r\n    console.log(listStud);\r\n      };\r\n      const onRemove = (selectedList, removedItem) => {\r\n    \r\n         listStud.filter(\r\n            (item) => item._id !== removedItem._id\r\n          );\r\n          setListStud(selectedList);\r\n        \r\n        console.log(listStud);\r\n      \r\n      };\r\n    \r\n      const selectedTheme = (selectedList, selectedItem) => {\r\n        console.log(selectedItem);\r\n       setTheme(selectedItem);\r\n  \r\n      };\r\n      const [enableUpload, setEnableUpload] = useState(false);\r\n      const [Images, setImages] = useState([]);\r\n      const updateImages = (newImages) => {\r\n    \r\n        setImages(newImages);\r\n        \r\n       \r\n      };\r\n    return (\r\n        <div>\r\n               <Modal\r\n        trigger={<Dropdown.Item icon=\"file text\" text=\"Add Task\" />}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={10}>\r\n              <Form >\r\n                <Form.Field>\r\n                  <Form.Input\r\n                    label=\"Title\"\r\n                    required\r\n                   \r\n                    onChange={(e) =>\r\n                      setTask({ ...tasks, title: e.target.value })\r\n                    }\r\n                    placeholder=\"Title\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>Description</label>\r\n                  <TextArea\r\n                  required\r\n                    label=\"Description\"\r\n              \r\n                    onChange={(e) =>\r\n                      setTask({ ...tasks, description: e.target.value })\r\n                    }\r\n                    placeholder=\"Description..\"\r\n                    style={{ minHeight: 50 }}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Due</label>\r\n                  <SemanticDatepicker\r\n                    onChange={(e, data) =>\r\n                      setTask({ ...tasks, endDate: data.value })\r\n                    }\r\n                    value={tasks.endDate}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n              <label>For : </label>\r\n              <Multiselect\r\n              required\r\n                placeholder=\"Select seance\"\r\n                style={{\r\n                  chips: { background: \"red\" },\r\n                  option: { color: \"black\" },\r\n                  searchBox: {\r\n                  \r\n                    border: \"none\",\r\n                  },\r\n                  chips: { // To change css chips(Selected options)\r\n                    background: \"red\"\r\n                    }\r\n                }}\r\n                onSelect={selectedTheme}\r\n                fluid\r\n                options={seances}\r\n                selection\r\n                singleSelect={true}\r\n                hidePlaceholder\r\n                displayValue=\"titre\"\r\n              \r\n              />\r\n              <br/>\r\n              <Form.Field required>\r\n                           <label>For : </label>\r\n              <Multiselect\r\n                placeholder=\"Select Student\"\r\n                style={{\r\n                  chips: { background: \"red\" },\r\n                  option: { color: \"black\" },\r\n                  searchBox: {\r\n                    // To change search box element look\r\n                    border: \"none\",\r\n                  },\r\n                  chips: { // To change css chips(Selected options)\r\n                    background: \"red\"\r\n                    }\r\n                }}\r\n                loadingMessage\r\n                showArrow\r\n                fluid\r\n                selection\r\n                multiple\r\n                displayValue=\"name\"\r\n                options={studentChosen}\r\n                selectedValues={tasks.listStudents}\r\n                onSelect={onSelect}\r\n                onRemove={onRemove}\r\n                hidePlaceholder\r\n              />\r\n              </Form.Field>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <FileUpload refreshFunction={updateImages} listfile={null} Enbale={enableUpload}/>\r\n      \r\n      \r\n     \r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n        <Button.Group floated=\"right\">\r\n        <Button onClick={() => clicCancel()}>Cancel</Button>\r\n        <Confirm\r\n          header=\"Cancel Add \"\r\n          content=\"Are you sure?\"\r\n          open={cancel}\r\n          onCancel={clicCloseCancel}\r\n          onConfirm={clicConfirmCancel}\r\n        />\r\n        <Button.Or />\r\n        <Button\r\n          color=\"red\"\r\n          type=\"submit\"\r\n          onClick={() => clicOpensave()}\r\n          //onClick={onSubmitSaveTask}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Confirm\r\n          header=\"Save Task To Assign\"\r\n          content=\"Are you sure?\"\r\n          open={opensave}\r\n          onCancel={clicClosesave}\r\n          onConfirm={clicConfirm}\r\n        />\r\n        <Button.Or />\r\n      \r\n        <Button\r\n          color=\"red\"\r\n          type=\"submit\"\r\n          // onClick={onSubmitAssignTask}\r\n          onClick={() => clicOpen()}\r\n        >\r\n          Assign\r\n        </Button>\r\n   \r\n        <Confirm\r\n          header=\"Assign Task To Student\"\r\n          content=\"Are you sure?\"\r\n          open={open}\r\n          onCancel={clicClose}\r\n          onConfirm={clicConfirmAssign}\r\n        />\r\n      </Button.Group>\r\n     \r\n        </Modal.Actions>\r\n       \r\n      </Modal>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}