{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Class\\\\AddUserToClassComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Modal, Form, Input, TextArea } from \"semantic-ui-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\"; //import { useHistory } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addInvitationClass, selectedClasses, fetchInvitationclass } from \"../../redux/slices/classsline\";\nimport { ClassInvitationApi, getclassApi } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case \"OPEN_MODAL\":\n      return {\n        open: true,\n        dimmer: action.dimmer\n      };\n\n    case \"CLOSE_MODAL\":\n      return {\n        open: false\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nexport default function AddUserToClassComponent() {\n  _s();\n\n  const dispatch = useDispatch();\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\n  const classinvit = JSON.parse(localStorage.getItem(\"idClass\"));\n  let error = {\n    visible: false,\n    message: \"\"\n  };\n  const formik = useFormik({\n    initialValues: {\n      Email: \"\"\n    },\n    validationSchema: Yup.object({\n      Email: Yup.string().required()\n    }),\n    onSubmit: async formData => {\n      try {\n        const res2 = await getclassApi.getUserByEmail(formData.Email);\n        const data = {\n          status: \"Invitation\",\n          classOb: classinvit._id,\n          userOb: res2._id\n        };\n        const res = await ClassInvitationApi.AddClassInvitation(data);\n        dis({\n          type: \"CLOSE_MODAL\"\n        });\n        dispatch(fetchInvitationclass(documentData._id));\n      } catch (err) {\n        error = {\n          visible: true,\n          message: JSON.stringify(err.errors, null, 2)\n        };\n      }\n    }\n  });\n  const [state, dis] = React.useReducer(exampleReducer, {\n    open: false,\n    dimmer: undefined\n  });\n  const {\n    open,\n    dimmer\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      circular: true,\n      content: \"Add User\",\n      icon: \"add\",\n      onClick: () => dis({\n        type: \"OPEN_MODAL\",\n        dimmer: \"blurring\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      dimmer: dimmer,\n      open: open,\n      onClose: () => dis({\n        type: \"CLOSE_MODAL\"\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Add Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: Input,\n              label: \"Email\",\n              placeholder: \"Email\",\n              name: \"Email\",\n              onChange: formik.handleChange,\n              error: formik.errors.Email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n            floated: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => dis({\n                type: \"CLOSE_MODAL\"\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUserToClassComponent, \"obDDJJ0p/hXcmCp4a9wOJVnHrms=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = AddUserToClassComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserToClassComponent\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Class/AddUserToClassComponent.js"],"names":["React","Button","Modal","Form","Input","TextArea","useFormik","Yup","useDispatch","useSelector","addInvitationClass","selectedClasses","fetchInvitationclass","ClassInvitationApi","getclassApi","exampleReducer","state","action","type","open","dimmer","Error","AddUserToClassComponent","dispatch","documentData","JSON","parse","localStorage","getItem","classinvit","error","visible","message","formik","initialValues","Email","validationSchema","object","string","required","onSubmit","formData","res2","getUserByEmail","data","status","classOb","_id","userOb","res","AddClassInvitation","dis","err","stringify","errors","useReducer","undefined","handleSubmit","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,QAArC,QAAqD,mBAArD;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA6CC,oBAA7C,QAAyE,+BAAzE;AACA,SAASC,kBAAT,EAA4BC,WAA5B,QAA+C,eAA/C;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,MAAM,EAAEH,MAAM,CAACG;AAA7B,OAAP;;AACF,SAAK,aAAL;AACE,aAAO;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAP;;AACF;AACE,YAAM,IAAIE,KAAJ,EAAN;AANJ;AAQD;;AAED,eAAe,SAASC,uBAAT,GAAmC;AAAA;;AAChD,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAArB;AACA,QAAMC,UAAU,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAnB;AACA,MAAIE,KAAK,GAAG;AAAEC,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAAZ;AACA,QAAMC,MAAM,GAAG3B,SAAS,CAAC;AACvB4B,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE;AADM,KADQ;AAIvBC,IAAAA,gBAAgB,EAAE7B,GAAG,CAAC8B,MAAJ,CAAW;AAC3BF,MAAAA,KAAK,EAAE5B,GAAG,CAAC+B,MAAJ,GAAaC,QAAb;AADoB,KAAX,CAJK;AAOvBC,IAAAA,QAAQ,EAAE,MAAOC,QAAP,IAAoB;AAC5B,UAAI;AACF,cAAMC,IAAI,GAAG,MAAM5B,WAAW,CAAC6B,cAAZ,CAA2BF,QAAQ,CAACN,KAApC,CAAnB;AACA,cAAMS,IAAI,GAAE;AACVC,UAAAA,MAAM,EAAE,YADE;AAEVC,UAAAA,OAAO,EAAEjB,UAAU,CAACkB,GAFV;AAGVC,UAAAA,MAAM,EAAEN,IAAI,CAACK;AAHH,SAAZ;AAKA,cAAME,GAAG,GAAG,MAAMpC,kBAAkB,CAACqC,kBAAnB,CAAsCN,IAAtC,CAAlB;AACAO,QAAAA,GAAG,CAAC;AAAEjC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAH;AACAK,QAAAA,QAAQ,CAACX,oBAAoB,CAACY,YAAY,CAACuB,GAAd,CAArB,CAAR;AACD,OAVD,CAUE,OAAOK,GAAP,EAAY;AACZtB,QAAAA,KAAK,GAAG;AACNC,UAAAA,OAAO,EAAE,IADH;AAENC,UAAAA,OAAO,EAAEP,IAAI,CAAC4B,SAAL,CAAeD,GAAG,CAACE,MAAnB,EAA2B,IAA3B,EAAiC,CAAjC;AAFH,SAAR;AAID;AACF;AAxBsB,GAAD,CAAxB;AA2BA,QAAM,CAACtC,KAAD,EAAQmC,GAAR,IAAenD,KAAK,CAACuD,UAAN,CAAiBxC,cAAjB,EAAiC;AACpDI,IAAAA,IAAI,EAAE,KAD8C;AAEpDC,IAAAA,MAAM,EAAEoC;AAF4C,GAAjC,CAArB;AAIA,QAAM;AAAErC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBJ,KAAzB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,OAAO,EAAC,UAAzB;AAAoC,MAAA,IAAI,EAAC,KAAzC;AAA+C,MAAA,OAAO,EAAE,MAAMmC,GAAG,CAAC;AAAEjC,QAAAA,IAAI,EAAE,YAAR;AAAsBE,QAAAA,MAAM,EAAE;AAA9B,OAAD;AAAjE;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AACE,MAAA,MAAM,EAAEA,MADV;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,OAAO,EAAE,MAAMgC,GAAG,CAAC;AAAEjC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAHpB;AAAA,8BAKE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD,CAAO,OAAP;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEe,MAAM,CAACwB,YAAvB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,MAAM,EAAC,OAAnB;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,OAAO,EAAErD,KADX;AAEE,cAAA,KAAK,EAAC,OAFR;AAGE,cAAA,WAAW,EAAC,OAHd;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,QAAQ,EAAE6B,MAAM,CAACyB,YALnB;AAME,cAAA,KAAK,EAAEzB,MAAM,CAACqB,MAAP,CAAcnB;AANvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,MAAD,CAAQ,KAAR;AAAc,YAAA,OAAO,EAAC,OAAtB;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAMgB,GAAG,CAAC;AAAEjC,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AAAS,cAAA,KAAK,EAAC,KAAf;AAAsB,cAAA,IAAI,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eA4BE,QAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA,cA5BF,eA6BE,QAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA3EuBI,uB;UACLd,W,EAIFF,S;;;KALOgB,uB","sourcesContent":["import React from \"react\";\r\nimport { Button, Modal, Form, Input, TextArea } from \"semantic-ui-react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addInvitationClass, selectedClasses,fetchInvitationclass } from \"../../redux/slices/classsline\";\r\nimport { ClassInvitationApi,getclassApi } from \"../../api/api\";\r\n\r\nfunction exampleReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"OPEN_MODAL\":\r\n      return { open: true, dimmer: action.dimmer };\r\n    case \"CLOSE_MODAL\":\r\n      return { open: false };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport default function AddUserToClassComponent() {\r\n  const dispatch = useDispatch();\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const classinvit = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  let error = { visible: false, message: \"\" };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Email: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      Email: Yup.string().required(),\r\n    }),\r\n    onSubmit: async (formData) => {\r\n      try {\r\n        const res2 = await getclassApi.getUserByEmail(formData.Email);\r\n        const data ={\r\n          status: \"Invitation\",\r\n          classOb: classinvit._id,\r\n          userOb: res2._id,\r\n        }\r\n        const res = await ClassInvitationApi.AddClassInvitation(data);\r\n        dis({ type: \"CLOSE_MODAL\" });\r\n        dispatch(fetchInvitationclass(documentData._id));\r\n      } catch (err) {\r\n        error = {\r\n          visible: true,\r\n          message: JSON.stringify(err.errors, null, 2),\r\n        };\r\n      }\r\n    },\r\n  });\r\n\r\n  const [state, dis] = React.useReducer(exampleReducer, {\r\n    open: false,\r\n    dimmer: undefined,\r\n  });\r\n  const { open, dimmer } = state;\r\n\r\n  return (\r\n    <div>\r\n      <Button circular content=\"Add User\" icon='add' onClick={() => dis({ type: \"OPEN_MODAL\", dimmer: \"blurring\" })} />\r\n\r\n      <Modal\r\n        dimmer={dimmer}\r\n        open={open}\r\n        onClose={() => dis({ type: \"CLOSE_MODAL\" })}\r\n      >\r\n        <Modal.Header>Add Class</Modal.Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Email\"\r\n                placeholder=\"Email\"\r\n                name=\"Email\"\r\n                onChange={formik.handleChange}\r\n                error={formik.errors.Email}\r\n              />\r\n              \r\n             \r\n            </Form.Group>\r\n           \r\n            <Button.Group floated=\"right\">\r\n              <Button onClick={() => dis({ type: \"CLOSE_MODAL\" })} >Cancel</Button>\r\n              <Button.Or />\r\n              <Button  color=\"red\"  type=\"submit\">Add</Button>\r\n            </Button.Group>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Content></Modal.Content>\r\n        <Modal.Actions></Modal.Actions>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}