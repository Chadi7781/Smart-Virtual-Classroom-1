{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Video\\\\VideoCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoCard = props => {\n  _s();\n\n  const ref = useRef();\n  const peer = props.peer;\n  useEffect(() => {\n    peer.on('stream', stream => {\n      ref.current.srcObject = stream;\n    });\n    peer.on('track', (track, stream) => {});\n  }, [peer]);\n  return /*#__PURE__*/_jsxDEV(Video, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoCard, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = VideoCard;\nconst Video = styled.video``;\n_c2 = Video;\nexport default VideoCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoCard\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Video/VideoCard.js"],"names":["React","useEffect","useRef","styled","VideoCard","props","ref","peer","on","stream","current","srcObject","track","Video","video"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,GAAG,GAAGJ,MAAM,EAAlB;AACA,QAAMK,IAAI,GAAGF,KAAK,CAACE,IAAnB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,IAAI,CAACC,EAAL,CAAQ,QAAR,EAAmBC,MAAD,IAAY;AAC5BH,MAAAA,GAAG,CAACI,OAAJ,CAAYC,SAAZ,GAAwBF,MAAxB;AACD,KAFD;AAGAF,IAAAA,IAAI,CAACC,EAAL,CAAQ,OAAR,EAAiB,CAACI,KAAD,EAAQH,MAAR,KAAmB,CACnC,CADD;AAED,GANQ,EAMN,CAACF,IAAD,CANM,CAAT;AAQA,sBACE,QAAC,KAAD;AACE,IAAA,WAAW,MADb;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,GAAG,EAAED;AAHP;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnBD;;GAAMF,S;;KAAAA,S;AAqBN,MAAMS,KAAK,GAAGV,MAAM,CAACW,KAAM,EAA3B;MAAMD,K;AAEN,eAAeT,SAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nconst VideoCard = (props) => {\r\n  const ref = useRef();\r\n  const peer = props.peer;\r\n\r\n  useEffect(() => {\r\n    peer.on('stream', (stream) => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n    peer.on('track', (track, stream) => {\r\n    });\r\n  }, [peer]);\r\n\r\n  return (\r\n    <Video\r\n      playsInline\r\n      autoPlay\r\n      ref={ref}\r\n    />\r\n  );\r\n};\r\n\r\nconst Video = styled.video``;\r\n\r\nexport default VideoCard;\r\n"]},"metadata":{},"sourceType":"module"}