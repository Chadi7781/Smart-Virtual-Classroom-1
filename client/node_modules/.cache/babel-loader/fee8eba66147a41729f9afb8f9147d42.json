{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\ModalConfirmDeleteTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Dropdown, Modal } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ModalConfirmDeleteTask(props) {\n  _s();\n\n  const [modalOpen, SetModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpen = e => SetModalOpen(true);\n\n  const handleClose = e => SetModalOpen(false);\n\n  const handleSubmit = e => {\n    dispatch(dele(params)).then(response => {\n      handleClose(); //props.onSeanceDeleted(response.data.result);\n      //this.props.socket.emit(\"delete\", response.data.result);\n    }).catch(err => {\n      handleClose();\n      throw err;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      trigger: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: handleOpen,\n        icon: \"delete\",\n        text: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this),\n      open: modalOpen,\n      onClose: handleClose,\n      dimmer: \"inverted\",\n      size: \"tiny\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: props.headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: props.task.titre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          taskid: props.task._id,\n          color: \"red\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"black\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}\n\n_s(ModalConfirmDeleteTask, \"HaWjl4e0TRnfgRUF6UOWdAPGSKc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModalConfirmDeleteTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalConfirmDeleteTask\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/ModalConfirmDeleteTask.js"],"names":["React","useState","useDispatch","Button","Dropdown","Modal","ModalConfirmDeleteTask","props","modalOpen","SetModalOpen","dispatch","handleOpen","e","handleClose","handleSubmit","dele","params","then","response","catch","err","headerTitle","task","titre","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,KAA3B,QAAwC,mBAAxC;;;AAEA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AAElD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,UAAU,GAAIC,CAAD,IAAOH,YAAY,CAAC,IAAD,CAAtC;;AACA,QAAMI,WAAW,GAAID,CAAD,IAAOH,YAAY,CAAC,KAAD,CAAvC;;AAEA,QAAMK,YAAY,GAAIF,CAAD,IAAO;AAG1BF,IAAAA,QAAQ,CAACK,IAAI,CAACC,MAAD,CAAL,CAAR,CACGC,IADH,CACSC,QAAD,IAAc;AAClBL,MAAAA,WAAW,GADO,CAElB;AACA;AACD,KALH,EAMGM,KANH,CAMUC,GAAD,IAAS;AACdP,MAAAA,WAAW;AACX,YAAMO,GAAN;AACD,KATH;AAUD,GAbD;;AAcA,sBACI;AAAA,2BACM,QAAC,KAAD;AACN,MAAA,OAAO,eACL,QAAC,QAAD,CAAU,IAAV;AAAe,QAAA,OAAO,EAAET,UAAxB;AAAoC,QAAA,IAAI,EAAC,QAAzC;AAAkD,QAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFI;AAIN,MAAA,IAAI,EAAEH,SAJA;AAKN,MAAA,OAAO,EAAEK,WALH;AAMN,MAAA,MAAM,EAAC,UAND;AAON,MAAA,IAAI,EAAC,MAPC;AAAA,8BASN,QAAC,KAAD,CAAO,MAAP;AAAA,kBAAeN,KAAK,CAACc;AAArB;AAAA;AAAA;AAAA;AAAA,cATM,eAUN,QAAC,KAAD,CAAO,OAAP;AAAA,+BACE;AAAA,wDACkC,GADlC,eAEE;AAAA,sBAASd,KAAK,CAACe,IAAN,CAAWC;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVM,eAgBN,QAAC,KAAD,CAAO,OAAP;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAET,YADX;AAEE,UAAA,MAAM,EAAEP,KAAK,CAACe,IAAN,CAAWE,GAFrB;AAGE,UAAA,KAAK,EAAC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEX,WAAjB;AAA8B,UAAA,KAAK,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBM;AAAA;AAAA;AAAA;AAAA;AAAA;AADN,mBADJ;AAkCH;;GAxDuBP,sB;UAGHJ,W;;;KAHGI,sB","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Dropdown, Modal } from 'semantic-ui-react';\r\n\r\nexport default function ModalConfirmDeleteTask(props) {\r\n\r\n    const [modalOpen, SetModalOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n  \r\n    const handleOpen = (e) => SetModalOpen(true);\r\n    const handleClose = (e) => SetModalOpen(false);\r\n  \r\n    const handleSubmit = (e) => {\r\n     \r\n  \r\n      dispatch(dele(params))\r\n        .then((response) => {\r\n          handleClose();\r\n          //props.onSeanceDeleted(response.data.result);\r\n          //this.props.socket.emit(\"delete\", response.data.result);\r\n        })\r\n        .catch((err) => {\r\n          handleClose();\r\n          throw err;\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n              <Modal\r\n        trigger={\r\n          <Dropdown.Item onClick={handleOpen} icon=\"delete\" text=\"Delete\" />\r\n        }\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <p>\r\n            Are you sure you want to delete{\" \"}\r\n            <strong>{props.task.titre}</strong>?\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            taskid={props.task._id}\r\n            color=\"red\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"black\">\r\n            No\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}