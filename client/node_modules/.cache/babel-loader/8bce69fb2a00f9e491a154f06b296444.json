{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\authentification\\\\ModalChangeProfilePicture.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Dimmer, Header, Image, Loader, Modal } from \"semantic-ui-react\";\nimport { UpdateProfilePicture } from \"../../redux/slices/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalChangeProfilePicture(props) {\n  _s();\n\n  const Resources = useSelector(state => state.user.Resources);\n  const [loader, SetLoader] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [picture, setPicture] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const updatePicture = () => {\n    var formData = new FormData();\n    SetLoader(true);\n    formData.append(\"multiple_resources\", picture);\n    console.log(\"this is pic\");\n    console.log(picture);\n    dispatch(UpdateProfilePicture(formData)).then(response => {\n      console.log(response);\n      SetLoader(false);\n      setOpen(false);\n    });\n  };\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {\n    if (status === \"done\") {\n      setPicture(file);\n    }\n\n    if (status === \"removed\") {\n      console.log(status, meta, file);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(Image, {\n        fluid: true,\n        centered: true,\n        style: {\n          margin: \"10px\",\n          height: \"250px\",\n          width: \"250px\"\n        },\n        label: {\n          as: \"a\",\n          color: \"red\",\n          content: \"Edit\",\n          icon: \"edit\",\n          ribbon: true\n        },\n        src: Resources\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Select a Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Default Profile Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We've found the following gravatar image associated with your e-mail address.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Is it okay to use this photo?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n            styles: {\n              dropzone: {\n                minHeight: 120,\n                maxHeight: 250\n              }\n            },\n            canCancel: true,\n            canRemove: true,\n            canRestart: true,\n            onChangeStatus: handleChangeStatus,\n            maxFiles: 1,\n            multiple: false,\n            accept: \"image/*\",\n            inputContent: (files, extra) => extra.reject ? \"Image files only\" : \"Drag Files\",\n            styles: {\n              dropzoneReject: {\n                borderColor: \"red\",\n                backgroundColor: \"#DAA\"\n              },\n              inputLabel: (files, extra) => extra.reject ? {\n                color: \"red\"\n              } : {}\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), loader ? /*#__PURE__*/_jsxDEV(Dimmer, {\n            active: true,\n            children: /*#__PURE__*/_jsxDEV(Loader, {\n              children: \"Preparing Files ... please wait !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Discard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Yep, Save\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: updatePicture,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalChangeProfilePicture, \"zceJeE33TGdV5mry9TIkMQVJSE8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ModalChangeProfilePicture;\nexport default ModalChangeProfilePicture;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalChangeProfilePicture\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/authentification/ModalChangeProfilePicture.js"],"names":["React","useState","Dropzone","useDispatch","useSelector","Button","Dimmer","Header","Image","Loader","Modal","UpdateProfilePicture","ModalChangeProfilePicture","props","Resources","state","user","loader","SetLoader","open","setOpen","picture","setPicture","dispatch","updatePicture","formData","FormData","append","console","log","then","response","handleChangeStatus","meta","file","status","margin","height","width","as","color","content","icon","ribbon","dropzone","minHeight","maxHeight","files","extra","reject","dropzoneReject","borderColor","backgroundColor","inputLabel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dimmer,\r\n  Header,\r\n  Image,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { UpdateProfilePicture } from \"../../redux/slices/User\";\r\n\r\nfunction ModalChangeProfilePicture(props) {\r\n  const Resources = useSelector((state) => state.user.Resources);\r\n  const [loader, SetLoader] = useState(false);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [picture, setPicture] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const updatePicture = () => {\r\n    var formData = new FormData();\r\n    SetLoader(true);\r\n    formData.append(\"multiple_resources\", picture);\r\n    console.log(\"this is pic\");\r\n    console.log(picture);\r\n    dispatch(UpdateProfilePicture(formData)).then((response) => {\r\n      console.log(response);\r\n      SetLoader(false);\r\n      setOpen(false);\r\n    });\r\n  };\r\n  const handleChangeStatus = ({ meta, file }, status) => {\r\n    if (status === \"done\") {\r\n      setPicture(file);\r\n    }\r\n    if (status === \"removed\") {\r\n      console.log(status, meta, file);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={\r\n          <Image\r\n            fluid\r\n            centered\r\n            style={{\r\n              margin: \"10px\",\r\n              height: \"250px\",\r\n              width: \"250px\",\r\n            }}\r\n            label={{\r\n              as: \"a\",\r\n              color: \"red\",\r\n              content: \"Edit\",\r\n              icon: \"edit\",\r\n              ribbon: true,\r\n            }}\r\n            src={Resources}\r\n          />\r\n        }\r\n      >\r\n        <Modal.Header>Select a Photo</Modal.Header>\r\n\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <Header>Default Profile Image</Header>\r\n            <p>\r\n              We've found the following gravatar image associated with your\r\n              e-mail address.\r\n            </p>\r\n            <p>Is it okay to use this photo?</p>\r\n            <br />\r\n            <br />\r\n\r\n            <br />\r\n            <Dropzone\r\n              styles={{ dropzone: { minHeight: 120, maxHeight: 250 } }}\r\n              canCancel={true}\r\n              canRemove={true}\r\n              canRestart={true}\r\n              onChangeStatus={handleChangeStatus}\r\n              maxFiles={1}\r\n              multiple={false}\r\n              accept=\"image/*\"\r\n              inputContent={(files, extra) =>\r\n                extra.reject ? \"Image files only\" : \"Drag Files\"\r\n              }\r\n              styles={{\r\n                dropzoneReject: { borderColor: \"red\", backgroundColor: \"#DAA\" },\r\n                inputLabel: (files, extra) =>\r\n                  extra.reject ? { color: \"red\" } : {},\r\n              }}\r\n            />\r\n            <br />\r\n            {loader ? (\r\n              <Dimmer active>\r\n                <Loader>Preparing Files ... please wait !</Loader>\r\n              </Dimmer>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => setOpen(false)}>\r\n            Discard\r\n          </Button>\r\n          <Button\r\n            content=\"Yep, Save\"\r\n            labelPosition=\"right\"\r\n            icon=\"checkmark\"\r\n            onClick={updatePicture}\r\n            color=\"red\"\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalChangeProfilePicture;\r\n"]},"metadata":{},"sourceType":"module"}