{"ast":null,"code":"var _jsxFileName = \"C:\\\\Smart-Virtual-Classroom\\\\client\\\\src\\\\Components\\\\Task\\\\TasksAssign.js\";\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react';\nimport { getTasksById } from '../../redux/slices/Grade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TasksAssign(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.taskAssign.length <= 0 ? /*#__PURE__*/_jsxDEV(Segment, {\n      placeholder: true,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        icon: true,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 3\n        }, this), \"No Assign Tasks For you.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 1\n    }, this) : props.taskAssign.map((task, index) => task.taskStatus === \"Attribué\" ? /*#__PURE__*/_jsxDEV(Link, {\n      to: task.task.typeTask === \"Quiz\" ? \"/TaskQuiz/\" + task._id : \"/TaskFileDetail/\" + task._id,\n      children: [/*#__PURE__*/_jsxDEV(Segment, {\n        color: \"grey\",\n        raised: true,\n        children: /*#__PURE__*/_jsxDEV(Item.Group, {\n          divided: true,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n              size: \"tiny\",\n              avatar: true,\n              src: process.env.PUBLIC_URL + task.task.typeTask === \"Quiz\" ? \"/quiz.jpg\" : \"file.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                as: \"a\",\n                children: task.task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"cinema\",\n                    children: moment(task.task.DateAt).format(\"YYYY-MM-DD\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                children: task.task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: task.taskStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 14\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = TasksAssign;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksAssign\");","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/Components/Task/TasksAssign.js"],"names":["moment","React","useEffect","useDispatch","useSelector","Link","Button","Divider","Header","Icon","Item","Label","Segment","Statistic","getTasksById","TasksAssign","props","taskAssign","length","map","task","index","taskStatus","typeTask","_id","process","env","PUBLIC_URL","title","DateAt","format","description"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,KAA9C,EAAqDC,OAArD,EAA8DC,SAA9D,QAA+E,mBAA/E;AACA,SAASC,YAAT,QAA6B,0BAA7B;;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAIvC,sBACI;AAAA,cACOA,KAAK,CAACC,UAAN,CAAiBC,MAAjB,IAA2B,CAA3B,gBAEf,QAAC,OAAD;AAAS,MAAA,WAAW,MAApB;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFe,GAUAF,KAAK,CAACC,UAAN,CAAiBE,GAAjB,CAAqB,CAACC,IAAD,EAAMC,KAAN,KACrBD,IAAI,CAACE,UAAL,KAAoB,UAApB,gBACC,QAAC,IAAD;AAAM,MAAA,EAAE,EAAEF,IAAI,CAACA,IAAL,CAAUG,QAAV,KAAqB,MAArB,GAA8B,eAAaH,IAAI,CAACI,GAAhD,GAAsD,qBAAmBJ,IAAI,CAACI,GAAxF;AAAA,8BACM,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,MAAf;AAAsB,QAAA,MAAM,MAA5B;AAAA,+BACC,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,MAAnB;AAAA,iCAEV,QAAC,IAAD;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,IAAI,EAAC,MAAjB;AACC,cAAA,MAAM,MADP;AACQ,cAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAA0BP,IAAI,CAACA,IAAL,CAAUG,QAApC,KAAiD,MAAjD,GAA0D,WAA1D,GAAwE;AADrF;AAAA;AAAA;AAAA;AAAA,oBADA,eAIC,QAAC,IAAD,CAAM,OAAN;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAa,gBAAA,EAAE,EAAC,GAAhB;AAAA,0BAAqBH,IAAI,CAACA,IAAL,CAAUQ;AAA/B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,uCACE;AAAA,+CAAQ;AAAM,oBAAA,SAAS,EAAC,QAAhB;AAAA,8BAA0B5B,MAAM,CAACoB,IAAI,CAACA,IAAL,CAAUS,MAAX,CAAN,CAAyBC,MAAzB,CAAgC,YAAhC;AAA1B;AAAA;AAAA;AAAA;AAAA,0BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE,QAAC,IAAD,CAAM,WAAN;AAAA,0BAAmBV,IAAI,CAACA,IAAL,CAAUW;AAA7B;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJD,eAgBG;AAAA,wBAAQX,IAAI,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,oBAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFU,WAAyBD,KAAzB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADN,eA2BH,QAAC,OAAD;AAAS,QAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,cA3BG;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBA+BW,qCAhCX;AAXP;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH;KAnDuBN,W","sourcesContent":["import moment from 'moment';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react'\nimport { getTasksById } from '../../redux/slices/Grade';\n\nexport default function TasksAssign(props) {\n\n   \n   \n    return (\n        <div>\n             { props.taskAssign.length <= 0 ? (\n\n<Segment placeholder>\n<Header icon>\n  <Icon name='tasks' />\n  No Assign Tasks For you.\n</Header>\n\n</Segment> \n                   ) : (\n               props.taskAssign.map((task,index) =>\n               task.taskStatus === \"Attribué\" ? (\n                <Link to={task.task.typeTask===\"Quiz\" ? \"/TaskQuiz/\"+task._id : \"/TaskFileDetail/\"+task._id}>  \n                      <Segment color=\"grey\" raised> \n                       <Item.Group divided key={index} >\n                     \n             <Item  >\n             <Item.Image size='tiny' \n              avatar src={process.env.PUBLIC_URL +  task.task.typeTask === \"Quiz\" ? \"/quiz.jpg\" : \"file.jpg\"} /> \n             \n              <Item.Content >\n                <Item.Header as='a'>{task.task.title}</Item.Header>\n                <Item.Meta>\n                  <span > <span className='cinema'>{moment(task.task.DateAt).format(\"YYYY-MM-DD\")}</span></span>\n                </Item.Meta>\n                <Item.Description>{task.task.description}</Item.Description>\n            \n             \n                \n             \n                </Item.Content>\n            \n                <label>{task.taskStatus}</label>\n                \n             </Item>\n             \n             </Item.Group>\n    \n             </Segment>\n             <Divider hidden></Divider>\n             </Link>\n             \n                     ) : (<></>)  ))}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}