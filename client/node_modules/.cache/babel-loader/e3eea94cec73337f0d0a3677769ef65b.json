{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { answersApi } from \"../../api/api\";\nlet initialState = {\n  answers: [],\n  errors: \"\"\n};\nconst answerSlice = createSlice({\n  name: \"answers\",\n  initialState,\n  reducers: {\n    getAnswers(state, action) {\n      state.answers = action.payload;\n    },\n\n    setErrors(state, action) {\n      state.errors = action.payload;\n    },\n\n    addAnswer: (state, action) => {\n      const payload = action.payload;\n      state.answers.push(payload);\n    }\n  }\n});\nexport const fetchAnswers = id => async dispatch => {\n  const res = answersApi.getAnswers(id);\n  res.then(data => {\n    dispatch(getAnswers(data));\n  });\n};\nexport const selectAnswer = state => {\n  return [state.answers.answers, state.answers.errors];\n};\nexport const {\n  getAnswers,\n  setErrors,\n  addAnswer\n} = answerSlice.actions;\nexport default answerSlice.reducer;","map":{"version":3,"sources":["C:/Smart-Virtual-Classroom/client/src/redux/slices/answerslice.js"],"names":["createSlice","answersApi","initialState","answers","errors","answerSlice","name","reducers","getAnswers","state","action","payload","setErrors","addAnswer","push","fetchAnswers","id","dispatch","res","then","data","selectAnswer","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAAnB;AAKA,MAAMC,WAAW,GAAEL,WAAW,CAAC;AAC3BM,EAAAA,IAAI,EAAC,SADsB;AAE3BJ,EAAAA,YAF2B;AAG3BK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,CAACC,KAAD,EAAOC,MAAP,EAAc;AACpBD,MAAAA,KAAK,CAACN,OAAN,GAAcO,MAAM,CAACC,OAArB;AACH,KAHI;;AAILC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACC,OAAtB;AACD,KANE;;AAOHE,IAAAA,SAAS,EAAC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;AACAF,MAAAA,KAAK,CAACN,OAAN,CAAcW,IAAd,CAAmBH,OAAnB;AACC;AAVA;AAHkB,CAAD,CAA9B;AAiBA,OAAO,MAAMI,YAAY,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACpD,QAAMC,GAAG,GAAIjB,UAAU,CAACO,UAAX,CAAsBQ,EAAtB,CAAb;AAEAE,EAAAA,GAAG,CAACC,IAAJ,CAASC,IAAI,IAAI;AACfH,IAAAA,QAAQ,CAACT,UAAU,CAACY,IAAD,CAAX,CAAR;AACD,GAFD;AAGA,CANG;AAOJ,OAAO,MAAMC,YAAY,GAAIZ,KAAD,IAAW;AAEtC,SAAO,CAACA,KAAK,CAACN,OAAN,CAAcA,OAAf,EAAwBM,KAAK,CAACN,OAAN,CAAcC,MAAtC,CAAP;AACA,CAHM;AAMV,OAAO,MAAM;AACTI,EAAAA,UADS;AAETI,EAAAA,SAFS;AAGTC,EAAAA;AAHS,IAIPR,WAAW,CAACiB,OAJX;AAKL,eAAejB,WAAW,CAACkB,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { answersApi } from \"../../api/api\";\r\n\r\nlet initialState = {\r\n  answers: [],\r\n  errors: \"\",\r\n};\r\n\r\nconst answerSlice =createSlice({\r\n    name:\"answers\",\r\n    initialState,\r\n    reducers:{\r\n        getAnswers(state,action){\r\n            state.answers=action.payload;\r\n        },\r\n        setErrors(state, action) {\r\n            state.errors = action.payload;\r\n          },\r\n          addAnswer:(state, action) => { \r\n            const payload = action.payload; \r\n            state.answers.push(payload); \r\n            }, \r\n        },\r\n});\r\n\r\nexport const fetchAnswers = (id) => async (dispatch) => { \r\n    const res =  answersApi.getAnswers(id); \r\n\r\n    res.then(data => {\r\n      dispatch(getAnswers(data));\r\n    })\r\n   };\r\n   export const selectAnswer = (state) => { \r\n \r\n    return [state.answers.answers, state.answers.errors]; \r\n   };\r\n\r\n    \r\nexport const {\r\n    getAnswers,\r\n    setErrors,\r\n    addAnswer,\r\n  } = answerSlice.actions;\r\n  export default answerSlice.reducer;"]},"metadata":{},"sourceType":"module"}