[{"C:\\Smart-Virtual-Classroom\\client\\src\\index.js":"1","C:\\Smart-Virtual-Classroom\\client\\src\\App.js":"2","C:\\Smart-Virtual-Classroom\\client\\src\\serviceWorker.js":"3","C:\\Smart-Virtual-Classroom\\client\\src\\reportWebVitals.js":"4","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\store.js":"5","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\reducers.js":"6","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Login.js":"7","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Private.js":"8","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Activate.js":"9","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Register.js":"10","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Admin.js":"11","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\ForgetPassword.js":"12","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\ResetPassword.js":"13","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\home\\HomeClass.js":"14","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\home\\Home.js":"15","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Room\\Room.js":"16","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Main\\Main.js":"17","C:\\Smart-Virtual-Classroom\\client\\src\\Routes\\AdminRoute.jsx":"18","C:\\Smart-Virtual-Classroom\\client\\src\\Routes\\PrivateRoute.jsx":"19","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Task.js":"20","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Quiz.js":"21","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Courses.js":"22","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Seance.js":"23","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\classsline.js":"24","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\notificationslice.js":"25","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\questionslice.js":"26","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\commentslice.js":"27","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Grade.js":"28","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\User.js":"29","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\answerslice.js":"30","C:\\Smart-Virtual-Classroom\\client\\src\\socket.js":"31","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\UpdateProfile.js":"32","C:\\Smart-Virtual-Classroom\\client\\src\\helpers\\auth.js":"33","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\sideBare\\sideBareComponent.js":"34","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\GetAllClassComponent.js":"35","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\AddUserToClassComponent.js":"36","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\MemberComponent.js":"37","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\TableSeance.js":"38","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\TableCourses.js":"39","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\CalendarComponent.js":"40","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ScreenRecord.js":"41","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\DetailCourses.js":"42","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ListCoursesBySeance.js":"43","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\BottomBar\\BottomBar.js":"44","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Chat\\Chat.js":"45","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Video\\VideoCard.js":"46","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\DetailsQuestionComponent.js":"47","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\AddPost.js":"48","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\QuestionComponent.js":"49","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Quiz\\Quiz.js":"50","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\QuestionByTags.js":"51","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Quiz\\EndQuiz.js":"52","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\DetailTask.js":"53","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\StepsBar.js":"54","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\DisplayTaskTeacher.js":"55","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\DisplayTaskStudent.js":"56","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TaskFileDetail.js":"57","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\header\\Header.js":"58","C:\\Smart-Virtual-Classroom\\client\\src\\api\\SeanceApi.js":"59","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\ModalChangePassword.js":"60","C:\\Smart-Virtual-Classroom\\client\\src\\api\\api.js":"61","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\EditQuestionComponent.js":"62","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\AddQuestionComponent.js":"63","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\AllTasksStudent.js":"64","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TasksAssign.js":"65","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\MissingTasks.js":"66","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TasksRemis.js":"67","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TaskFile.js":"68","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\SendTask.js":"69","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Quiz\\AddQuiz.js":"70","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalCourses.js":"71","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalSeance.js":"72","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\AddTask.js":"73","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\UncorrectedTask.js":"74","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\CorrectedTask.js":"75","C:\\Smart-Virtual-Classroom\\client\\src\\utlis\\FileUpload.js":"76","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalConfirmDeleteCour.js":"77","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalCoursesEdit.js":"78","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\CommentChat.js":"79","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\answer\\EditAnswer.js":"80","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Comment\\CommentComponent.js":"81","C:\\Smart-Virtual-Classroom\\client\\src\\utlis\\FileUploadEdit.js":"82","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\FormCourses.js":"83","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\FormSeance.js":"84","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\FormCoursesEdit.js":"85","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Comment\\EditComment.js":"86","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\AppointmentTooltip.js":"87","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\Appointment.js":"88","C:\\Smart-Virtual-Classroom\\client\\src\\api\\data.js":"89","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalConfirmDelete.js":"90","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\AddClassComponent.js":"91","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\ArchieveClassComponent.js":"92","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\EditComponent.js":"93","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\InvitationClassComonent.js":"94","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\ModalChangeProfilePicture.js":"95","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\container\\WhiteBoard.js":"96","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\board\\Board.jsx":"97","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalConfirmDeleteTask.js":"98","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalUpdateTask.js":"99","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\FormTask.js":"100","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalAssignTask.js":"101","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\home\\HomeCloser.js":"102","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\home\\404.js":"103","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalTaskFile.js":"104","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalTask.js":"105","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\BottomBar\\ListUsers.js":"106","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TaskQuizDetail.js":"107","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\UserQuestion.js":"108","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ReminderTask.js":"109","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\GetAllArchivedClassComponent.js":"110","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\ActivedClassComponent.js":"111","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\StateTask.js":"112"},{"size":696,"mtime":1618967818367,"results":"113","hashOfConfig":"114"},{"size":5364,"mtime":1620008770081,"results":"115","hashOfConfig":"114"},{"size":5086,"mtime":1618967818397,"results":"116","hashOfConfig":"114"},{"size":375,"mtime":1618967818396,"results":"117","hashOfConfig":"114"},{"size":139,"mtime":1618967818395,"results":"118","hashOfConfig":"114"},{"size":865,"mtime":1618967818378,"results":"119","hashOfConfig":"114"},{"size":8884,"mtime":1619603634184,"results":"120","hashOfConfig":"114"},{"size":6112,"mtime":1619827040914,"results":"121","hashOfConfig":"114"},{"size":3733,"mtime":1618967818304,"results":"122","hashOfConfig":"114"},{"size":6322,"mtime":1619603634186,"results":"123","hashOfConfig":"114"},{"size":6117,"mtime":1618967818305,"results":"124","hashOfConfig":"114"},{"size":3128,"mtime":1619603634182,"results":"125","hashOfConfig":"114"},{"size":3958,"mtime":1619603634188,"results":"126","hashOfConfig":"114"},{"size":1740,"mtime":1620008770091,"results":"127","hashOfConfig":"114"},{"size":5153,"mtime":1620165086969,"results":"128","hashOfConfig":"114"},{"size":12157,"mtime":1619592887367,"results":"129","hashOfConfig":"114"},{"size":1591,"mtime":1618967818281,"results":"130","hashOfConfig":"114"},{"size":649,"mtime":1618967818347,"results":"131","hashOfConfig":"114"},{"size":623,"mtime":1618967818348,"results":"132","hashOfConfig":"114"},{"size":8944,"mtime":1620147291166,"results":"133","hashOfConfig":"114"},{"size":1045,"mtime":1619101809046,"results":"134","hashOfConfig":"114"},{"size":9280,"mtime":1618967818380,"results":"135","hashOfConfig":"114"},{"size":5893,"mtime":1618967818384,"results":"136","hashOfConfig":"114"},{"size":4717,"mtime":1620008770099,"results":"137","hashOfConfig":"114"},{"size":1069,"mtime":1620057230841,"results":"138","hashOfConfig":"114"},{"size":2218,"mtime":1618967818394,"results":"139","hashOfConfig":"114"},{"size":1154,"mtime":1618967818391,"results":"140","hashOfConfig":"114"},{"size":5016,"mtime":1620144050161,"results":"141","hashOfConfig":"114"},{"size":1798,"mtime":1618967818387,"results":"142","hashOfConfig":"114"},{"size":1033,"mtime":1618967818389,"results":"143","hashOfConfig":"114"},{"size":240,"mtime":1618967818403,"results":"144","hashOfConfig":"114"},{"size":6736,"mtime":1618967818317,"results":"145","hashOfConfig":"114"},{"size":2050,"mtime":1618967818363,"results":"146","hashOfConfig":"114"},{"size":10570,"mtime":1620057230838,"results":"147","hashOfConfig":"114"},{"size":6866,"mtime":1620008770089,"results":"148","hashOfConfig":"114"},{"size":3476,"mtime":1620005403720,"results":"149","hashOfConfig":"114"},{"size":4581,"mtime":1620005403728,"results":"150","hashOfConfig":"114"},{"size":4570,"mtime":1618967818331,"results":"151","hashOfConfig":"114"},{"size":19945,"mtime":1619800260166,"results":"152","hashOfConfig":"114"},{"size":3994,"mtime":1619828604547,"results":"153","hashOfConfig":"114"},{"size":1478,"mtime":1618967818330,"results":"154","hashOfConfig":"114"},{"size":12768,"mtime":1619800260162,"results":"155","hashOfConfig":"114"},{"size":20007,"mtime":1619800260164,"results":"156","hashOfConfig":"114"},{"size":9639,"mtime":1619571323116,"results":"157","hashOfConfig":"114"},{"size":3862,"mtime":1618967818267,"results":"158","hashOfConfig":"114"},{"size":510,"mtime":1618967818302,"results":"159","hashOfConfig":"114"},{"size":25266,"mtime":1620057230833,"results":"160","hashOfConfig":"114"},{"size":3501,"mtime":1619847073307,"results":"161","hashOfConfig":"114"},{"size":10935,"mtime":1620057230836,"results":"162","hashOfConfig":"114"},{"size":6251,"mtime":1619855016129,"results":"163","hashOfConfig":"114"},{"size":10714,"mtime":1620002361927,"results":"164","hashOfConfig":"114"},{"size":6047,"mtime":1619909117707,"results":"165","hashOfConfig":"114"},{"size":2444,"mtime":1620069446800,"results":"166","hashOfConfig":"114"},{"size":3005,"mtime":1620093954402,"results":"167","hashOfConfig":"114"},{"size":4533,"mtime":1620104778086,"results":"168","hashOfConfig":"114"},{"size":2405,"mtime":1619565795168,"results":"169","hashOfConfig":"114"},{"size":11234,"mtime":1620060492344,"results":"170","hashOfConfig":"114"},{"size":3019,"mtime":1620057304332,"results":"171","hashOfConfig":"114"},{"size":614,"mtime":1618967818349,"results":"172","hashOfConfig":"114"},{"size":4267,"mtime":1618967818312,"results":"173","hashOfConfig":"114"},{"size":5366,"mtime":1620005403729,"results":"174","hashOfConfig":"114"},{"size":3929,"mtime":1620057230834,"results":"175","hashOfConfig":"114"},{"size":4614,"mtime":1619847073309,"results":"176","hashOfConfig":"114"},{"size":2104,"mtime":1620001469237,"results":"177","hashOfConfig":"114"},{"size":2016,"mtime":1619911327511,"results":"178","hashOfConfig":"114"},{"size":1982,"mtime":1619911327511,"results":"179","hashOfConfig":"114"},{"size":2005,"mtime":1619911431407,"results":"180","hashOfConfig":"114"},{"size":1683,"mtime":1619745495784,"results":"181","hashOfConfig":"114"},{"size":8125,"mtime":1619843643377,"results":"182","hashOfConfig":"114"},{"size":7040,"mtime":1620094037808,"results":"183","hashOfConfig":"114"},{"size":900,"mtime":1618967818328,"results":"184","hashOfConfig":"114"},{"size":918,"mtime":1618967818329,"results":"185","hashOfConfig":"114"},{"size":4510,"mtime":1619844562016,"results":"186","hashOfConfig":"114"},{"size":12300,"mtime":1620059595121,"results":"187","hashOfConfig":"114"},{"size":9082,"mtime":1620059643450,"results":"188","hashOfConfig":"114"},{"size":5275,"mtime":1620002361937,"results":"189","hashOfConfig":"114"},{"size":1970,"mtime":1618967818327,"results":"190","hashOfConfig":"114"},{"size":992,"mtime":1618967818328,"results":"191","hashOfConfig":"114"},{"size":3262,"mtime":1618967818318,"results":"192","hashOfConfig":"114"},{"size":3531,"mtime":1620057230829,"results":"193","hashOfConfig":"114"},{"size":4143,"mtime":1620093536267,"results":"194","hashOfConfig":"114"},{"size":7976,"mtime":1620057230842,"results":"195","hashOfConfig":"114"},{"size":6292,"mtime":1618972987117,"results":"196","hashOfConfig":"114"},{"size":4239,"mtime":1618967818324,"results":"197","hashOfConfig":"114"},{"size":10854,"mtime":1618967818322,"results":"198","hashOfConfig":"114"},{"size":2759,"mtime":1619850388797,"results":"199","hashOfConfig":"114"},{"size":360,"mtime":1618967818271,"results":"200","hashOfConfig":"114"},{"size":831,"mtime":1618967818270,"results":"201","hashOfConfig":"114"},{"size":324,"mtime":1618967818350,"results":"202","hashOfConfig":"114"},{"size":1751,"mtime":1618967818326,"results":"203","hashOfConfig":"114"},{"size":6074,"mtime":1620005403718,"results":"204","hashOfConfig":"114"},{"size":2046,"mtime":1620008770085,"results":"205","hashOfConfig":"114"},{"size":5973,"mtime":1620005403723,"results":"206","hashOfConfig":"114"},{"size":4486,"mtime":1620005403726,"results":"207","hashOfConfig":"114"},{"size":3631,"mtime":1618967818312,"results":"208","hashOfConfig":"114"},{"size":1736,"mtime":1618969117025,"results":"209","hashOfConfig":"114"},{"size":3098,"mtime":1618964569464,"results":"210","hashOfConfig":"114"},{"size":1759,"mtime":1619132297064,"results":"211","hashOfConfig":"114"},{"size":1137,"mtime":1619912672666,"results":"212","hashOfConfig":"114"},{"size":4137,"mtime":1620058572443,"results":"213","hashOfConfig":"114"},{"size":1517,"mtime":1620143377929,"results":"214","hashOfConfig":"114"},{"size":11664,"mtime":1620000870440,"results":"215","hashOfConfig":"114"},{"size":1015,"mtime":1619401666274,"results":"216","hashOfConfig":"114"},{"size":10550,"mtime":1620104538107,"results":"217","hashOfConfig":"114"},{"size":3563,"mtime":1620148628917,"results":"218","hashOfConfig":"114"},{"size":744,"mtime":1619572601481,"results":"219","hashOfConfig":"114"},{"size":5571,"mtime":1620060831724,"results":"220","hashOfConfig":"114"},{"size":10287,"mtime":1620002361930,"results":"221","hashOfConfig":"114"},{"size":2024,"mtime":1620166174366,"results":"222","hashOfConfig":"114"},{"size":3962,"mtime":1620008770087,"results":"223","hashOfConfig":"114"},{"size":2069,"mtime":1620008770083,"results":"224","hashOfConfig":"114"},{"size":1673,"mtime":1620069309030,"results":"225","hashOfConfig":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"229"},"u86ygg",{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"229"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"229"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"229"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"229"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"229"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"229"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"229"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"229"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"229"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"229"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"229"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"229"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"229"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"229"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"229"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"229"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"229"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"229"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"229"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"229"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"229"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"229"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"229"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"229"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"229"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"229"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"229"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"229"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"229"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"229"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"229"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"229"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"229"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"229"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"229"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"229"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"229"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"229"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"229"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"229"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"229"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"229"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"229"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"229"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"229"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"229"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"229"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"229"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"229"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"229"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"229"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"229"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"229"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"229"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"229"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"229"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"229"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"229"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"229"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"229"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"229"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"229"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"229"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"229"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"229"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"229"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"229"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"229"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"229"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"229"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"229"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"229"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"229"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"229"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"229"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"229"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"229"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"229"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"229"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"229"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"229"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"229"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"229"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"229"},"C:\\Smart-Virtual-Classroom\\client\\src\\index.js",["536"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport store from \"./redux/store\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorker.unregister();\r\n",["537","538"],"C:\\Smart-Virtual-Classroom\\client\\src\\App.js",["539"],"import React from \"react\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\nimport ru from \"javascript-time-ago/locale/ru\";\r\nimport TimeAgo from \"javascript-time-ago\";\r\nimport Login from \"./Components/authentification/Login\";\r\nimport Register from \"./Components/authentification/Register\";\r\nimport Activate from \"./Components/authentification/Activate\";\r\nimport Private from \"./Components/authentification/Private\";\r\nimport Admin from \"./Components/authentification/Admin\";\r\nimport ForgetPassword from \"./Components/authentification/ForgetPassword\";\r\nimport ResetPassword from \"./Components/authentification/ResetPassword\";\r\nimport PrivateRoute from \"./Routes/PrivateRoute\";\r\nimport AdminRoute from \"./Routes/AdminRoute\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Components/home/Home\";\r\nimport HomeCloser from \"./Components/home/HomeCloser\";\r\nimport HomeClass from \"./Components/home/HomeClass\";\r\nimport \"./material.css\";\r\nimport Main from \"./Components/Main/Main\";\r\nimport Room from \"./Components/Room/Room\";\r\nimport WhiteBoard from \"./Components/container/WhiteBoard\";\r\nimport Page_404 from \"./Components/home/404\";\r\n\r\nTimeAgo.addDefaultLocale(en);\r\nTimeAgo.addLocale(ru);\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Switch>\r\n         \r\n          <Route path=\"/\" exact render={(props) => <HomeCloser {...props} />} />\r\n          <Route path=\"/login\" exact render={(props) => <Login {...props} />} />\r\n          <Route path=\"/register\" render={(props) => <Register {...props} />} />\r\n          <Route\r\n            path=\"/updateProfile/:id\"\r\n            exact\r\n            render={(props) => <HomeClass {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/DetailTask/:id\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/TaskFileDetail/:id\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n         <Route\r\n              path=\"/TaskQuizDetail/:id\"\r\n              exact\r\n              render={(props) => <Home {...props} />}\r\n            />\r\n          <Route\r\n            path=\"/TaskQuiz/:id\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n             <Route\r\n            path=\"/Result/:id\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/TaskListStudent\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/TaskList\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/AddTask\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/users/password/forget\"\r\n            exact\r\n            render={(props) => <ForgetPassword {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/api/users/password/reset/:token\"\r\n            exact\r\n            render={(props) => <ResetPassword {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/api/users/activate/:token\"\r\n            exact\r\n            render={(props) => <Activate {...props} />}\r\n          />\r\n          <Route path=\"/stream\" exact render={(props) => <Home {...props} />} />\r\n          <Route\r\n            path=\"/seance/:titre/:id\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/detailCourses/:id\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/FAQ/:id\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n\r\n          <Route path=\"/FAQ\" exact render={(props) => <Home {...props} />} />\r\n          <Route\r\n            path=\"/tags/:id/:tag\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/members\"\r\n            exact\r\n            render={(props) => <Home {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/schedule\"\r\n            exact\r\n            render={(props) => <HomeClass {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/class\"\r\n            exact\r\n            render={(props) => <HomeClass {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/archiveclass\"\r\n            exact\r\n            render={(props) => <HomeClass {...props} />}\r\n          />\r\n              <Route\r\n            path=\"/WhiteBoard\"\r\n            exact\r\n            render={(props) => <WhiteBoard {...props} />}\r\n          />\r\n               <Route\r\n            path=\"/404\"\r\n            exact\r\n            render={(props) => <Page_404 {...props} />}\r\n          />\r\n          <Route exact path=\"/meet\" component={Main} />\r\n          <Route exact path=\"/MyPosts\" component={Home} />\r\n\r\n          <Route exact path=\"/room/:roomId\" component={Room} />\r\n          <PrivateRoute path=\"/private\" exact component={Private} />\r\n          <AdminRoute path=\"/admin\" exact component={Admin} />\r\n          <Redirect to=\"/404\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\serviceWorker.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\reportWebVitals.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\store.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\reducers.js",["540"],"import { combineReducers } from \"redux\";\r\n\r\nimport classs from \"./slices/classsline\"; \r\nimport seance from \"./slices/Seance\";\r\nimport courses from \"./slices/Courses\";\r\nimport questions from \"./slices/questionslice\";\r\nimport answers from \"./slices/answerslice\";\r\nimport user from \"./slices/User\";\r\nimport tasks from './slices/Task.js'\r\nimport listQuiz from './slices/Quiz.js'\r\nimport grades from './slices/Grade'\r\nimport comments from './slices/commentslice'\r\nimport notifications from \"./slices/notificationslice\";\r\n\r\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nconst customizedMiddleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\nconst reducers = combineReducers({\r\n  seance,\r\n  courses,\r\n  questions,\r\n  answers,\r\n  user,\r\n  tasks ,\r\n  listQuiz,\r\n  grades,\r\n  classs,\r\n  comments,\r\n  notifications,\r\n});\r\nexport default reducers;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Login.js",["541"],"import React, { useState } from \"react\";\r\nimport authSvg from \"../../assests/auth.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { authenticate, isAuth } from \"../../helpers/auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\r\n\r\nconst Login = ({ history }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password1: \"\",\r\n    textChange: \"Sign In\",\r\n  });\r\n  const { email, password1, textChange } = formData;\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n\r\n  const sendGoogleToken = (tokenId) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/api/googlelogin`, {\r\n        idToken: tokenId,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        informParent(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"GOOGLE SIGNIN ERROR\", error.response);\r\n      });\r\n  };\r\n  const informParent = (response) => {\r\n    authenticate(response, () => {\r\n      isAuth() && isAuth().role === \"admin\"\r\n        ? history.push(\"/private\")\r\n        : history.push(\"/private\");\r\n    });\r\n  };\r\n\r\n  const sendFacebookToken = (userID, accessToken) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/api/facebooklogin`, {\r\n        userID,\r\n        accessToken,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        informParent(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"GOOGLE SIGNIN ERROR\", error.response);\r\n      });\r\n  };\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n    sendGoogleToken(response.tokenId);\r\n  };\r\n\r\n  const responseFacebook = (response) => {\r\n    console.log(response);\r\n    sendFacebookToken(response.userID, response.accessToken);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(`${process.env.REACT_APP_API_URL}/api/login`);\r\n    e.preventDefault();\r\n    if (email && password1) {\r\n      setFormData({ ...formData, textChange: \"Submitting\" });\r\n      axios\r\n        .post(`${process.env.REACT_APP_API_URL}/api/login`, {\r\n          email,\r\n          password: password1,\r\n        })\r\n        .then((res) => {\r\n          authenticate(res, () => {\r\n            setFormData({\r\n              ...formData,\r\n              email: \"\",\r\n              password1: \"\",\r\n              textChange: \"Submitted\",\r\n            });\r\n            isAuth() && isAuth().role === \"Teacher\"\r\n              ? history.push(\"/class\")\r\n              : history.push(\"/class\");\r\n         //   toast.success(`Hey ${res.data.user.name}, Welcome back!`);\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setFormData({\r\n            ...formData,\r\n            email: \"\",\r\n            password1: \"\",\r\n            textChange: \"Sign In\",\r\n          });\r\n          console.log(err.response);\r\n        //  toast.error(err.response.data.errors);\r\n        });\r\n    } else {\r\n      toast.error(\"Please fill all fields\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n      {isAuth() ? <Redirect to=\"/\" /> : null}\r\n      <ToastContainer />\r\n      <div className=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\">\r\n        <div className=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n          <div className=\"mt-12 flex flex-col items-center\">\r\n            <h1 className=\"text-2xl xl:text-3xl font-extrabold\">\r\n              Sign In for Clozer\r\n            </h1>\r\n            <div className=\"w-full flex-1 mt-8 text-indigo-500\">\r\n              <div className=\"flex flex-col items-center\">\r\n                <GoogleLogin\r\n                  clientId={`${process.env.REACT_APP_GOOGLE_CLIENT}`}\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle}\r\n                  cookiePolicy={\"single_host_origin\"}\r\n                  render={(renderProps) => (\r\n                    <button\r\n                    style={{backgroundColor:\"#FF9595\"}}\r\n\r\n                      onClick={renderProps.onClick}\r\n                      disabled={renderProps.disabled}\r\n                      className=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline\"\r\n                    >\r\n                      <div className=\" p-2 rounded-full \">\r\n                        <i className=\"fab fa-google \" />\r\n                      </div>\r\n                      <span className=\"ml-4\">Sign In with Google</span>\r\n                    </button>\r\n                  )}\r\n                ></GoogleLogin>\r\n                <FacebookLogin\r\n                  appId={`${process.env.REACT_APP_FACEBOOK_CLIENT}`}\r\n                  autoLoad={false}\r\n                  callback={responseFacebook}\r\n                  render={(renderProps) => (\r\n                    <button\r\n                    style={{backgroundColor:\"#FF9595\"}}\r\n\r\n                      onClick={renderProps.onClick}\r\n                      className=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5\"\r\n                    >\r\n                      <div className=\" p-2 rounded-full \">\r\n                        <i className=\"fab fa-facebook\" />\r\n                      </div>\r\n                      <span className=\"ml-4\">Sign In with Facebook</span>\r\n                    </button>\r\n                  )}\r\n                />\r\n\r\n                <a\r\n                                    style={{backgroundColor:\"#FF9595\"}}\r\n\r\n                  className=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3\r\n           bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5\"\r\n                  href=\"/register\"\r\n                  target=\"_self\"\r\n                >\r\n                  <i className=\"fas fa-user-plus fa 1x w-6  -ml-2 text-indigo-500\" />\r\n                  <span className=\"ml-4\">Sign Up</span>\r\n                </a>\r\n              </div>\r\n              <div className=\"my-12 border-b text-center\">\r\n                <div className=\"leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2\">\r\n                  Or sign In with e-mail\r\n                </div>\r\n              </div>\r\n              <form\r\n                className=\"mx-auto max-w-xs relative \"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={handleChange(\"email\")}\r\n                  value={email}\r\n                />\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={handleChange(\"password1\")}\r\n                  value={password1}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                      style={{backgroundColor:\"red\"}}\r\n                      className=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt  w-6  -ml-2\" />\r\n                  <span className=\"ml-3\">Sign In</span>\r\n                </button>\r\n                <Link\r\n                  to=\"/users/password/forget\"\r\n                  className=\"no-underline hover:underline text-indigo-500 text-md text-right absolute right-0  mt-2\"\r\n                >\r\n                  Forget password?\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n          <div\r\n            className=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n            style={{ backgroundImage: `url(${authSvg})` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Private.js",["542"],"import React, { useState, useEffect } from \"react\";\r\nimport authSvg from \"../../assests/update.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { updateUser, isAuth, getCookie, signout } from \"../../helpers/auth\";\r\n\r\nconst Private = ({ history }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password1: \"\",\r\n    textChange: \"Update\",\r\n    role: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadProfile();\r\n  }, []);\r\n\r\n  const loadProfile = () => {\r\n    const token = getCookie(\"token\");\r\n    axios\r\n      .get(`https://closer-server.herokuapp.com/api/user/${isAuth()._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const { role, name, email } = res.data;\r\n        setFormData({ ...formData, role, name, email });\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`Error To Your Information ${err.response.statusText}`);\r\n        if (err.response.status === 401) {\r\n          signout(() => {\r\n            history.push(\"/login\");\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const { name, email, password1, textChange, role } = formData;\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    const token = getCookie(\"token\");\r\n    console.log(token);\r\n    e.preventDefault();\r\n    setFormData({ ...formData, textChange: \"Submitting\" });\r\n    axios\r\n      .put(\r\n        `${process.env.REACT_APP_API_URL}/api/user/update`,\r\n        {\r\n          name,\r\n          email,\r\n          password: password1,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        updateUser(res, () => {\r\n          toast.success(\"Profile Updated Successfully\");\r\n          setFormData({ ...formData, textChange: \"Update\" });\r\n          history.push(\"/class\");\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n      <ToastContainer />\r\n      <div className=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\">\r\n        <div className=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n          <div className=\"mt-12 flex flex-col items-center\">\r\n            <h1 className=\"text-2xl xl:text-3xl font-extrabold\">\r\n              Profile Update\r\n            </h1>\r\n\r\n            <form\r\n              className=\"w-full flex-1 mt-8 text-indigo-500\"\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <div className=\"mx-auto max-w-xs relative \">\r\n                <input\r\n                  disabled\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                  type=\"text\"\r\n                  placeholder=\"Role\"\r\n                  value={role}\r\n                />\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  disabled\r\n                  value={email}\r\n                />\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  onChange={handleChange(\"name\")}\r\n                  value={name}\r\n                />\r\n\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={handleChange(\"password1\")}\r\n                  value={password1}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                >\r\n                  <i className=\"fas fa-user-plus fa 1x w-6  -ml-2\" />\r\n                  <span className=\"ml-3\">{textChange}</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"my-12 border-b text-center\">\r\n                <div className=\"leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2\">\r\n                  Go To Home\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col items-center\">\r\n                <a\r\n                  className=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3\r\n           bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5\"\r\n                  href=\"/\"\r\n                  target=\"_self\"\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt fa 1x w-6  -ml-2 text-indigo-500\" />\r\n                  <span className=\"ml-4\">Home</span>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n          <div\r\n            className=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n            style={{ backgroundImage: `url(${authSvg})` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Private;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Activate.js",["543","544","545","546"],"import React, { useState, useEffect } from \"react\";\r\nimport authSvg from \"../../assests/welcome.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { authenticate, isAuth } from \"../../helpers/auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst Activate = ({ match }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    show: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { name } = jwt.decode(token);\r\n\r\n    if (token) {\r\n      setFormData({ ...formData, name, token });\r\n    }\r\n\r\n    console.log(token, name);\r\n  }, [match.params]);\r\n  const { name, token, show } = formData;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/api/activation`, {\r\n        token,\r\n      })\r\n      .then((res) => {\r\n        setFormData({\r\n          ...formData,\r\n          show: false,\r\n        });\r\n\r\n        toast.success(res.data.message);\r\n        <Redirect to=\"/\" />;\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n      {isAuth() ? <Redirect to=\"/\" /> : null}\r\n      <ToastContainer />\r\n      <div className=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\">\r\n        <div className=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n          <div className=\"mt-12 flex flex-col items-center\">\r\n            <h1 className=\"text-2xl xl:text-3xl font-extrabold\">\r\n              Welcome {name}\r\n            </h1>\r\n\r\n            <form\r\n              className=\"w-full flex-1 mt-8 text-indigo-500\"\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <div className=\"mx-auto max-w-xs relative \">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                >\r\n                  <i className=\"fas fa-user-plus fa 1x w-6  -ml-2\" />\r\n                  <span className=\"ml-3\">Activate your Account</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"my-12 border-b text-center\">\r\n                <div className=\"leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2\">\r\n                  Or sign up again\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col items-center\">\r\n                <a\r\n                  className=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3\r\n           bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5\"\r\n                  href=\"/register\"\r\n                  target=\"_self\"\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt fa 1x w-6  -ml-2 text-indigo-500\" />\r\n                  <span className=\"ml-4\">Sign Up</span>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n          <div\r\n            className=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n            style={{ backgroundImage: `url(${authSvg})` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activate;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Register.js",["547","548"],"import React, { useState } from \"react\";\r\nimport authSvg from \"../../assests/auth.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { authenticate, isAuth } from \"../../helpers/auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n\r\n    textChange: \"Sign Up\",\r\n  });\r\n\r\n  const { name, email, password1, password2, textChange } = formData;\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(process.env.REACT_APP_API_URL);\r\n    console.log(process.env.REACT_APP_GOOGLE_CLIENT);\r\n    console.log(process.env.REACT_APP_FACEBOOK_CLIENT);\r\n    e.preventDefault();\r\n    if (name && email && password1) {\r\n      if (password1 === password2) {\r\n        setFormData({ ...formData, textChange: \"Submitting\" });\r\n\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/api/register`, {\r\n            name,\r\n            email,\r\n            password: password1,\r\n          })\r\n          .then((res) => {\r\n            setFormData({\r\n              ...formData,\r\n              name: \"\",\r\n              email: \"\",\r\n              password1: \"\",\r\n              password2: \"\",\r\n              textChange: \"Submitted\",\r\n            });\r\n\r\n            toast.success(res.data.message);\r\n          })\r\n          .catch((err) => {\r\n            setFormData({\r\n              ...formData,\r\n              name: \"\",\r\n              email: \"\",\r\n              password1: \"\",\r\n              password2: \"\",\r\n              picture: \"\",\r\n              textChange: \"Sign Up\",\r\n            });\r\n            console.log(err.response);\r\n            toast.error(err.response.data.errors);\r\n          });\r\n      } else {\r\n        toast.error(\"Passwords don't matches\");\r\n      }\r\n    } else {\r\n      toast.error(\"Please fill all fields\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n      {isAuth() ? <Redirect to=\"/\" /> : null}\r\n      <ToastContainer />\r\n      <div className=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\">\r\n        <div className=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n          <div className=\"mt-12 flex flex-col items-center\">\r\n            <h1 className=\"text-2xl xl:text-3xl font-extrabold\">\r\n              Sign Up for Clozer\r\n            </h1>\r\n\r\n            <form\r\n              className=\"w-full flex-1 mt-8 text-indigo-500\"\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <div className=\"mx-auto max-w-xs relative \">\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  onChange={handleChange(\"name\")}\r\n                  value={name}\r\n                />\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={handleChange(\"email\")}\r\n                  value={email}\r\n                />\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={handleChange(\"password1\")}\r\n                  value={password1}\r\n                />\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm-Password\"\r\n                  onChange={handleChange(\"password2\")}\r\n                  value={password2}\r\n                />\r\n\r\n                <button\r\n                    style={{backgroundColor:\"red\"}}\r\n                    type=\"submit\"\r\n                  className=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                >\r\n                  <i className=\"fas fa-user-plus fa 1x w-6  -ml-2\" />\r\n                  <span className=\"ml-3\">{textChange}</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"my-12 border-b text-center\">\r\n                <div className=\"leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2\">\r\n                  Or sign with email or social login\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col items-center\">\r\n                <a\r\n                                    style={{backgroundColor:\"#FF9595\"}}\r\n\r\n                  className=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3\r\n           bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5\"\r\n                  href=\"/login\"\r\n                  target=\"_self\"\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt fa 1x w-6  -ml-2 text-indigo-500\" />\r\n                  <span className=\"ml-4\">Sign In</span>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n          <div\r\n            className=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n            style={{ backgroundImage: `url(${authSvg})` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\Admin.js",["549","550","551"],"import React, { useState, useEffect } from \"react\";\r\nimport authSvg from \"../../assests/update.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { updateUser, isAuth, getCookie, signout } from \"../../helpers/auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst Admin = ({ history }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password1: \"\",\r\n    textChange: \"Update\",\r\n    role: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadProfile();\r\n  }, []);\r\n\r\n  const loadProfile = () => {\r\n    const token = getCookie(\"token\");\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}/user/${isAuth()._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const { role, name, email } = res.data;\r\n        setFormData({ ...formData, role, name, email });\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`Error To Your Information ${err.response.statusText}`);\r\n        if (err.response.status === 401) {\r\n          signout(() => {\r\n            history.push(\"/login\");\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const { name, email, password1, textChange, role } = formData;\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    const token = getCookie(\"token\");\r\n    console.log(token);\r\n    e.preventDefault();\r\n    setFormData({ ...formData, textChange: \"Submitting\" });\r\n    axios\r\n      .put(\r\n        `${process.env.REACT_APP_API_URL}/api/admin/update`,\r\n        {\r\n          name,\r\n          email,\r\n          password: password1,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        updateUser(res, () => {\r\n          toast.success(\"Profile Updated Successfully\");\r\n          setFormData({ ...formData, textChange: \"Update\" });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n      <ToastContainer />\r\n      <div className=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\">\r\n        <div className=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n          <div className=\"mt-12 flex flex-col items-center\">\r\n            <h1 className=\"text-2xl xl:text-3xl font-extrabold\">\r\n              Admin Update\r\n            </h1>\r\n\r\n            <form\r\n              className=\"w-full flex-1 mt-8 text-indigo-500\"\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <div className=\"mx-auto max-w-xs relative \">\r\n                <input\r\n                  disabled\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                  type=\"text\"\r\n                  placeholder=\"Role\"\r\n                  value={role}\r\n                />\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  disabled\r\n                  value={email}\r\n                />\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  onChange={handleChange(\"name\")}\r\n                  value={name}\r\n                />\r\n\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={handleChange(\"password1\")}\r\n                  value={password1}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                >\r\n                  <i className=\"fas fa-user-plus fa 1x w-6  -ml-2\" />\r\n                  <span className=\"ml-3\">{textChange}</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"my-12 border-b text-center\">\r\n                <div className=\"leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2\">\r\n                  Go To Home\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col items-center\">\r\n                <a\r\n                  className=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3\r\n           bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5\"\r\n                  href=\"/\"\r\n                  target=\"_self\"\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt fa 1x w-6  -ml-2 text-indigo-500\" />\r\n                  <span className=\"ml-4\">Home</span>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n          <div\r\n            className=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n            style={{ backgroundImage: `url(${authSvg})` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\ForgetPassword.js",["552"],"import React, { useState } from \"react\";\r\nimport authSvg from \"../../assests/forget.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\nconst ForgetPassword = ({ history }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    textChange: \"Submit\",\r\n  });\r\n  const { email, textChange } = formData;\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email) {\r\n      setFormData({ ...formData, textChange: \"Submitting\" });\r\n      axios\r\n        .put(`${process.env.REACT_APP_API_URL}/api/forgotpassword`, {\r\n          email,\r\n        })\r\n        .then((res) => {\r\n          setFormData({\r\n            ...formData,\r\n            email: \"\",\r\n          });\r\n          toast.success(`Please check your email`);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n          toast.error(err.response.data.error);\r\n        });\r\n    } else {\r\n      toast.error(\"Please fill all fields\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n      <ToastContainer />\r\n      <div className=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\">\r\n        <div className=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n          <div className=\"mt-12 flex flex-col items-center\">\r\n            <h1 className=\"text-2xl xl:text-3xl font-extrabold\">\r\n              Forget Password\r\n            </h1>\r\n            <div className=\"w-full flex-1 mt-8 text-indigo-500\">\r\n              <form\r\n                className=\"mx-auto max-w-xs relative \"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={handleChange(\"email\")}\r\n                  value={email}\r\n                />\r\n                <button\r\n                                    style={{backgroundColor:\"red\"}}\r\n\r\n                  type=\"submit\"\r\n                  className=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt  w-6  -ml-2\" />\r\n                  <span className=\"ml-3\">Submit</span>\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n          <div\r\n            className=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n            style={{ backgroundImage: `url(${authSvg})` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\ResetPassword.js",["553","554"],"import React, { useState, useEffect } from \"react\";\r\nimport authSvg from \"../../assests/reset.svg\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nconst ResetPassword = ({ match }) => {\r\n  const [formData, setFormData] = useState({\r\n    password1: \"\",\r\n    password2: \"\",\r\n    token: \"\",\r\n    textChange: \"Submit\",\r\n  });\r\n  const { password1, password2, textChange, token } = formData;\r\n\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    if (token) {\r\n      setFormData({ ...formData, token });\r\n    }\r\n  }, []);\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    console.log(password1, password2);\r\n    e.preventDefault();\r\n    if (password1 === password2 && password1 && password2) {\r\n      setFormData({ ...formData, textChange: \"Submitting\" });\r\n      axios\r\n        .put(`${process.env.REACT_APP_API_URL}/api/resetpassword`, {\r\n          newPassword: password1,\r\n          resetPasswordLink: token,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.message);\r\n          setFormData({\r\n            ...formData,\r\n            password1: \"\",\r\n            password2: \"\",\r\n          });\r\n          toast.success(res.data.message);\r\n        })\r\n        .catch((err) => {\r\n          toast.error(\"Something is wrong try again\");\r\n        });\r\n    } else {\r\n      toast.error(\"Passwords don't matches\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n      <ToastContainer />\r\n      <div className=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\">\r\n        <div className=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n          <div className=\"mt-12 flex flex-col items-center\">\r\n            <h1 className=\"text-2xl xl:text-3xl font-extrabold\">\r\n              Reset Your Password\r\n            </h1>\r\n            <div className=\"w-full flex-1 mt-8 text-indigo-500\">\r\n              <form\r\n                className=\"mx-auto max-w-xs relative \"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <input\r\n                  className=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={handleChange(\"password1\")}\r\n                  value={password1}\r\n                />\r\n                <input\r\n                  className=\"w-full mt-5 px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm password\"\r\n                  onChange={handleChange(\"password2\")}\r\n                  value={password2}\r\n                />\r\n                <button\r\n                                                    style={{backgroundColor:\"red\"}}\r\n\r\n                  type=\"submit\"\r\n                  className=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                >\r\n                  <i className=\"fas fa-sign-in-alt  w-6  -ml-2\" />\r\n                  <span className=\"ml-3\">Submit</span>\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n          <div\r\n            className=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n            style={{ backgroundImage: `url(${authSvg})` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\home\\HomeClass.js",["555"],"import React from \"react\";\r\nimport { Container, Grid } from \"semantic-ui-react\";\r\n\r\nimport SideBareComponent from \"../sideBare/sideBareComponent\";\r\n\r\nimport PrivateRoute from \"../../Routes/PrivateRoute\";\r\nimport GetAllClassComponent from \"../Class/GetAllClassComponent\";\r\nimport GetAllArchivedClassComponent from \"../Class/GetAllArchivedClassComponent\";\r\nimport CalendarComponent from \"../Class/CalendarComponent\";\r\nimport UpdateProfile from \"../authentification/UpdateProfile\";\r\n\r\nconst server = process.env.REACT_APP_API_URL || \"\";\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Grid stackable celled=\"internally\">\r\n        <Grid.Row>\r\n          <Grid.Column width={3}>\r\n            <SideBareComponent />\r\n          </Grid.Column>\r\n          <Grid.Column width={13}>\r\n            <Container textAlign=\"center\"></Container>\r\n            <br />\r\n            <Grid>\r\n              <Grid.Column width={3}></Grid.Column>\r\n              <Grid.Column width={9}></Grid.Column>\r\n              <Grid.Column width={4}></Grid.Column>\r\n            </Grid>\r\n            <PrivateRoute\r\n              path=\"/class\"\r\n              exact\r\n              component={GetAllClassComponent}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/archiveclass\"\r\n              exact\r\n              component={GetAllArchivedClassComponent}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/schedule\"\r\n              exact\r\n              component={CalendarComponent}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/updateProfile/:id\"\r\n              exact\r\n              component={UpdateProfile}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\home\\Home.js",["556","557","558","559","560","561","562","563","564"],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Room\\Room.js",["565"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\nimport socket from \"../../socket\";\r\nimport VideoCard from \"../Video/VideoCard\";\r\nimport BottomBar from \"../BottomBar/BottomBar\";\r\nimport Chat from \"../Chat/Chat\";\r\nimport ScreenRecord from \"../coursesAndSeances/ScreenRecord\";\r\n\r\nconst Room = (props) => {\r\n  const currentUser = sessionStorage.getItem(\"user\");\r\n  const [peers, setPeers] = useState([]);\r\n  const [userslist, setuserslist] = useState([]);\r\n\r\n  const [userVideoAudio, setUserVideoAudio] = useState({\r\n    localUser: { video: true, audio: true },\r\n  });\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [displayChat, setDisplayChat] = useState(false);\r\n  const [screenShare, setScreenShare] = useState(false);\r\n  const [showVideoDevices, setShowVideoDevices] = useState(false);\r\n  const peersRef = useRef([]);\r\n  const userVideoRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const userStream = useRef();\r\n  const roomId = props.match.params.roomId;\r\n\r\n  useEffect(() => {\r\n    // Get Video Devices\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const filtered = devices.filter((device) => device.kind === \"videoinput\");\r\n      setVideoDevices(filtered);\r\n    });\r\n\r\n    // Set Back Button Event\r\n    window.addEventListener(\"popstate\", goToBack);\r\n\r\n    // Connect Camera & Mic\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        userVideoRef.current.srcObject = stream;\r\n        userStream.current = stream;\r\n\r\n        socket.emit(\"BE-join-room\", { roomId, userName: currentUser });\r\n        socket.on(\"FE-user-join\", (users) => {\r\n          console.log(\"users from room : \"+users);\r\n          setuserslist(users);\r\n          // all users\r\n          const peers = [];\r\n          users.forEach(({ userId, info }) => {\r\n            let { userName, video, audio } = info;\r\n\r\n            if (userName !== currentUser) {\r\n              const peer = createPeer(userId, socket.id, stream);\r\n\r\n              peer.userName = userName;\r\n              peer.peerID = userId;\r\n\r\n              peersRef.current.push({\r\n                peerID: userId,\r\n                peer,\r\n                userName,\r\n              });\r\n              peers.push(peer);\r\n\r\n              setUserVideoAudio((preList) => {\r\n                return {\r\n                  ...preList,\r\n                  [peer.userName]: { video, audio },\r\n                };\r\n              });\r\n            }\r\n          });\r\n\r\n          setPeers(peers);\r\n        });\r\n        //\r\n        socket.on(\"FE-receive-call\", ({ signal, from, info }) => {\r\n          let { userName, video, audio } = info;\r\n          const peerIdx = findPeer(from);\r\n\r\n          if (!peerIdx) {\r\n            const peer = addPeer(signal, from, stream);\r\n\r\n            peer.userName = userName;\r\n\r\n            peersRef.current.push({\r\n              peerID: from,\r\n              peer,\r\n              userName: userName,\r\n            });\r\n            setPeers((users) => {\r\n              return [...users, peer];\r\n            });\r\n            setUserVideoAudio((preList) => {\r\n              return {\r\n                ...preList,\r\n                [peer.userName]: { video, audio },\r\n              };\r\n            });\r\n          }\r\n        });\r\n\r\n        socket.on(\"FE-call-accepted\", ({ signal, answerId }) => {\r\n          const peerIdx = findPeer(answerId);\r\n          peerIdx.peer.signal(signal);\r\n        });\r\n\r\n        socket.on(\"FE-user-leave\", ({ userId, userName }) => {\r\n          const peerIdx = findPeer(userId);\r\n          peerIdx.peer.destroy();\r\n         \r\n          setPeers((users) => {\r\n            users = users.filter((user) => user.peerID !== peerIdx.peer.peerID);\r\n            setuserslist(users);\r\n            return [...users];\r\n          });\r\n          console.log(\"ici users list AFTER LEAVE : \"+JSON.stringify(userslist))\r\n\r\n        });\r\n      });\r\n\r\n    socket.on(\"FE-toggle-camera\", ({ userId, switchTarget }) => {\r\n      const peerIdx = findPeer(userId);\r\n\r\n      setUserVideoAudio((preList) => {\r\n        let video = preList[peerIdx.userName].video;\r\n        let audio = preList[peerIdx.userName].audio;\r\n\r\n        if (switchTarget === \"video\") video = !video;\r\n        else audio = !audio;\r\n\r\n        return {\r\n          ...preList,\r\n          [peerIdx.userName]: { video, audio },\r\n        };\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function createPeer(userId, caller, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"BE-call-user\", {\r\n        userToCall: userId,\r\n        from: caller,\r\n        signal,\r\n      });\r\n    });\r\n    peer.on(\"disconnect\", () => {\r\n      peer.destroy();\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerId, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"BE-accept-call\", { signal, to: callerId });\r\n    });\r\n\r\n    peer.on(\"disconnect\", () => {\r\n      peer.destroy();\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  function findPeer(id) {\r\n    return peersRef.current.find((p) => p.peerID === id);\r\n  }\r\n\r\n  function createUserVideo(peer, index, arr) {\r\n    return (\r\n      <VideoBox\r\n        className={`width-peer${peers.length > 8 ? \"\" : peers.length}`}\r\n        onClick={expandScreen}\r\n        key={index}\r\n      >\r\n        {writeUserName(peer.userName)}\r\n        <FaIcon className=\"fas fa-expand\" />\r\n        <VideoCard key={index} peer={peer} number={arr.length} />\r\n      </VideoBox>\r\n    );\r\n  }\r\n\r\n  function writeUserName(userName, index) {\r\n    if (userVideoAudio.hasOwnProperty(userName)) {\r\n      if (!userVideoAudio[userName].video) {\r\n        return <UserName key={userName}>{userName}</UserName>;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Open Chat\r\n  const clickChat = (e) => {\r\n    e.stopPropagation();\r\n    setDisplayChat(!displayChat);\r\n  };\r\n\r\n  // BackButton\r\n  const goToBack = (e) => {\r\n    e.preventDefault();\r\n    socket.emit(\"BE-leave-room\", { roomId, leaver: currentUser });\r\n    sessionStorage.removeItem(\"user\");\r\n    window.location.href = \"/stream\";\r\n  };\r\n\r\n  const toggleCameraAudio = (e) => {\r\n    const target = e.target.getAttribute(\"data-switch\");\r\n\r\n    setUserVideoAudio((preList) => {\r\n      let videoSwitch = preList[\"localUser\"].video;\r\n      let audioSwitch = preList[\"localUser\"].audio;\r\n\r\n      if (target === \"video\") {\r\n        const userVideoTrack = userVideoRef.current.srcObject.getVideoTracks()[0];\r\n        videoSwitch = !videoSwitch;\r\n        userVideoTrack.enabled = videoSwitch;\r\n      } else {\r\n        const userAudioTrack = userVideoRef.current.srcObject.getAudioTracks()[0];\r\n        audioSwitch = !audioSwitch;\r\n\r\n        if (userAudioTrack) {\r\n          userAudioTrack.enabled = audioSwitch;\r\n        } else {\r\n          userStream.current.getAudioTracks()[0].enabled = audioSwitch;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...preList,\r\n        localUser: { video: videoSwitch, audio: audioSwitch },\r\n      };\r\n    });\r\n\r\n    socket.emit(\"BE-toggle-camera-audio\", { roomId, switchTarget: target });\r\n  };\r\n\r\n  const clickScreenSharing = () => {\r\n    if (!screenShare) {\r\n      navigator.mediaDevices\r\n        .getDisplayMedia({ cursor: true })\r\n        .then((stream) => {\r\n          const screenTrack = stream.getTracks()[0];\r\n\r\n          peersRef.current.forEach(({ peer }) => {\r\n            // replaceTrack (oldTrack, newTrack, oldStream);\r\n            peer.replaceTrack(\r\n              peer.streams[0]\r\n                .getTracks()\r\n                .find((track) => track.kind === \"video\"),\r\n              screenTrack,\r\n              userStream.current\r\n            );\r\n          });\r\n\r\n          // Listen click end\r\n          screenTrack.onended = () => {\r\n            peersRef.current.forEach(({ peer }) => {\r\n              peer.replaceTrack(\r\n                screenTrack,\r\n                peer.streams[0]\r\n                  .getTracks()\r\n                  .find((track) => track.kind === \"video\"),\r\n                userStream.current\r\n              );\r\n            });\r\n            userVideoRef.current.srcObject = userStream.current;\r\n            setScreenShare(false);\r\n          };\r\n\r\n          userVideoRef.current.srcObject = stream;\r\n          screenTrackRef.current = screenTrack;\r\n          setScreenShare(true);\r\n        });\r\n    } else {\r\n      screenTrackRef.current.onended();\r\n    }\r\n  };\r\n\r\n  const expandScreen = (e) => {\r\n    const elem = e.target;\r\n\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n      /* Firefox */\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      /* Chrome, Safari & Opera */\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      /* IE/Edge */\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  const clickBackground = () => {\r\n    if (!showVideoDevices) return;\r\n\r\n    setShowVideoDevices(false);\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      <RoomContainer onClick={clickBackground}>\r\n        <VideoAndBarContainer>\r\n          <VideoContainer>\r\n            {/* Current User Video */}\r\n            <VideoBox\r\n              className={`width-peer${peers.length > 8 ? \"\" : peers.length}`}\r\n            >\r\n              {userVideoAudio[\"localUser\"].video ? null : (\r\n                <UserName>{currentUser}</UserName>\r\n              )}\r\n              <FaIcon className=\"fas fa-expand\" />\r\n              <MyVideo\r\n                onClick={expandScreen}\r\n                ref={userVideoRef}\r\n                muted\r\n                autoPlay\r\n                playInline\r\n              ></MyVideo>\r\n            </VideoBox>\r\n            {/* Joined User Vidoe */}\r\n            {peers &&\r\n              peers.map((peer, index, arr) =>\r\n                createUserVideo(peer, index, arr)\r\n              )}\r\n          </VideoContainer>\r\n          <BottomBar\r\n            clickScreenSharing={clickScreenSharing}\r\n            clickChat={clickChat}\r\n            goToBack={goToBack}\r\n            toggleCameraAudio={toggleCameraAudio}\r\n            userVideoAudio={userVideoAudio[\"localUser\"]}\r\n            screenShare={screenShare}\r\n            videoDevices={videoDevices}\r\n            showVideoDevices={showVideoDevices}\r\n            setShowVideoDevices={setShowVideoDevices}\r\n            listuserRoom={userslist}\r\n          />\r\n        </VideoAndBarContainer>\r\n        <Chat display={displayChat} roomId={roomId} />\r\n      </RoomContainer>\r\n    </AppContainer>\r\n  );\r\n};\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(8px + 2vmin);\r\n  background-color: #454552;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\nconst RoomContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-height: 100vh;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  max-width: 100%;\r\n  height: 92%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  gap: 10px;\r\n`;\r\n\r\nconst VideoAndBarContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst MyVideo = styled.video``;\r\n\r\nconst VideoBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  > video {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  :hover {\r\n    > i {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  position: absolute;\r\n  font-size: calc(20px + 5vmin);\r\n  z-index: 1;\r\n`;\r\n\r\nconst FaIcon = styled.i`\r\n  display: none;\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 15px;\r\n`;\r\n\r\nexport default Room;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Main\\Main.js",["566","567","568","569"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport socket from '../../socket';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Main = (props) => {\r\n  const history = useHistory();\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\r\n  useEffect(() => {\r\n\r\n    socket.on('FE-error-user-exist', ({ error }) => {\r\n      if (!error) {\r\n        \r\n        const roomName = currentClass._id;\r\n        const userName = currentUser.name;\r\n\r\n        sessionStorage.setItem('user', userName);\r\n        history.push(`/room/${roomName}`);\r\n      } else {\r\n        setErr(error);\r\n        setErrMsg('User name already exist');\r\n      }\r\n    });\r\n  }, [props.history]);\r\n\r\n  function clickJoin() {\r\n    const roomName = currentClass._id;\r\n    const userName = currentUser.name;\r\n\r\n    if (!roomName || !userName) {\r\n      setErr(true);\r\n      setErrMsg('Enter Room Name or User Name');\r\n    } else {\r\n      socket.emit('BE-check-user', { roomId: roomName, userName });\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n\r\n      <JoinButton onClick={clickJoin}> Join Meet </JoinButton>\r\n\r\n  );\r\n};\r\n\r\nconst JoinButton = styled.label`\r\n  padding-left: 35px;\r\n  padding-right: 35px;\r\n\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 15px;\r\n  color: #d8e9ef;\r\n  background-color: grey;\r\n \r\n\r\n  :hover {\r\n    background-color: red;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default Main;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Routes\\AdminRoute.jsx",["570"],"import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuth } from '../helpers/auth';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuth() && isAuth().role === 'admin' ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/signin',\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    ></Route>\r\n);\r\n\r\nexport default AdminRoute;","C:\\Smart-Virtual-Classroom\\client\\src\\Routes\\PrivateRoute.jsx",["571"],"import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuth } from '../helpers/auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuth() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    ></Route>\r\n);\r\n\r\nexport default PrivateRoute;","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Task.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Quiz.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Courses.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Seance.js",["572","573","574"],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { getList, updateSeance, addSeance } from \"../../api/SeanceApi\";\r\n\r\nexport const RetrieveSeances = createAsyncThunk(\"/Seance\", async () => {\r\n  const { data } = await axios.get(\r\n    \"https://closer-server.herokuapp.com/seance\"\r\n  );\r\n\r\n  return data;\r\n});\r\n\r\nexport const AddSeance = createAsyncThunk(\r\n  \"Seance/AddSeance\",\r\n  async (seance) => {\r\n    const promise = await axios\r\n      .post(\"https://closer-server.herokuapp.com/seance/\", seance)\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const GetSeancesById = createAsyncThunk(\r\n  \"Seance/GetSeancesById\",\r\n  async (seanceId) => {\r\n    const promise = await axios\r\n      .get(\"https://closer-server.herokuapp.com/seance/\" + seanceId)\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const GetSeancesByIdClass = createAsyncThunk(\r\n  \"Seance/GetSeancesByIdClass\",\r\n  async (idClass) => {\r\n    const promise = await axios\r\n      .get(\r\n        \"https://closer-server.herokuapp.com/seance/findByIdClass/\" + idClass\r\n      )\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const EditSeances = createAsyncThunk(\r\n  \"Seance/EditSeances\",\r\n  async (seance) => {\r\n    //console.log(seanceId);\r\n\r\n    const promise = await axios\r\n      .put(\"https://closer-server.herokuapp.com/seance/\" + seance._id, seance)\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const DeleteSeance = createAsyncThunk(\r\n  \"Seance/DeleteSeance\",\r\n\r\n  async (seanceId) => {\r\n    const promise = await axios\r\n      .delete(\"https://closer-server.herokuapp.com/seance/\" + seanceId)\r\n\r\n      .then((response) => {\r\n        console.log(\"this is response\");\r\n        console.log(response);\r\n        console.log(\"this is data\");\r\n        console.log(response.data);\r\n        //console.log(response);\r\n        const data = response.data;\r\n\r\n        // assign data\r\n        return data;\r\n      });\r\n\r\n    const data = await promise;\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const SeanceSlice = createSlice({\r\n  name: \"Seance\",\r\n  initialState: {\r\n    seance: [],\r\n    status: null,\r\n    statusUpdate: null,\r\n    seanceById: null,\r\n  },\r\n  extraReducers: {\r\n    [RetrieveSeances.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [RetrieveSeances.fulfilled]: (state, { payload }) => {\r\n      state.seance = payload;\r\n      state.status = \"success\";\r\n    },\r\n    [RetrieveSeances.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n    [AddSeance.fulfilled]: (state, action) => {\r\n      state.seance.push(action.payload.result);\r\n    },\r\n    [GetSeancesById.fulfilled]: (state, action) => {\r\n      state.seanceById = action.payload;\r\n    },\r\n    [GetSeancesByIdClass.fulfilled]: (state, action) => {\r\n      state.seance = action.payload;\r\n    },\r\n    [DeleteSeance.fulfilled]: (state, action) => {\r\n      state.seance = state.seance.filter((u) => {\r\n        return u._id !== action.payload.result._id;\r\n      });\r\n    },\r\n    [EditSeances.fulfilled]: (state, action) => {\r\n      state.statusUpdate = \"success\";\r\n      let seance = action.payload.result;\r\n      let seances = state.seance.slice();\r\n      for (let i = 0, n = seances.length; i < n; i++) {\r\n        if (seances[i]._id === seance._id) {\r\n          seances[i].idCour = seance.idCour;\r\n          seances[i].titre = seance.titre;\r\n          seances[i].description = seance.description;\r\n\r\n          break; // Stop this loop, we found it!\r\n        }\r\n      }\r\n      state.seance = seances;\r\n    },\r\n\r\n    // AddSeance: (state, action) => {\r\n    //   state.seance.push(action.payload);\r\n    // },\r\n    // GetSeancesById: (state, action) => {\r\n    //   state.seanceById = action.payload;\r\n    // },\r\n    // DeleteSeance: (state, action) => {\r\n    //   let seance = action.payload;\r\n    //   let seances = state.seance.slice();\r\n    //   seances = seances.filter((u) => {\r\n    //     return u._id !== seance._id;\r\n    //   });\r\n    //   state.seances = seances;\r\n    // },\r\n    // EditSeances: (state, action) => {\r\n    //   let seance = action.payload;\r\n    //   let seances = state.seance.slice();\r\n    //   for (let i = 0, n = seances.length; i < n; i++) {\r\n    //     if (seances[i]._id === seance._id) {\r\n    //       seances[i].idCour = seance.idCour;\r\n    //       seances[i].titre = seance.titre;\r\n    //       seances[i].description = seance.description;\r\n\r\n    //       break; // Stop this loop, we found it!\r\n    //     }\r\n    //   }\r\n    //   state.seance = seances;\r\n    // },\r\n  },\r\n});\r\n\r\nexport default SeanceSlice.reducer;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\classsline.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\notificationslice.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\questionslice.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\commentslice.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\Grade.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\User.js",["575"],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\n\r\nexport const UpdateProfilePicture = createAsyncThunk(\r\n  \"users/UpdateProfilePicture\",\r\n\r\n  async (resources) => {\r\n    const promise = await axios.post(\r\n      \"https://closer-server.herokuapp.com/courses/api/upload\",\r\n      resources\r\n    );\r\n    console.log(promise.data.result.reqFiles);\r\n    return promise.data.result.reqFiles[0].url;\r\n  }\r\n);\r\n\r\nexport const getUserById = createAsyncThunk(\"users/getUserById\", async (id) => {\r\n  const { data } = await axios.get(\r\n    \"https://closer-server.herokuapp.com/api/getUserById/\" + id\r\n  );\r\n\r\n  return data;\r\n});\r\n\r\nexport const ChangePassword = createAsyncThunk(\r\n  \"users/ChangePassword\",\r\n  async (object) => {\r\n    const { data } = await axios.post(\r\n      \"https://closer-server.herokuapp.com/api/ChangePassword/\",\r\n      object\r\n    );\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const UpdateUserState = createAsyncThunk(\r\n  \"users/UpdateUserState\",\r\n  async () => {}\r\n);\r\n\r\nexport const UserSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    Resources: \"\",\r\n    UserById: null,\r\n    statusChangePassword: null,\r\n    userUpdated: false,\r\n  },\r\n\r\n  extraReducers: {\r\n    [UpdateProfilePicture.fulfilled]: (state, action) => {\r\n      state.Resources = action.payload;\r\n    },\r\n    [getUserById.fulfilled]: (state, action) => {\r\n      state.UserById = action.payload;\r\n      state.Resources = state.UserById.picture;\r\n    },\r\n    [ChangePassword.fulfilled]: (state, action) => {\r\n      state.statusChangePassword = \"changed !\";\r\n    },\r\n    [UpdateUserState.fulfilled]: (state, action) => {\r\n      state.userUpdated = !state.userUpdated;\r\n    },\r\n  },\r\n});\r\nexport default UserSlice.reducer;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\redux\\slices\\answerslice.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\socket.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\UpdateProfile.js",["576","577","578","579","580"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  GridColumn,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ModalChangeProfilePicture from \"./ModalChangeProfilePicture\";\r\nimport axios from \"axios\";\r\nimport { getCookie, isAuth, setLocalStorage } from \"../../helpers/auth\";\r\nimport { getUserById, UpdateUserState } from \"../../redux/slices/User\";\r\nimport { useParams } from \"react-router\";\r\nimport ModalChangePassword from \"./ModalChangePassword\";\r\n\r\nfunction UpdateProfile() {\r\n  const { id } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [linkedIn, setLinkedIn] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const [formSuccessMessage, setFormSuccessMessage] = useState(\"\");\r\n  const [formClassName, SetFormClassName] = useState(\"\");\r\n  const Resources = useSelector((state) => state.user.Resources);\r\n  const userById = useSelector((state) => state.user.UserById);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUserById(id)).then((res) => {\r\n      console.log(res.payload);\r\n      setName(res.payload.name);\r\n      setEmail(res.payload.email);\r\n      if (res.payload.bio) {\r\n        setBio(res.payload.bio);\r\n      }\r\n      if (res.payload.linkedInUrl) {\r\n        setLinkedIn(res.payload.linkedInUrl);\r\n      }\r\n      if (res.payload.GithubUrl) {\r\n        setGithub(res.payload.GithubUrl);\r\n      }\r\n    });\r\n\r\n    console.log(userById);\r\n  }, []);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleBioChange = (e) => {\r\n    setBio(e.target.value);\r\n  };\r\n  const handleLinkedInChange = (e) => {\r\n    setLinkedIn(e.target.value);\r\n  };\r\n  const handleGithubChange = (e) => {\r\n    setGithub(e.target.value);\r\n    console.log(Resources);\r\n  };\r\n\r\n  const updateProfile = () => {\r\n    axios\r\n      .put(\r\n        `${process.env.REACT_APP_API_URL}/api/user/updateProfile/${\r\n          isAuth()._id\r\n        }`,\r\n        {\r\n          name: name,\r\n          bio: bio,\r\n          linkedInUrl: linkedIn,\r\n          GithubUrl: github,\r\n          picture: Resources,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch(UpdateUserState());\r\n        setLocalStorage(\"user\", res.data.result);\r\n        setFormSuccessMessage(\"Your profile was updated successfully !\");\r\n        SetFormClassName(\"success\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setFormSuccessMessage(\"Something went wrong !!\");\r\n        SetFormClassName(\"warning\");\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Header as=\"h1\" dividing>\r\n        Profile Update\r\n      </Header>\r\n      <br />\r\n      <Grid doubling>\r\n        <Grid.Row>\r\n          <Grid.Column width={10}>\r\n            <Form className={formClassName}>\r\n              <Message\r\n                success\r\n                color=\"green\"\r\n                header=\"Nice one! 😛 😝\"\r\n                content={formSuccessMessage}\r\n              />\r\n              <Message\r\n                warning\r\n                color=\"red\"\r\n                header=\"Woah! 😱 😨\"\r\n                content={formSuccessMessage}\r\n              />\r\n              <Form.Input\r\n                label=\"Full Name\"\r\n                type=\"text\"\r\n                placeholder={\"Mr Foulen\"}\r\n                name=\"Full Name\"\r\n                maxLength=\"40\"\r\n                required\r\n                value={name}\r\n                onChange={handleNameChange}\r\n              />\r\n              <Form.Input\r\n                label=\"Email\"\r\n                type=\"text\"\r\n                placeholder={\"example@example.fr\"}\r\n                name=\"Email\"\r\n                maxLength=\"40\"\r\n                icon=\"mail\"\r\n                iconPosition=\"right\"\r\n                required\r\n                readOnly\r\n                value={email}\r\n              />\r\n              <Form.TextArea\r\n                label=\"Bio\"\r\n                type=\"text\"\r\n                placeholder=\"Tell us about your self ...\"\r\n                name=\"Bio\"\r\n                maxLength=\"5000\"\r\n                value={bio}\r\n                onChange={handleBioChange}\r\n              />\r\n\r\n              <Form.Input\r\n                label=\"LinkedIn URL\"\r\n                type=\"text\"\r\n                icon=\"linkedin\"\r\n                iconPosition=\"right\"\r\n                placeholder={\"your LinkedIn account Link\"}\r\n                name=\"LinkedIn URL\"\r\n                maxLength=\"40\"\r\n                value={linkedIn}\r\n                onChange={handleLinkedInChange}\r\n              />\r\n              <Form.Input\r\n                label=\"Github URL\"\r\n                type=\"text\"\r\n                icon=\"github\"\r\n                iconPosition=\"right\"\r\n                placeholder={\"your Github account Link\"}\r\n                name=\"Github URL\"\r\n                maxLength=\"40\"\r\n                value={github}\r\n                onChange={handleGithubChange}\r\n              />\r\n            </Form>\r\n            <br />\r\n            <br />\r\n            <ModalChangePassword></ModalChangePassword>\r\n\r\n            <Message warning>\r\n              <Message.Header>\r\n                why is it important to change passwords regularly ? 🤔\r\n              </Message.Header>\r\n              <p>\r\n                It can be difficult to figure out if someone else is using your\r\n                account, so by changing your password consistently, you reduce\r\n                the risk that other people will have frequent access to your\r\n                accounts.\r\n              </p>\r\n            </Message>\r\n            <br />\r\n\r\n            <Button color=\"red\" floated=\"center\" onClick={updateProfile}>\r\n              <Icon name=\"edit\"></Icon>\r\n              Update\r\n            </Button>\r\n          </Grid.Column>\r\n          <Divider vertical></Divider>\r\n          <Grid.Column width={6}>\r\n            <Header as=\"h3\" dividing>\r\n              Profile Picture\r\n            </Header>\r\n            <ModalChangeProfilePicture></ModalChangeProfilePicture>\r\n\r\n            <Message color=\"grey\">\r\n              <Message.Header>\r\n                Why profile picture is important ? 🧐\r\n              </Message.Header>\r\n              <p>\r\n                One is to help other people to identify you. Another is to help\r\n                you express yourself… and to help others to develop the right\r\n                impression of you\r\n              </p>\r\n            </Message>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\helpers\\auth.js",["581"],"import cookie from \"js-cookie\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\n\r\n// Set in Cookie\r\nexport const setCookie = (key, value) => {\r\n  if (window !== \"undefiend\") {\r\n    cookie.set(key, value, {\r\n      // 1 Day\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n// remove from cookie\r\nexport const removeCookie = (key) => {\r\n  if (window !== \"undefined\") {\r\n    cookie.remove(key, {\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n\r\n// Get from cookie such as stored token\r\n// Will be useful when we need to make request to server with token\r\nexport const getCookie = (key) => {\r\n  if (window !== \"undefined\") {\r\n    return cookie.get(key);\r\n  }\r\n};\r\n\r\n// Set in localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n  if (window !== \"undefined\") {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n};\r\n\r\n// Remove from localstorage\r\nexport const removeLocalStorage = (key) => {\r\n  if (window !== \"undefined\") {\r\n    localStorage.removeItem(key);\r\n  }\r\n};\r\n\r\n// Auth enticate user by passing data to cookie and localstorage during signin\r\nexport const authenticate = (response, next) => {\r\n  console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\", response);\r\n  setCookie(\"token\", response.data.token);\r\n  setLocalStorage(\"user\", response.data.user);\r\n  next();\r\n};\r\n\r\n// Access user info from localstorage\r\nexport const isAuth = () => {\r\n  if (window !== \"undefined\") {\r\n    const cookieChecked = getCookie(\"token\");\r\n    if (cookieChecked) {\r\n      if (localStorage.getItem(\"user\")) {\r\n        return JSON.parse(localStorage.getItem(\"user\"));\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const signout = (next) => {\r\n  removeCookie(\"token\");\r\n  removeLocalStorage(\"user\");\r\n  next();\r\n};\r\n\r\nexport const updateUser = (response, next) => {\r\n  console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\", response);\r\n  if (typeof window !== \"undefined\") {\r\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\r\n    auth = response.data;\r\n    localStorage.setItem(\"user\", JSON.stringify(auth));\r\n  }\r\n  next();\r\n};\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\sideBare\\sideBareComponent.js",["582","583","584","585","586","587","588"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Card,\r\n  Image,\r\n  Button,\r\n  Icon,\r\n  Message,\r\n  Menu,\r\n  Label,\r\n  Grid,\r\n  List,\r\n  Divider,\r\n  Dropdown,\r\n  Segment,\r\n  Step,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth, signout } from \"../../helpers/auth\";\r\nimport moment from \"moment\";\r\nimport Main from \"../Main/Main\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchNotifications,\r\n  selectNotifications,\r\n} from \"../../redux/slices/notificationslice\";\r\nimport io from \"socket.io-client\";\r\nimport { notificationsApi } from \"../../api/api\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\nfunction SideBareComponent() {\r\n  const socket = io(ENDPOINT);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchNotifications(user._id));\r\n  }, [dispatch]);\r\n  const state = useSelector((state) => state.user.userUpdated);\r\n  const [notifications, errr] = useSelector(selectNotifications);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  useEffect(() => {}, [state]);\r\n\r\n  const [activeItem, SetActiveItem] = useState(\"Dashboard\");\r\n  const handleItemClick = (e, { name }) => {\r\n    if (name === \"Logout\") {\r\n      signout(() => {\r\n        toast.error(\"Signout Successfully\");\r\n      });\r\n      SetActiveItem(name);\r\n    } else {\r\n      SetActiveItem(name);\r\n    }\r\n  };\r\n\r\n  const [nbrNotif, setNbrNotif] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let nn = notifications.filter((notif) => notif.status !== true);\r\n    if (nn.length !== 0) {\r\n      setNbrNotif(true);\r\n    } else {\r\n      setNbrNotif(false);\r\n    }\r\n\r\n    socket.on(\"new-notification\", (content) => {\r\n      content.forEach((i) => {\r\n        if (user._id === i) {\r\n          setNbrNotif(true);\r\n\r\n          dispatch(fetchNotifications(i));\r\n        }\r\n      });\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const updatenotification = async (id_notif) => {\r\n    try {\r\n      const res = await notificationsApi.putNotification(id_notif);\r\n      dispatch(fetchNotifications(user._id));\r\n      let nn = notifications.filter((notif) => notif.status !== true);\r\n      if (nn.length !== 0) {\r\n        setNbrNotif(true);\r\n      } else {\r\n        setNbrNotif(false);\r\n      }\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Grid stackable>\r\n        <Card stackable>\r\n          <Image src={isAuth().picture} wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Header>\r\n              {isAuth().name}\r\n              {\"  |  \"}\r\n              {nbrNotif && <Label circular color=\"red\" empty></Label>}\r\n\r\n              <Dropdown icon=\"bell outline\" scrolling>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Header\r\n                    icon=\"bell outline\"\r\n                    content=\"      Notification\"\r\n                    as=\"h3\"\r\n                  />\r\n                  <Divider />\r\n                  {notifications.map((notif, index) => (\r\n                    <div>\r\n                      {notif.Course !== null && (\r\n                        <Link\r\n                          to={\"/detailCourses/\" + notif.Course}\r\n                          onClick={() => updatenotification(notif._id)}\r\n                        >\r\n                          <List divided>\r\n                            <List.Item>\r\n                              <List.Icon\r\n                                name=\"file text\"\r\n                                size=\"large\"\r\n                                verticalAlign=\"middle\"\r\n                              />\r\n\r\n                              <List.Content>\r\n                                {notif.status === false ? (\r\n                                  <List.Header as=\"p\" style={{ color: \"blue\" }}>\r\n                                    {notif.Message}\r\n                                  </List.Header>\r\n                                ) : (\r\n                                  <List.Header as=\"p\">\r\n                                    {notif.Message}\r\n                                  </List.Header>\r\n                                )}\r\n                                <List.Description>\r\n                                  <p style={{ fontSize: \"13px\" }}>\r\n                                    <ReactTimeAgo\r\n                                      date={notif.Date}\r\n                                      locale=\"en-US\"\r\n                                    />{\" \"}\r\n                                  </p>{\" \"}\r\n                                </List.Description>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          </List>\r\n                          <Divider />\r\n                        </Link>\r\n                      )}\r\n                      <Dropdown.Divider />\r\n                      {notif.Question !== null && (\r\n                        <Link\r\n                          to={\"/FAQ/\" + notif.Question}\r\n                          onClick={() => updatenotification(notif._id)}\r\n                        >\r\n                          <List divided>\r\n                            <List.Item>\r\n                              <List.Icon\r\n                                name=\"question circle outline\"\r\n                                size=\"large\"\r\n                                verticalAlign=\"middle\"\r\n                              />\r\n\r\n                              <List.Content>\r\n                                {notif.status === false ? (\r\n                                  <List.Header as=\"p\" style={{ color: \"blue\" }}>\r\n                                    {notif.Message}\r\n                                  </List.Header>\r\n                                ) : (\r\n                                  <List.Header as=\"p\">\r\n                                    {notif.Message}\r\n                                  </List.Header>\r\n                                )}\r\n                                <List.Description>\r\n                                  <p style={{ fontSize: \"13px\" }}>\r\n                                    <ReactTimeAgo\r\n                                      date={notif.Date}\r\n                                      locale=\"en-US\"\r\n                                    />{\" \"}\r\n                                  </p>{\" \"}\r\n                                </List.Description>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          </List>\r\n                          <Divider />\r\n                        </Link>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  <Step.Group size=\"mini\" widths=\"seven\">\r\n                    <Step>\r\n                      <Icon name=\"bell\" />\r\n                      <Step.Content>\r\n                        <Step.Title>ALL</Step.Title>\r\n                      </Step.Content>\r\n                    </Step>\r\n\r\n                    <Step active>\r\n                      <Step.Content>\r\n                        <Step.Title>Notifications</Step.Title>\r\n                      </Step.Content>\r\n                    </Step>\r\n                  </Step.Group>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Card.Header>\r\n            <Card.Meta>\r\n              <span className=\"date\">\r\n                Joined in {moment(isAuth().createdAt).format(\"yy\")}\r\n              </span>\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              {isAuth().bio === \"\" || !isAuth().bio ? (\r\n                <Message\r\n                  attached\r\n                  header=\"Welcome to our site!\"\r\n                  content=\"If you are new in our community go to your profile and add a Bio ,it help you express yourself \"\r\n                />\r\n              ) : (\r\n                isAuth().bio\r\n              )}\r\n            </Card.Description>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Menu size=\"small\" fluid vertical>\r\n              <Link to=\"/class\">\r\n                <Menu.Item\r\n                  icon=\"comments\"\r\n                  name=\"Dashboard\"\r\n                  active={activeItem === \"Dashboard\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  Dashboard\r\n                </Menu.Item>\r\n              </Link>\r\n              <Link to=\"/archiveclass\">\r\n                <Menu.Item\r\n                  icon=\"archive\"\r\n                  name=\"Archived\"\r\n                  active={activeItem === \"Archived\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  Archived\r\n                </Menu.Item>\r\n              </Link>\r\n\r\n              <Link to=\"/schedule\">\r\n                <Menu.Item\r\n                  name=\"Routine\"\r\n                  active={activeItem === \"Routine\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  Routine\r\n                </Menu.Item>\r\n              </Link>\r\n              <Link to={\"/updateProfile/\" + isAuth()._id}>\r\n                <Menu.Item\r\n                  name=\"Profile\"\r\n                  active={activeItem === \"Profile\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  {isAuth().bio === \"\" ||\r\n                  !isAuth().bio ||\r\n                  isAuth().linkedInUrl === \"\" ||\r\n                  !isAuth().linkedInUrl ||\r\n                  isAuth().GithubUrl === \"\" ||\r\n                  !isAuth().GithubUrl ||\r\n                  isAuth().picture === \"\" ||\r\n                  !isAuth().picture ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <Label color=\"red\">1</Label>\r\n                      {\"Profile\"}\r\n                    </>\r\n                  ) : (\r\n                    <> {\"Profile\"}</>\r\n                  )}\r\n                </Menu.Item>\r\n              </Link>\r\n              <Link to=\"/login\">\r\n                <Menu.Item\r\n                  name=\"Logout\"\r\n                  active={activeItem === \"Logout\"}\r\n                  onClick={handleItemClick}\r\n                >\r\n                  Logout\r\n                </Menu.Item>\r\n              </Link>\r\n            </Menu>\r\n          </Card.Content>\r\n          <Card.Content extra>\r\n            <a>\r\n              <Icon name=\"group\" />\r\n              <Main></Main>\r\n            </a>\r\n          </Card.Content>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideBareComponent;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\GetAllClassComponent.js",["589"],"import {\r\n  Grid,\r\n  Label,\r\n  Segment,\r\n  Card,\r\n  Dropdown,\r\n  Header,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport React, {  useEffect } from \"react\";\r\nimport {\r\n  fetchclass,\r\n  selectclass,\r\n  selectrequestclass,\r\n  selectactiveclass,\r\n  fetchActiveClass,\r\n  fetchRequestClass,\r\n} from \"./../../redux/slices/classsline\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InvitationClassComonent from \"./InvitationClassComonent\";\r\nimport EditComponent from \"./EditComponent\";\r\nimport ArchieveClassComponent from \"./ArchieveClassComponent\";\r\nimport { getclassApi } from \"../../api/api\";\r\nimport { useHistory } from \"react-router\";\r\nimport AddClassComponent from \"./AddClassComponent\";\r\nexport default function GetAllClassComponent() {\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [classs] = useSelector(selectclass);\r\n  const [active] = useSelector(selectactiveclass);\r\n  const [request] = useSelector(selectrequestclass);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchclass(documentData.role, documentData._id,\"Active\"));\r\n    dispatch(fetchActiveClass(documentData._id));\r\n    dispatch(fetchRequestClass(documentData._id));\r\n  },[dispatch]);\r\n  const aff = (id) => {\r\n    if (documentData.role === \"Teacher\") return \"Level \" + id + \"th\";\r\n    else if (documentData.role === \"Student\") return \"Year \" + id;\r\n  };\r\n  const selectClass = async (classSelected) => {\r\n    const res = await getclassApi.getclassById(classSelected);\r\n    console.log(res.classOwner);\r\n    localStorage.setItem(\"idClass\", JSON.stringify(res));\r\n    history.push(\"/stream\");\r\n  };\r\n  return (\r\n    <div>\r\n      <AddClassComponent />\r\n      <Segment.Group horizontal>\r\n        <Segment>\r\n          <Header as=\"h2\" icon textAlign=\"center\">\r\n            <Icon name=\"tasks\" circular />\r\n            <Header.Content>Missed Activity</Header.Content>\r\n          </Header>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Label style={{ textAlign: \"center\" }} circular color=\"red\">\r\n              0\r\n            </Label>\r\n          </div>\r\n        </Segment>\r\n        <Segment>\r\n          <Header as=\"h2\" icon textAlign=\"center\">\r\n            <Icon name=\"file text\" circular />\r\n            <Header.Content>Active Courses</Header.Content>\r\n          </Header>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Label circular color=\"green\">\r\n            {active.length === 0  ? (\r\n            <div >0</div>\r\n              ) : (\r\n                active?.map((b, ii) => (\r\n                  <div key={ii}> {b.active_class}</div>\r\n                ))\r\n              )}\r\n            </Label>\r\n          </div>\r\n        </Segment>\r\n        <Segment>\r\n          <Header as=\"h2\" icon textAlign=\"center\">\r\n            <Icon name=\"add user\" circular />\r\n\r\n            <Header.Content>Request Courses</Header.Content>\r\n          </Header>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Label style={{ textAlign: \"center\" }} circular color=\"grey\">\r\n            {request.length === 0  ? (\r\n            <div >0</div>\r\n              ) : (\r\n                request?.map((b, ii) => (\r\n                  <div key={ii}> {b.request_class}</div>\r\n                ))\r\n              )}\r\n            </Label>\r\n          </div>\r\n        </Segment>\r\n      </Segment.Group>\r\n      {classs?.map((cl, index) => (\r\n        <Grid columns={1} key={index}>\r\n          <Grid.Column>\r\n            <Segment raised>\r\n              <Label as=\"a\" color=\"red\" ribbon>\r\n                {aff(cl._id)}\r\n              </Label>\r\n              <Grid columns={4}>\r\n                {cl.classObjet?.map((co, i) => (\r\n                  <Grid.Column key={i}>\r\n                    <Card.Group stackable>\r\n                      <Card\r\n                        color={co.classColor}\r\n                        onClick={() => selectClass(co._id)}\r\n                      >\r\n                        <Card.Content>\r\n                          <Card.Header>\r\n                            <Grid stackable>\r\n                              <Grid.Row>\r\n                                <Grid.Column width={12}>\r\n                                  <Header as=\"h3\" color=\"red\">\r\n                                    {co.className}\r\n                                  </Header>\r\n                                </Grid.Column>\r\n\r\n                                <Grid.Column width={2}>\r\n                                  {co.classOwner === documentData._id ? (\r\n                                    <Dropdown\r\n                                      fluid\r\n                                      pointing\r\n                                      direction=\"left\"\r\n                                      className=\"icon\"\r\n                                      icon=\"ellipsis vertical\"\r\n                                    >\r\n                                      <Dropdown.Menu>\r\n                                        <EditComponent\r\n                                          headerTitle=\"Archive Class\"\r\n                                          buttonTriggerTitle=\"Archive\"\r\n                                          classes={co}\r\n                                        />\r\n                                        <ArchieveClassComponent\r\n                                          headerTitle=\"Archive Class\"\r\n                                          buttonTriggerTitle=\"Archive\"\r\n                                          classes={co}\r\n                                        />\r\n                                      </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </Grid.Column>\r\n                              </Grid.Row>\r\n                            </Grid>\r\n                          </Card.Header>\r\n                          <Card.Meta>{co.classSection}</Card.Meta>\r\n                          <Card.Description>\r\n                            <p\r\n                              style={{\r\n                                overflow: \"hidden\",\r\n                                whiteSpace: \"nowrap\",\r\n                                textOverflow: \"ellipsis\",\r\n                                maxHeight: 250,\r\n                              }}\r\n                            >\r\n                              {co.classDescription}\r\n                            </p>\r\n                          </Card.Description>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </Card.Group>\r\n                  </Grid.Column>\r\n                ))}\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      ))}\r\n      <InvitationClassComonent></InvitationClassComonent>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\AddUserToClassComponent.js",["590"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, Form,  } from \"semantic-ui-react\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchInvitationclass,\r\n  fetchInvitationclassId,\r\n} from \"../../redux/slices/classsline\";\r\nimport { ClassInvitationApi } from \"../../api/api\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\n\r\nexport default function AddUserToClassComponent(props) {\r\n  const dispatch = useDispatch();\r\n  const selectedusers = [];\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const classinvit = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const [modalOpen, SetModalOpen] = useState(false);\r\n\r\n  const handleOpen = (e) => SetModalOpen(true);\r\n  const handleClose = (e) => SetModalOpen(false);\r\n  props.users.forEach((element) => {\r\n    selectedusers.push({\r\n      label: element.name,\r\n      value: element._id,\r\n    });\r\n  });\r\n  const [selected, setSelected] = useState([]);\r\n  let error = { visible: false, message: \"\" };\r\n\r\n  const Add = async () => {\r\n    let data = [];\r\n    selected.forEach((itemselect) => {\r\n      data.push(itemselect.value);\r\n    });\r\n    for (let index = 0; index < data.length; index++) {\r\n      const element = data[index];\r\n      let verif1=true,verif2=true;\r\n        for (let index11 = 0; index11 < classinvit.classUsers.length; index11++) {\r\n        if(classinvit.classUsers[index11]._id===element)\r\n        {\r\n          verif1=false;\r\n          break;\r\n        }\r\n      }\r\n      for (let index22 = 0; index22 < props.members.length; index22++) {\r\n        if(props.members[index22].userOb._id===element )\r\n        {\r\n          verif2=false;\r\n          break;\r\n        }\r\n      \r\n      }\r\n      if(verif1 && verif2){\r\n      if (data.length > 0) {\r\n\r\n        const dataField = {\r\n          status: \"Invitation\",\r\n          classOb: classinvit._id,\r\n          userOb: element,\r\n        };\r\n        try {\r\n          await ClassInvitationApi.AddClassInvitation(dataField);\r\n          handleClose()\r\n          dispatch(fetchInvitationclass(documentData._id));\r\n          dispatch(fetchInvitationclassId(classinvit._id));\r\n        } catch (err) {\r\n          error = {\r\n            visible: true,\r\n            message: JSON.stringify(err.errors, null, 2),\r\n          };\r\n        }\r\n      }\r\n    }\r\n    else\r\n    console.log(\"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n\r\n      <Modal trigger={<Button\r\n        circular\r\n        content=\"Add User\"\r\n        icon=\"add\"\r\n        onClick={handleOpen}\r\n      />} open={modalOpen} onClose={handleClose} dimmer=\"inverted\">\r\n        <Modal.Header>Add User To Class</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field\r\n                control={MultiSelect}\r\n                options={selectedusers}\r\n                value={selected}\r\n                onChange={setSelected}\r\n                labelledBy=\"Select\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button.Group floated=\"right\">\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n            <Button.Or />\r\n            <Button color=\"red\" onClick={() => Add()} type=\"submit\">\r\n              Add\r\n            </Button>\r\n          </Button.Group>\r\n        </Modal.Actions>\r\n        <Modal.Content></Modal.Content>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\MemberComponent.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\TableSeance.js",["591","592","593","594","595","596"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport {\r\n  Card,\r\n  Dropdown,\r\n  Feed,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  GetSeancesByIdClass,\r\n  RetrieveSeances,\r\n} from \"../../redux/slices/Seance\";\r\nimport ModalConfirmDelete from \"./ModalConfirmDelete\";\r\nimport ModalSeance from \"./ModalSeance\";\r\nimport { RetrieveCoursesByIdSeance } from \"../../redux/slices/Courses\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\n\r\nfunction TableSeance(props) {\r\n  const seances = useSelector((state) => state.seance.seance);\r\n\r\n  const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  console.log(seances);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(GetSeancesByIdClass(CurrentClass._id));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {seances.length === 0 ? (\r\n        <>\r\n          <br />\r\n          <Image\r\n            centered\r\n            size=\"medium\"\r\n            src={process.env.PUBLIC_URL + \"/NothingToDisplay.png\"}\r\n          />\r\n          <Header as=\"h4\" textAlign=\"center\">\r\n            <Header.Content>No themes found </Header.Content>\r\n          </Header>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <Segment>\r\n            <Link to=\"/stream\">\r\n              <Header color=\"red\" as=\"h3\" textAlign=\"center\">\r\n                All Themes\r\n              </Header>\r\n            </Link>\r\n          </Segment>\r\n\r\n          <Card.Group>\r\n            {seances.map((seance) => (\r\n              <Card key={seance._id}>\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                    <Grid stackable>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={12}>\r\n                          <Link to={`/seance/${seance.titre}/${seance._id}`}>\r\n                            <Header as=\"h3\" color=\"red\">\r\n                              {seance.titre}\r\n                            </Header>\r\n                          </Link>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={4}>\r\n                          {isAuth().role === \"Teacher\" ? (\r\n                            <Dropdown\r\n                              fluid\r\n                              pointing\r\n                              direction=\"left\"\r\n                              className=\"icon\"\r\n                              icon=\"ellipsis vertical\"\r\n                            >\r\n                              <Dropdown.Menu>\r\n                                <ModalSeance\r\n                                  headerTitle=\"Edit Seance\"\r\n                                  buttonTriggerTitle=\"Edit\"\r\n                                  buttonSubmitTitle=\"Save\"\r\n                                  buttonColor=\"black\"\r\n                                  icon=\"edit\"\r\n                                  seanceId={seance._id}\r\n                                  //onSeanceUpdated={props.onSeanceUpdated}\r\n                                  //server={props.server}\r\n                                  //socket={this.props.socket}\r\n                                />\r\n\r\n                                <ModalConfirmDelete\r\n                                  headerTitle=\"Delete Seance\"\r\n                                  buttonTriggerTitle=\"Delete\"\r\n                                  buttonColor=\"red\"\r\n                                  icon=\"trash\"\r\n                                  seance={seance}\r\n                                  // onSeanceDeleted={props.onSeanceDeleted}\r\n                                  //server={props.server}\r\n                                  //socket={props.socket}\r\n                                />\r\n                              </Dropdown.Menu>\r\n                            </Dropdown>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Card.Header>\r\n                  <Card.Meta>\r\n                    <ReactTimeAgo date={seance.dateCreation} locale=\"en-US\" />\r\n                  </Card.Meta>\r\n                  <Card.Description>{seance.description}</Card.Description>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableSeance;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\TableCourses.js",["597","598","599","600","601","602","603","604","605","606","607","608"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Dimmer,\r\n  Dropdown,\r\n  Feed,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport ModalCoursesEdit from \"./ModalCoursesEdit\";\r\nimport ModalConfirmDeleteCourses from \"./ModalConfirmDeleteCour\";\r\n\r\n//import { Player, ControlBar } from \"video-react\";\r\nimport QierPlayer from \"qier-player\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport { Player, Video, DefaultUi } from \"@vime/react\";\r\nimport { RetrieveCoursesByIdClass } from \"../../redux/slices/Courses\";\r\n\r\nimport ModalCourses from \"./ModalCourses\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GetSeancesByIdClass } from \"../../redux/slices/Seance\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\n\r\n//import { Image } from \"semantic-ui-react\";\r\nfunction TableCourses(props) {\r\n  const courses = useSelector((state) => state.courses.courses);\r\n  const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  console.log(courses);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(RetrieveCoursesByIdClass(CurrentClass._id));\r\n  }, []);\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const louay = activeIndex;\r\n\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {courses.length === 0 ? (\r\n        <>\r\n          <Image\r\n            centered\r\n            size=\"medium\"\r\n            src={process.env.PUBLIC_URL + \"/NoFileFound.png\"}\r\n          />\r\n          <Header as=\"h2\" textAlign=\"center\">\r\n            <Header.Content>Sorry No Courses Found </Header.Content>\r\n          </Header>\r\n        </>\r\n      ) : (\r\n        courses.map((c, index) => (\r\n          <div>\r\n            <Accordion>\r\n              <Segment raised color=\"grey\">\r\n                <Feed key={c._id}>\r\n                  <Feed.Event>\r\n                    <Feed.Label image={c.idOwner.picture} />\r\n\r\n                    <Feed.Content>\r\n                      <Accordion.Title\r\n                        active={activeIndex === index}\r\n                        index={index}\r\n                        onClick={handleClick}\r\n                      >\r\n                        <Grid stackable>\r\n                          <Grid.Column width={11}>\r\n                            <Feed.Summary>\r\n                              <a>{c.idOwner.name}</a> posted a new course\r\n                              <Feed.Date>\r\n                                <ReactTimeAgo\r\n                                  date={c.dateCreation}\r\n                                  locale=\"en-US\"\r\n                                />\r\n                              </Feed.Date>\r\n                            </Feed.Summary>\r\n                          </Grid.Column>\r\n                          <Grid.Column width={5}>\r\n                            <>\r\n                              {isAuth().role === \"Teacher\" ? (\r\n                                <>\r\n                                  <Feed.Meta>\r\n                                    <Feed.Like>\r\n                                      <ModalCoursesEdit\r\n                                        headerTitle=\"Edit Courses\"\r\n                                        buttonTriggerTitle=\"Edit\"\r\n                                        buttonSubmitTitle=\"Save\"\r\n                                        buttonColor=\"black\"\r\n                                        icon=\"edit\"\r\n                                        coursesId={c._id}\r\n                                      />\r\n                                    </Feed.Like>\r\n                                  </Feed.Meta>\r\n                                  <Feed.Meta>\r\n                                    <Feed.Like>\r\n                                      <ModalConfirmDeleteCourses\r\n                                        headerTitle=\"Delete Courses\"\r\n                                        buttonTriggerTitle=\"Delete\"\r\n                                        buttonColor=\"red\"\r\n                                        icon=\"trash\"\r\n                                        courses={c}\r\n                                      />\r\n                                    </Feed.Like>\r\n                                  </Feed.Meta>\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </>\r\n                          </Grid.Column>\r\n                        </Grid>\r\n                      </Accordion.Title>\r\n\r\n                      <Accordion.Content active={activeIndex === index}>\r\n                        <Link to={\"/detailCourses/\" + c._id}>\r\n                          <Header\r\n                            as=\"h3\"\r\n                            icon=\"file alternate outline\"\r\n                            content={c.titre}\r\n                          />\r\n                        </Link>\r\n\r\n                        <Feed.Extra text>{c.description}</Feed.Extra>\r\n                        <Feed.Extra images>\r\n                          <Grid stackable>\r\n                            <Grid.Row>\r\n                              {c.multiple_resources.map((files, index) =>\r\n                                files.type === \"application/pdf\" ? (\r\n                                  <div key={index}>\r\n                                    <a\r\n                                      href={files.url}\r\n                                      target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\"\r\n                                    >\r\n                                      <div>\r\n                                        <Grid.Column width={3}>\r\n                                          <img\r\n                                            src={\r\n                                              process.env.PUBLIC_URL +\r\n                                              \"/files-type/\" +\r\n                                              \"pdf\" +\r\n                                              \".png\"\r\n                                            }\r\n                                            style={{\r\n                                              margin: \"10px\",\r\n                                              height: \"100px\",\r\n                                              width: \"100px\",\r\n                                            }}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={3}>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"red\">\r\n                                              {files.originalname.slice(0, 7)}\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"grey\">\r\n                                              {files.type.slice(0, 7)} File\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                        </Grid.Column>\r\n                                      </div>\r\n                                    </a>\r\n                                  </div>\r\n                                ) : files.type ===\r\n                                  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ? (\r\n                                  <div key={index}>\r\n                                    <a\r\n                                      href={files.url}\r\n                                      target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\"\r\n                                    >\r\n                                      <div>\r\n                                        <Grid.Column width={3}>\r\n                                          <img\r\n                                            src={\r\n                                              process.env.PUBLIC_URL +\r\n                                              \"/files-type/\" +\r\n                                              \"pptx\" +\r\n                                              \".png\"\r\n                                            }\r\n                                            style={{\r\n                                              margin: \"10px\",\r\n                                              height: \"100px\",\r\n                                              width: \"100px\",\r\n                                            }}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={3}>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"red\">\r\n                                              {files.originalname.slice(0, 7)}\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"grey\">\r\n                                              {files.type.slice(0, 7)} File\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                        </Grid.Column>\r\n                                      </div>\r\n                                    </a>\r\n                                  </div>\r\n                                ) : files.type ===\r\n                                  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ? (\r\n                                  <div key={index}>\r\n                                    <a\r\n                                      href={files.url}\r\n                                      target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\"\r\n                                    >\r\n                                      <div>\r\n                                        <Grid.Column width={3}>\r\n                                          <img\r\n                                            src={\r\n                                              process.env.PUBLIC_URL +\r\n                                              \"/files-type/\" +\r\n                                              \"docx\" +\r\n                                              \".png\"\r\n                                            }\r\n                                            style={{\r\n                                              margin: \"10px\",\r\n                                              height: \"100px\",\r\n                                              width: \"100px\",\r\n                                            }}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={3}>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"red\">\r\n                                              {files.originalname.slice(0, 7)}\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"grey\">\r\n                                              {files.type.slice(0, 7)} File\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                        </Grid.Column>\r\n                                      </div>\r\n                                    </a>\r\n                                  </div>\r\n                                ) : files.type === \"video/mp4\" ? (\r\n                                  <div>\r\n                                    <Grid.Column width={3}>\r\n                                      <QierPlayer\r\n                                        width={250}\r\n                                        height={100}\r\n                                        language=\"en\"\r\n                                        themeColor=\"#000000\"\r\n                                        srcOrigin={files.url}\r\n                                      />\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={3}>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"red\">\r\n                                          {files.originalname.slice(0, 7)}\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"grey\">\r\n                                          {files.type.slice(0, 7)} File\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                    </Grid.Column>\r\n                                  </div>\r\n                                ) : files.type === \"audio/mpeg\" ? (\r\n                                  <div>\r\n                                    <Grid.Column width={3}>\r\n                                      <div className=\"player-wrapper\">\r\n                                        <ReactPlayer\r\n                                          key={index}\r\n                                          width=\"250px\"\r\n                                          height=\"100px\"\r\n                                          controls={true}\r\n                                          url={files.url}\r\n                                        />\r\n                                      </div>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={3}>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"red\">\r\n                                          {files.originalname.slice(0, 7)}\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"grey\">\r\n                                          {files.type.slice(0, 7)} File\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                    </Grid.Column>\r\n                                  </div>\r\n                                ) : files.type === \"image/png\" ||\r\n                                  files.type === \"image/jpg\" ||\r\n                                  files.type === \"image/jpeg\" ||\r\n                                  files.type === \"image/gif\" ? (\r\n                                  <div>\r\n                                    <Grid.Column width={3}>\r\n                                      <a\r\n                                        href={files.url}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                      >\r\n                                        <img\r\n                                          src={files.url}\r\n                                          alt={files.type}\r\n                                          style={{\r\n                                            margin: \"10px\",\r\n                                            height: \"100px\",\r\n                                            width: \"100px\",\r\n                                          }}\r\n                                        />\r\n                                      </a>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={3}>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"red\">\r\n                                          {files.originalname.slice(0, 7)}\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"grey\">\r\n                                          {files.type.slice(0, 7)} File\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                    </Grid.Column>\r\n                                  </div>\r\n                                ) : (\r\n                                  // <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                  //   <img\r\n                                  //     src={files}\r\n                                  //     width=\"300px\"\r\n                                  //     style={{ margin: \"2px\" }}\r\n                                  //     alt=\"\"\r\n                                  //   />\r\n                                  // </a>\r\n                                  <a\r\n                                    href={files.url}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                  >\r\n                                    <div>\r\n                                      <Grid.Column width={3}>\r\n                                        <img\r\n                                          style={{\r\n                                            margin: \"10px\",\r\n                                            height: \"100px\",\r\n                                            width: \"100px\",\r\n                                          }}\r\n                                          src={\r\n                                            process.env.PUBLIC_URL +\r\n                                            \"/files-type/\" +\r\n                                            \"noFile.png\"\r\n                                          }\r\n                                          alt={files.type}\r\n                                        />\r\n                                      </Grid.Column>\r\n                                      <Grid.Column width={3}>\r\n                                        <Grid.Row>\r\n                                          <Header as=\"h4\" color=\"red\">\r\n                                            {files.originalname.slice(0, 7)}\r\n                                          </Header>\r\n                                        </Grid.Row>\r\n                                        <Grid.Row>\r\n                                          <Header as=\"h4\" color=\"grey\">\r\n                                            {files.type.slice(0, 7)} File\r\n                                          </Header>\r\n                                        </Grid.Row>\r\n                                      </Grid.Column>\r\n                                    </div>\r\n                                  </a>\r\n                                )\r\n                              )}\r\n                            </Grid.Row>\r\n                          </Grid>\r\n                        </Feed.Extra>\r\n                      </Accordion.Content>\r\n                    </Feed.Content>\r\n                  </Feed.Event>\r\n                </Feed>\r\n              </Segment>\r\n            </Accordion>\r\n            <br />\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableCourses;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\CalendarComponent.js",["609","610","611"],"import React from \"react\";\r\n//import { Button, Modal, Form, Input, TextArea } from \"semantic-ui-react\";\r\n//import { useFormik } from \"formik\";\r\n//import * as Yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport { Scheduler, Editing, Resource } from \"devextreme-react/scheduler\";\r\nimport { resourcesData } from \"../../api/data\";\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport Appointment from \"./Appointment\";\r\nimport AppointmentTooltip from \"./AppointmentTooltip\";\r\n\r\nimport \"whatwg-fetch\";\r\n\r\n\r\nfunction handleErrors(response) {\r\n  if (!response.ok) throw Error(response.statusText);\r\n  return response;\r\n}\r\nconst documentData = JSON.parse(localStorage.getItem(\"user\"));\r\nconst schedulerDataSource = {\r\n  store: new CustomStore({\r\n    load: () => {\r\n      return fetch(\"https://closer-server.herokuapp.com/scheduler/\")\r\n        .then(handleErrors)\r\n        .then((response) => response.json());\r\n    },\r\n    insert: (values) => {\r\n      console.log(values);\r\n      const data = {\r\n        text: values.text,\r\n        startDate: values.startDate,\r\n        endDate: values.endDate,\r\n        description: values.description,\r\n        sectionId: values.sectionId,\r\n        allDay: values.allDay,\r\n        postOwner: documentData._id,\r\n      };\r\n      return fetch(\"https://closer-server.herokuapp.com/scheduler/\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then(handleErrors)\r\n        .then((response) => response.json());\r\n    },\r\n    remove: (key) => {\r\n      return fetch(`https://closer-server.herokuapp.com/scheduler/${key._id}`, {\r\n        method: \"DELETE\",\r\n      })\r\n        .then(handleErrors)\r\n        .then((response) => response.json());\r\n    },\r\n    update: (key, values) => {\r\n      return fetch(`https://closer-server.herokuapp.com/scheduler/${key._id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(values),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then(handleErrors)\r\n        .then((response) => response.json());\r\n    },\r\n    paginate: false,\r\n  }),\r\n};\r\nexport default function CalendarComponent() {\r\n  let allows ={ };\r\n  if (documentData.role===\"Student\") {\r\n    allows ={\r\n      allowAdding: false,\r\n      allowDeleting: false,\r\n      allowResizing: false,\r\n      allowDragging: false,\r\n      allowUpdating: false,\r\n    }\r\n  }\r\n  else if (documentData.role===\"Teacher\")\r\n  {\r\n    allows ={\r\n      allowAdding: true,\r\n      allowDeleting: true,\r\n      allowResizing: true,\r\n      allowDragging: true,\r\n      allowUpdating: true,\r\n    }\r\n  }\r\n \r\n\r\n  const showToast = (event, value, type) => {\r\n    notify(`${event} \"${value}\" task`, type, 800);\r\n  };\r\n\r\n  const showAddedToast = (e) => {\r\n    showToast(\"Added\", e.appointmentData.result.text, \"success\");\r\n  };\r\n\r\n  const showUpdatedToast = (e) => {\r\n    showToast(\"Updated\", e.appointmentData.result.text, \"info\");\r\n  };\r\n\r\n /* const showDeletedToast = (e) => {\r\n    showToast(\"Deleted\", e.appointmentData.result.text, \"warning\");\r\n  };*/\r\n  const views = [\"day\", \"week\", \"month\", \"agenda\"];\r\n  return (\r\n    <div>\r\n      <Scheduler\r\n        dataSource={schedulerDataSource}\r\n        showAllDayPanel={true}\r\n        views={views}\r\n        editing={allows}\r\n        defaultCurrentView=\"month\"\r\n        onAppointmentAdded={showAddedToast}\r\n        onAppointmentUpdated={showUpdatedToast}\r\n        appointmentComponent={Appointment}\r\n        //onAppointmentDeleted={showDeletedToast}\r\n      >\r\n        <Resource\r\n          fieldExpr=\"sectionId\"\r\n          allowMultiple={true}\r\n          dataSource={resourcesData}\r\n          label=\"Section\"\r\n          useColorAsDefault={true}\r\n        />\r\n      </Scheduler>\r\n    </div>\r\n  );\r\n}\r\n\r\n//<Editing allowUpdating={allowAddingg} allowAdding={true} allowDeleting={true} />     appointmentTooltipComponent={AppointmentTooltip}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ScreenRecord.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\DetailCourses.js",["612","613","614","615","616","617","618","619","620"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport ScreenRecord from \"./ScreenRecord\";\r\nimport QierPlayer from \"qier-player\";\r\n\r\nimport {\r\n  Button,\r\n  Comment,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport { GetCoursesById } from \"../../redux/slices/Courses\";\r\nimport CommentComponent from \"../Comment/CommentComponent\";\r\nimport CommentChat from \"./CommentChat\";\r\n\r\nfunction DetailCourses() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const ress = useSelector((state) => state.courses.Resources);\r\n  const [titre, setTitre] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [dateCreation, setDateCreation] = useState(Date.now());\r\n  const [resources, setResources] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(GetCoursesById(id)).then((response) => {\r\n      console.log(response);\r\n      setTitre(response.payload.titre);\r\n      setDescription(response.payload.description);\r\n      setDateCreation(response.payload.dateCreation);\r\n      setResources(response.payload.multiple_resources);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid stackable>\r\n        <Grid.Row>\r\n          <Grid.Column width={1}></Grid.Column>\r\n          <Grid.Column width={14}>\r\n            <Header as=\"h1\">\r\n              <Icon name=\"file alternate\" />\r\n              <Header.Content>\r\n                {titre}\r\n                <Header.Subheader>\r\n                  <ReactTimeAgo date={dateCreation} locale=\"en-US\" />\r\n                </Header.Subheader>\r\n              </Header.Content>\r\n            </Header>\r\n            <Divider></Divider>\r\n            <br />\r\n            <Container>\r\n              <p>{description}</p>\r\n            </Container>\r\n            <br />\r\n            <Grid stackable>\r\n              <Grid.Row>\r\n                {resources.map((files, index) =>\r\n                  files.type === \"application/pdf\" ? (\r\n                    <div key={index}>\r\n                      <a\r\n                        href={files.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <div>\r\n                          <Grid.Column width={3}>\r\n                            <img\r\n                              src={\r\n                                process.env.PUBLIC_URL +\r\n                                \"/files-type/\" +\r\n                                \"pdf\" +\r\n                                \".png\"\r\n                              }\r\n                              style={{\r\n                                margin: \"10px\",\r\n                                height: \"100px\",\r\n                                width: \"100px\",\r\n                              }}\r\n                              alt=\"\"\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column width={3}>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"red\">\r\n                                {files.originalname.slice(0, 7)}\r\n                              </Header>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"grey\">\r\n                                {files.type.slice(0, 7)} File\r\n                              </Header>\r\n                            </Grid.Row>\r\n                          </Grid.Column>\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  ) : files.type ===\r\n                    \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ? (\r\n                    <div key={index}>\r\n                      <a\r\n                        href={files.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <div>\r\n                          <Grid.Column width={3}>\r\n                            <img\r\n                              src={\r\n                                process.env.PUBLIC_URL +\r\n                                \"/files-type/\" +\r\n                                \"pptx\" +\r\n                                \".png\"\r\n                              }\r\n                              style={{\r\n                                margin: \"10px\",\r\n                                height: \"100px\",\r\n                                width: \"100px\",\r\n                              }}\r\n                              alt=\"\"\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column width={3}>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"red\">\r\n                                {files.originalname.slice(0, 7)}\r\n                              </Header>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"grey\">\r\n                                {files.type.slice(0, 7)} File\r\n                              </Header>\r\n                            </Grid.Row>\r\n                          </Grid.Column>\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  ) : files.type ===\r\n                    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ? (\r\n                    <div key={index}>\r\n                      <a\r\n                        href={files.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        <div>\r\n                          <Grid.Column width={3}>\r\n                            <img\r\n                              src={\r\n                                process.env.PUBLIC_URL +\r\n                                \"/files-type/\" +\r\n                                \"docx\" +\r\n                                \".png\"\r\n                              }\r\n                              style={{\r\n                                margin: \"10px\",\r\n                                height: \"100px\",\r\n                                width: \"100px\",\r\n                              }}\r\n                              alt=\"\"\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column width={3}>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"red\">\r\n                                {files.originalname.slice(0, 7)}\r\n                              </Header>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                              <Header as=\"h4\" color=\"grey\">\r\n                                {files.type.slice(0, 7)} File\r\n                              </Header>\r\n                            </Grid.Row>\r\n                          </Grid.Column>\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  ) : files.type === \"video/mp4\" ? (\r\n                    <div>\r\n                      <Grid.Column width={3}>\r\n                        <QierPlayer\r\n                          width={250}\r\n                          height={100}\r\n                          language=\"en\"\r\n                          themeColor=\"#000000\"\r\n                          srcOrigin={files.url}\r\n                        />\r\n                      </Grid.Column>\r\n                      <Grid.Column width={3}>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"red\">\r\n                            {files.originalname.slice(0, 7)}\r\n                          </Header>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"grey\">\r\n                            {files.type.slice(0, 7)} File\r\n                          </Header>\r\n                        </Grid.Row>\r\n                      </Grid.Column>\r\n                    </div>\r\n                  ) : files.type === \"audio/mpeg\" ? (\r\n                    <div>\r\n                      <Grid.Column width={3}>\r\n                        <div className=\"player-wrapper\">\r\n                          <ReactPlayer\r\n                            key={index}\r\n                            width=\"250px\"\r\n                            height=\"100px\"\r\n                            controls={true}\r\n                            url={files.url}\r\n                          />\r\n                        </div>\r\n                      </Grid.Column>\r\n                      <Grid.Column width={3}>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"red\">\r\n                            {files.originalname.slice(0, 7)}\r\n                          </Header>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"grey\">\r\n                            {files.type.slice(0, 7)} File\r\n                          </Header>\r\n                        </Grid.Row>\r\n                      </Grid.Column>\r\n                    </div>\r\n                  ) : files.type === \"image/png\" ||\r\n                    files.type === \"image/jpg\" ||\r\n                    files.type === \"image/jpeg\" ||\r\n                    files.type === \"image/gif\" ? (\r\n                    <div>\r\n                      <Grid.Column width={3}>\r\n                        <a\r\n                          href={files.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <img\r\n                            src={files.url}\r\n                            alt={files.originalname}\r\n                            style={{\r\n                              margin: \"10px\",\r\n                              height: \"100px\",\r\n                              width: \"100px\",\r\n                            }}\r\n                          />\r\n                        </a>\r\n                      </Grid.Column>\r\n                      <Grid.Column width={3}>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"red\">\r\n                            {files.originalname.slice(0, 7)}\r\n                          </Header>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                          <Header as=\"h4\" color=\"grey\">\r\n                            {files.type.slice(0, 7)} File\r\n                          </Header>\r\n                        </Grid.Row>\r\n                      </Grid.Column>\r\n                    </div>\r\n                  ) : (\r\n                    <a\r\n                      href={files.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <div>\r\n                        <Grid.Column width={3}>\r\n                          <img\r\n                            style={{\r\n                              margin: \"10px\",\r\n                              height: \"100px\",\r\n                              width: \"100px\",\r\n                            }}\r\n                            src={\r\n                              process.env.PUBLIC_URL +\r\n                              \"/files-type/\" +\r\n                              \"noFile.png\"\r\n                            }\r\n                            alt={files.originalname}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                          <Grid.Row>\r\n                            <Header as=\"h4\" color=\"red\">\r\n                              {files.originalname.slice(0, 7)}\r\n                            </Header>\r\n                          </Grid.Row>\r\n                          <Grid.Row>\r\n                            <Header as=\"h4\" color=\"grey\">\r\n                              {files.type.slice(0, 7)} File\r\n                            </Header>\r\n                          </Grid.Row>\r\n                        </Grid.Column>\r\n                      </div>\r\n                    </a>\r\n                  )\r\n                )}\r\n              </Grid.Row>\r\n            </Grid>\r\n            <br />\r\n            <br />\r\n            <CommentComponent courseID={id} />\r\n            <br />\r\n          </Grid.Column>\r\n          <Grid.Column width={1}></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailCourses;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ListCoursesBySeance.js",["621","622","623","624","625"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport {\r\n  Accordion,\r\n  Feed,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Label,\r\n  LabelDetail,\r\n  Progress,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { RetrieveCoursesByIdSeance } from \"../../redux/slices/Courses\";\r\nimport ModalCoursesEdit from \"./ModalCoursesEdit\";\r\nimport QierPlayer from \"qier-player\";\r\nimport ModalConfirmDeleteCourses from \"./ModalConfirmDeleteCour\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\n\r\nfunction ListCoursesBySeance() {\r\n  const { id, titre } = useParams();\r\n  const courses = useSelector((state) => state.courses.coursesBySeance);\r\n  const dispatch = useDispatch();\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const louay = activeIndex;\r\n\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(courses);\r\n\r\n    dispatch(RetrieveCoursesByIdSeance(id));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {courses.length === 0 ? (\r\n        <>\r\n          <Image\r\n            centered\r\n            size=\"medium\"\r\n            src={process.env.PUBLIC_URL + \"/NoFileFound.png\"}\r\n          />\r\n          <Header as=\"h2\" textAlign=\"center\">\r\n            <Header.Content>Sorry No Courses Found </Header.Content>\r\n          </Header>\r\n        </>\r\n      ) : (\r\n        <Header as=\"h2\" color=\"red\" icon textAlign=\"center\">\r\n          <Icon color=\"red\" name=\"file alternate\" circular />\r\n          <Header.Content>\r\n            {\"Courses Available for \"}{\" \"}\r\n            <Label color=\"black\" horizontal>\r\n              {titre}\r\n            </Label>\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n\r\n      <div>\r\n        {courses.map((c, index) => (\r\n          <div>\r\n            <Accordion>\r\n              <Segment raised color=\"grey\">\r\n                <Feed key={c._id}>\r\n                  <Feed.Event>\r\n                    <Feed.Label image={c.idOwner.picture} />\r\n\r\n                    <Feed.Content>\r\n                      <Accordion.Title\r\n                        active={activeIndex === index}\r\n                        index={index}\r\n                        onClick={handleClick}\r\n                      >\r\n                        <Grid stackable>\r\n                          <Grid.Column width={11}>\r\n                            <Feed.Summary>\r\n                              <a>{c.idOwner.name}</a> posted a new course\r\n                              <Feed.Date>\r\n                                <ReactTimeAgo\r\n                                  date={c.dateCreation}\r\n                                  locale=\"en-US\"\r\n                                />\r\n                              </Feed.Date>\r\n                            </Feed.Summary>\r\n                          </Grid.Column>\r\n                          <Grid.Column width={5}>\r\n                            <>\r\n                              {isAuth().role === \"Teacher\" ? (\r\n                                <>\r\n                                  <Feed.Meta>\r\n                                    <Feed.Like>\r\n                                      <ModalCoursesEdit\r\n                                        headerTitle=\"Edit Courses\"\r\n                                        buttonTriggerTitle=\"Edit\"\r\n                                        buttonSubmitTitle=\"Save\"\r\n                                        buttonColor=\"black\"\r\n                                        icon=\"edit\"\r\n                                        coursesId={c._id}\r\n                                      />\r\n                                    </Feed.Like>\r\n                                  </Feed.Meta>\r\n                                  <Feed.Meta>\r\n                                    <Feed.Like>\r\n                                      <ModalConfirmDeleteCourses\r\n                                        headerTitle=\"Delete Courses\"\r\n                                        buttonTriggerTitle=\"Delete\"\r\n                                        buttonColor=\"red\"\r\n                                        icon=\"trash\"\r\n                                        courses={c}\r\n                                      />\r\n                                    </Feed.Like>\r\n                                  </Feed.Meta>\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </>\r\n                          </Grid.Column>\r\n                        </Grid>\r\n                      </Accordion.Title>\r\n\r\n                      <Accordion.Content active={activeIndex === index}>\r\n                        <Link to={\"/detailCourses/\" + c._id}>\r\n                          <Header\r\n                            as=\"h3\"\r\n                            icon=\"file alternate outline\"\r\n                            content={c.titre}\r\n                          />\r\n                        </Link>\r\n\r\n                        <Feed.Extra text>{c.description}</Feed.Extra>\r\n                        <Feed.Extra images>\r\n                          <Grid stackable>\r\n                            <Grid.Row>\r\n                              {c.multiple_resources.map((files, index) =>\r\n                                files.type === \"application/pdf\" ? (\r\n                                  <div key={index}>\r\n                                    <a\r\n                                      href={files.url}\r\n                                      target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\"\r\n                                    >\r\n                                      <div>\r\n                                        <Grid.Column width={3}>\r\n                                          <img\r\n                                            src={\r\n                                              process.env.PUBLIC_URL +\r\n                                              \"/files-type/\" +\r\n                                              \"pdf\" +\r\n                                              \".png\"\r\n                                            }\r\n                                            style={{\r\n                                              margin: \"10px\",\r\n                                              height: \"100px\",\r\n                                              width: \"100px\",\r\n                                            }}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={3}>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"red\">\r\n                                              {files.originalname}\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"grey\">\r\n                                              {files.type.slice(0, 7)} File\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                        </Grid.Column>\r\n                                      </div>\r\n                                    </a>\r\n                                  </div>\r\n                                ) : files.type ===\r\n                                  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ? (\r\n                                  <div key={index}>\r\n                                    <a\r\n                                      href={files.url}\r\n                                      target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\"\r\n                                    >\r\n                                      <div>\r\n                                        <Grid.Column width={3}>\r\n                                          <img\r\n                                            src={\r\n                                              process.env.PUBLIC_URL +\r\n                                              \"/files-type/\" +\r\n                                              \"pptx\" +\r\n                                              \".png\"\r\n                                            }\r\n                                            style={{\r\n                                              margin: \"10px\",\r\n                                              height: \"100px\",\r\n                                              width: \"100px\",\r\n                                            }}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={3}>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"red\">\r\n                                              {files.originalname}\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"grey\">\r\n                                              {files.type.slice(0, 7)} File\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                        </Grid.Column>\r\n                                      </div>\r\n                                    </a>\r\n                                  </div>\r\n                                ) : files.type ===\r\n                                  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ? (\r\n                                  <div key={index}>\r\n                                    <a\r\n                                      href={files.url}\r\n                                      target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\"\r\n                                    >\r\n                                      <div>\r\n                                        <Grid.Column width={3}>\r\n                                          <img\r\n                                            src={\r\n                                              process.env.PUBLIC_URL +\r\n                                              \"/files-type/\" +\r\n                                              \"docx\" +\r\n                                              \".png\"\r\n                                            }\r\n                                            style={{\r\n                                              margin: \"10px\",\r\n                                              height: \"100px\",\r\n                                              width: \"100px\",\r\n                                            }}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column width={3}>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"red\">\r\n                                              {files.originalname}\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                          <Grid.Row>\r\n                                            <Header as=\"h4\" color=\"grey\">\r\n                                              {files.type.slice(0, 7)} File\r\n                                            </Header>\r\n                                          </Grid.Row>\r\n                                        </Grid.Column>\r\n                                      </div>\r\n                                    </a>\r\n                                  </div>\r\n                                ) : files.type === \"video/mp4\" ? (\r\n                                  <div>\r\n                                    <Grid.Column width={3}>\r\n                                      <QierPlayer\r\n                                        width={250}\r\n                                        height={100}\r\n                                        language=\"en\"\r\n                                        themeColor=\"#000000\"\r\n                                        srcOrigin={files.url}\r\n                                      />\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={3}>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"red\">\r\n                                          {files.originalname.slice(0, 7)}\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"grey\">\r\n                                          {files.type.slice(0, 7)} File\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                    </Grid.Column>\r\n                                  </div>\r\n                                ) : files.type === \"audio/mpeg\" ? (\r\n                                  <div>\r\n                                    <Grid.Column width={3}>\r\n                                      <div className=\"player-wrapper\">\r\n                                        <ReactPlayer\r\n                                          key={index}\r\n                                          width=\"250px\"\r\n                                          height=\"100px\"\r\n                                          controls={true}\r\n                                          url={files.url}\r\n                                        />\r\n                                      </div>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={3}>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"red\">\r\n                                          {files.originalname.slice(0, 7)}\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"grey\">\r\n                                          {files.type.slice(0, 7)} File\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                    </Grid.Column>\r\n                                  </div>\r\n                                ) : files.type === \"image/png\" ||\r\n                                  files.type === \"image/jpg\" ||\r\n                                  files.type === \"image/jpeg\" ||\r\n                                  files.type === \"image/gif\" ? (\r\n                                  <div>\r\n                                    <Grid.Column width={3}>\r\n                                      <a\r\n                                        href={files.url}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                      >\r\n                                        <img\r\n                                          src={files.url}\r\n                                          alt={files.type}\r\n                                          style={{\r\n                                            margin: \"10px\",\r\n                                            height: \"100px\",\r\n                                            width: \"100px\",\r\n                                          }}\r\n                                        />\r\n                                      </a>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={3}>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"red\">\r\n                                          {files.originalname}\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                      <Grid.Row>\r\n                                        <Header as=\"h4\" color=\"grey\">\r\n                                          {files.type.slice(0, 7)} File\r\n                                        </Header>\r\n                                      </Grid.Row>\r\n                                    </Grid.Column>\r\n                                  </div>\r\n                                ) : (\r\n                                  // <a href={files} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                  //   <img\r\n                                  //     src={files}\r\n                                  //     width=\"300px\"\r\n                                  //     style={{ margin: \"2px\" }}\r\n                                  //     alt=\"\"\r\n                                  //   />\r\n                                  // </a>\r\n                                  <a\r\n                                    href={files.url}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                  >\r\n                                    <div>\r\n                                      <Grid.Column width={3}>\r\n                                        <img\r\n                                          style={{\r\n                                            margin: \"10px\",\r\n                                            height: \"100px\",\r\n                                            width: \"100px\",\r\n                                          }}\r\n                                          src={\r\n                                            process.env.PUBLIC_URL +\r\n                                            \"/files-type/\" +\r\n                                            \"noFile.png\"\r\n                                          }\r\n                                          alt={files.type}\r\n                                        />\r\n                                      </Grid.Column>\r\n                                      <Grid.Column width={3}>\r\n                                        <Grid.Row>\r\n                                          <Header as=\"h4\" color=\"red\">\r\n                                            {files.originalname}\r\n                                          </Header>\r\n                                        </Grid.Row>\r\n                                        <Grid.Row>\r\n                                          <Header as=\"h4\" color=\"grey\">\r\n                                            {files.type.slice(0, 7)} File\r\n                                          </Header>\r\n                                        </Grid.Row>\r\n                                      </Grid.Column>\r\n                                    </div>\r\n                                  </a>\r\n                                )\r\n                              )}\r\n                            </Grid.Row>\r\n                          </Grid>\r\n                        </Feed.Extra>\r\n                      </Accordion.Content>\r\n                    </Feed.Content>\r\n                  </Feed.Event>\r\n                </Feed>\r\n              </Segment>\r\n            </Accordion>\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListCoursesBySeance;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\BottomBar\\BottomBar.js",["626","627","628","629","630"],"import React, { useCallback, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useMediaRecorder from \"@wmik/use-media-recorder\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport { AddCourses } from \"../../redux/slices/Courses\";\r\n\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport ListUsers from \"./ListUsers\";\r\n\r\nconst BottomBar = ({\r\n  clickChat,\r\n  goToBack,\r\n  toggleCameraAudio,\r\n  userVideoAudio,\r\n  clickScreenSharing,\r\n  screenShare,\r\n  videoDevices,\r\n  showVideoDevices,\r\n  setShowVideoDevices,\r\n  listuserRoom,\r\n}) => {\r\n  const handleToggle = useCallback(\r\n    (e) => {\r\n      setShowVideoDevices((state) => !state);\r\n    },\r\n    [setShowVideoDevices]\r\n  );\r\n\r\n  function Player({ srcBlob, audio }) {\r\n    if (!srcBlob) {\r\n      return null;\r\n    }\r\n\r\n    if (audio) {\r\n      return <audio src={URL.createObjectURL(srcBlob)} controls />;\r\n    }\r\n\r\n    return (\r\n      <video\r\n        src={URL.createObjectURL(srcBlob)}\r\n        width={520}\r\n        height={480}\r\n        controls\r\n      />\r\n    );\r\n  }\r\n\r\n  let {\r\n    error,\r\n    status,\r\n    mediaBlob,\r\n    stopRecording,\r\n    getMediaStream,\r\n    startRecording,\r\n  } = useMediaRecorder({\r\n    recordScreen: true,\r\n    blobOptions: { type: \"video/mp4\" },\r\n    mediaStreamConstraints: { audio: true, video: true },\r\n    mediaRecorderOptions: {\r\n      audioBitsPerSecond: 128000,\r\n      videoBitsPerSecond: 2500000,\r\n    },\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = React.useState(false);\r\n  const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  useEffect(() => {\r\n    if (!mediaBlob) {\r\n      return;\r\n    }\r\n\r\n    console.log(mediaBlob);\r\n    const idSeance = \"\";\r\n    const today = Date.now();\r\n    const titre =\r\n      \"Recorded Session of : \" +\r\n      new Intl.DateTimeFormat(\"en-US\", {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n      }).format(today);\r\n    const description =\r\n      \"this is a recorded session was added as a course automaticly beacause your teacher has recorded the lesson so you can access to this video .\";\r\n    const multiple_resources = [];\r\n    multiple_resources.push(mediaBlob);\r\n    const idOwner = isAuth()._id;\r\n    const idClass = CurrentClass._id;\r\n    dispatch(\r\n      AddCourses(\r\n        idSeance,\r\n        titre,\r\n        description,\r\n        multiple_resources,\r\n        idOwner,\r\n        idClass\r\n      )\r\n    ).then((res) => {\r\n      console.log(res.data);\r\n    });\r\n  }, [mediaBlob]);\r\n \r\n  return (\r\n    <Bar>\r\n      <Left>\r\n      <ListUsers  userlistromm={listuserRoom}/>\r\n        <CameraButton onClick={toggleCameraAudio} data-switch=\"video\">\r\n          <div>\r\n            {userVideoAudio.video ? (\r\n              <FaIcon className=\"fas fa-video\"></FaIcon>\r\n            ) : (\r\n              <FaIcon className=\"fas fa-video-slash\"></FaIcon>\r\n            )}\r\n          </div>\r\n          Camera\r\n        </CameraButton>\r\n        {showVideoDevices && (\r\n          <SwitchList>\r\n            {videoDevices.length > 0 &&\r\n              videoDevices.map((device) => {\r\n                console.log(device);\r\n                return <div>{device.label}</div>;\r\n              })}\r\n            <div>Switch Camera</div>\r\n          </SwitchList>\r\n        )}\r\n        <SwitchMenu onClick={handleToggle}>\r\n          <i className=\"fas fa-angle-up\"></i>\r\n        </SwitchMenu>\r\n        <CameraButton onClick={toggleCameraAudio} data-switch=\"audio\">\r\n          <div>\r\n            {userVideoAudio.audio ? (\r\n              <FaIcon className=\"fas fa-microphone\"></FaIcon>\r\n            ) : (\r\n              <FaIcon className=\"fas fa-microphone-slash\"></FaIcon>\r\n            )}\r\n          </div>\r\n          Audio\r\n        </CameraButton>\r\n\r\n      </Left>\r\n      <Center>\r\n        <ChatButton onClick={clickChat}>\r\n          <div>\r\n            <FaIcon className=\"fas fa-comments\"></FaIcon>\r\n          </div>\r\n          Chat\r\n        </ChatButton>\r\n        <StartButton onClick={startRecording} disabled={status === \"recording\"}>\r\n          <div>\r\n            <FaIcon className=\"fas fa-play-circle\"></FaIcon>\r\n          </div>\r\n          Start\r\n        </StartButton>\r\n        {/* Modal of info when record has been stoped */}\r\n        <Modal\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          open={open}\r\n          trigger={\r\n            <StopRecordButton\r\n              onClick={stopRecording}\r\n              disabled={status !== \"recording\"}\r\n            >\r\n              <div>\r\n                <FaIcon className=\"fas fa-stop-circle\"></FaIcon>\r\n              </div>\r\n              Stop\r\n            </StopRecordButton>\r\n          }\r\n        >\r\n          <Header icon=\"record\" content=\"Information about Record Session\" />\r\n          <Modal.Content>\r\n            <p>\r\n              After this session got recorded it will be added automatically as\r\n              a new courses in your class timeline and it will take as a title\r\n              \"Recorded Session of today\"\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"red\" onClick={() => setOpen(false)}>\r\n              <Icon name=\"remove\" /> ok\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n\r\n        {/* Modal of info when record has been stoped */}\r\n\r\n        <ScreenButton onClick={clickScreenSharing}>\r\n          <div>\r\n            <FaIcon\r\n              className={`fas fa-desktop ${screenShare ? \"sharing\" : \"\"}`}\r\n            ></FaIcon>\r\n          </div>\r\n          Share Screen\r\n        </ScreenButton>\r\n        <a href=\"http://localhost:3000/WhiteBoard\" target=\"_blank\"\r\n                                      rel=\"noopener noreferrer\" >\r\n           <WhiteBoard>\r\n           <div>\r\n            <FaIcon\r\n              className={'fas fa-chalkboard-teacher'}\r\n            ></FaIcon>\r\n          </div>\r\n          WhiteBoard\r\n        </WhiteBoard>\r\n        </a>\r\n      </Center>\r\n\r\n      <Right>\r\n        <StopButton onClick={goToBack}>Stop</StopButton>\r\n      </Right>\r\n    </Bar>\r\n  );\r\n};\r\n\r\nconst Bar = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 8%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 500;\r\n  background-color: red;\r\n`;\r\nconst Left = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin-left: 15px;\r\n`;\r\nconst WhiteBoard = styled.div`\r\nwidth: 75px;\r\nborder: none;\r\nfont-size: 0.9375rem;\r\npadding: 5px;\r\n\r\n:hover {\r\n  background-color: #77b7dd;\r\n  cursor: pointer;\r\n  border-radius: 15px;\r\n}\r\n\r\n* {\r\n  pointer-events: none;\r\n}\r\n`;\r\nconst Center = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Right = styled.div``;\r\n\r\nconst ChatButton = styled.div`\r\n  width: 75px;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  padding: 5px;\r\n\r\n  :hover {\r\n    background-color: #77b7dd;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  * {\r\n    pointer-events: none;\r\n  }\r\n`;\r\nconst StartButton = styled.div`\r\n  width: 75px;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  padding: 5px;\r\n\r\n  :hover {\r\n    background-color: #77b7dd;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  * {\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst StopRecordButton = styled.div`\r\n  width: 75px;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  padding: 5px;\r\n\r\n  :hover {\r\n    background-color: #77b7dd;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  * {\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst ScreenButton = styled.div`\r\n  width: auto;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  padding: 5px;\r\n\r\n  :hover {\r\n    background-color: #77b7dd;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .sharing {\r\n    color: #ee2560;\r\n  }\r\n`;\r\n\r\nconst FaIcon = styled.i`\r\n  width: 30px;\r\n  font-size: calc(16px + 1vmin);\r\n`;\r\n\r\nconst StopButton = styled.div`\r\n  width: 75px;\r\n  height: 30px;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  line-height: 30px;\r\n  margin-right: 15px;\r\n  background-color: grey;\r\n  border-radius: 15px;\r\n\r\n  :hover {\r\n    background-color: #f25483;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CameraButton = styled.div`\r\n  position: relative;\r\n  width: 75px;\r\n  border: none;\r\n  font-size: 0.9375rem;\r\n  padding: 5px;\r\n\r\n  :hover {\r\n    background-color: #77b7dd;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  * {\r\n    pointer-events: none;\r\n  }\r\n\r\n  .fa-microphone-slash {\r\n    color: #ee2560;\r\n  }\r\n\r\n  .fa-video-slash {\r\n    color: #ee2560;\r\n  }\r\n`;\r\n\r\nconst SwitchMenu = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  width: 20px;\r\n  top: 7px;\r\n  left: 80px;\r\n  z-index: 1;\r\n\r\n  :hover {\r\n    background-color: #476d84;\r\n    cursor: pointer;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  * {\r\n    pointer-events: none;\r\n  }\r\n\r\n  > i {\r\n    width: 90%;\r\n    font-size: calc(10px + 1vmin);\r\n  }\r\n`;\r\n\r\nconst SwitchList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: -115px;\r\n  left: 80px;\r\n  background-color: #4ea1d3;\r\n  color: white;\r\n  padding-top: 5px;\r\n  padding-right: 10px;\r\n  padding-bottom: 5px;\r\n  padding-left: 10px;\r\n  text-align: left;\r\n\r\n  > div {\r\n    font-size: 0.85rem;\r\n    padding: 1px;\r\n    margin-bottom: 5px;\r\n\r\n    :not(:last-child):hover {\r\n      background-color: #77b7dd;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  > div:last-child {\r\n    border-top: 1px solid white;\r\n    cursor: context-menu !important;\r\n  }\r\n`;\r\n\r\nexport default BottomBar;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Chat\\Chat.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Video\\VideoCard.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\DetailsQuestionComponent.js",["631","632","633","634","635","636","637","638","639","640","641","642","643","644","645"],"import { fetchAnswers, selectAnswer } from \"../../redux/slices/answerslice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { selectQuestions } from \"../../redux/slices/questionslice\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddAnswersApi, notificationsApi } from \"../../api/api\";\r\nimport { fetchQuestions } from \"../../redux/slices/questionslice\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Comment,\r\n  Container,\r\n  Dropdown,\r\n  Feed,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Label,\r\n  List,\r\n  Message,\r\n  Segment,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport AddQuestion from \"./AddQuestionComponent\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport EditQuestions from \"./EditQuestionComponent\";\r\nimport EditAnswer from \"../answer/EditAnswer\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\n  function DetailsQuestion(props) {\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const socket = io(ENDPOINT);\r\n\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [text, setText] = useState(\"\");\r\n  function handleOnEnter(text) {\r\n  }\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchQuestions(currentClass._id));\r\n  }, [dispatch]);\r\n\r\n  const id = props.match.params.id;\r\n  useEffect(() => {\r\n    socket.on(\"new-answer\", (content) => {\r\n      dispatch(fetchAnswers(id));\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n  const [questions, errr] = useSelector(selectQuestions);\r\n  useEffect(() => {\r\n    dispatch(fetchAnswers(id));\r\n  }, [dispatch]);\r\n  const [notif] = useState({\r\n    Message: \"new comment for your question !\",\r\n    Owner: [],\r\n    Question: { _id: \"\" + id },\r\n  });\r\n  const [questionAndanswer, er] = useSelector(selectAnswer);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Body: \" \",\r\n      Writer: { _id: \"\" + documentData._id },\r\n      Question: {},\r\n      Filee: [],\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      values.Question = id;\r\n      values.Filee = Images;\r\n      values.Body = text;\r\n\r\n      try {\r\n        if (values.Body !== \" \") {\r\n          const res = await AddAnswersApi.postAnswers(values);\r\n\r\n          if (Images.length != 0) {\r\n            setEnableUpload(true);\r\n          }\r\n          try {\r\n            let arr;\r\n            questions.forEach((element) => {\r\n              if (element._id === id) {\r\n                arr = [element.Writerq._id];\r\n              }\r\n            });\r\n            notif.Owner = arr;\r\n            const res2 = await notificationsApi.addNotification(notif);\r\n\r\n            socket.emit(\"add-new-notification\", arr);\r\n          } catch (error) {\r\n            alert(error);\r\n          }\r\n          setText(\"\");\r\n          updateImages([]);\r\n          dispatch(fetchQuestions(currentClass._id));\r\n\r\n          dispatch(fetchAnswers(id));\r\n\r\n          socket.emit(\"send_answer\", \"message\");\r\n        }\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n    setImages(newImages);\r\n  };\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  /*const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };*/\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const deletee = async () => {\r\n    try {\r\n      const res = await AddquestionsApi.deleteQuestions(id);\r\n      dispatch(fetchQuestions(currentClass._id));\r\n      socket.emit(\"send_question\", \"message\");\r\n\r\n      history.push(\"/FAQ\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const deleteeAsnwer = async (idA) => {\r\n    try {\r\n      const res = await AddAnswersApi.deleteAnswers(idA);\r\n      dispatch(fetchAnswers(id));\r\n\r\n      socket.emit(\"send_answer\", \"message\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n  const [loadmore, setloadmore] = useState(5);\r\n  const [enableLoadMore, setenableLoadMore] = useState(true);\r\n  const morQuestion = () => {\r\n    setloadmore(loadmore + 5);\r\n    if (questions.length - loadmore <= 0) {\r\n      setenableLoadMore(false);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <AddQuestion />\r\n\r\n      {questions\r\n        .filter((q) => q._id === id)\r\n        .map((question, index) => (\r\n          <Card fluid key={index}>\r\n            <Segment raised color=\"grey\">\r\n              {question.Writerq._id === documentData._id && (\r\n                <Dropdown floated icon=\"ellipsis vertical\">\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <EditQuestions qes={question} />\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={deletee}>Delete</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              )}\r\n              <Feed>\r\n                <Feed.Event>\r\n                  <Feed.Label image={question.Writerq.picture} />\r\n                  <Feed.Content>\r\n                    <Feed.Date>{question.Date}</Feed.Date>\r\n                    <Feed.Summary>\r\n                      <a>{question.Writerq.name}</a>\r\n                    </Feed.Summary>\r\n                  </Feed.Content>\r\n                </Feed.Event>\r\n              </Feed>\r\n              <Message>\r\n                <Message.Header>{question.Title}</Message.Header>\r\n                <p>{question.Body}</p>\r\n              </Message>{\" \"}\r\n              <Feed.Extra images>\r\n                <List horizontal>\r\n                  {question.Filee.map((file, index) => (\r\n                    <List.Item key={index}>\r\n                      {(() => {\r\n                        switch (file.split(\".\").pop()) {\r\n                          case \"pdf\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                {\" \"}\r\n                                <Icon name=\"file pdf\" color=\"red\" size=\"huge\" />\r\n                              </a>\r\n                            );\r\n                          case \"docx\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <Icon\r\n                                  name=\"file word\"\r\n                                  color=\"blue\"\r\n                                  size=\"huge\"\r\n                                />\r\n                              </a>\r\n                            );\r\n                          case \"pptx\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <Icon\r\n                                  name=\"file powerpoint\"\r\n                                  color=\"red\"\r\n                                  size=\"huge\"\r\n                                />\r\n                              </a>\r\n                            );\r\n                          case \"xlsx\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <Icon\r\n                                  name=\"file excel outline\"\r\n                                  color=\"green\"\r\n                                  size=\"huge\"\r\n                                />\r\n                              </a>\r\n                            );\r\n                          case \"zip\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <Icon name=\"zip\" size=\"huge\" />\r\n                              </a>\r\n                            );\r\n                          case \"js\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <Icon name=\"js\" color=\"yellow\" size=\"huge\" />\r\n                              </a>\r\n                            );\r\n                          case \"php\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <Icon name=\"zip\" color=\"blue\" size=\"huge\" />\r\n                              </a>\r\n                            );\r\n                          case \"txt\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <Icon\r\n                                  name=\"file text\"\r\n                                  size=\"huge\"\r\n                                  color=\"blue\"\r\n                                />\r\n                              </a>\r\n                            );\r\n\r\n                          case \"jpg\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <img\r\n                                  style={{\r\n                                    minWidth: \"50px\",\r\n                                    width: \"50px\",\r\n                                    height: \"50px\",\r\n                                  }}\r\n                                  src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                  alt={`scan`}\r\n                                />\r\n                              </a>\r\n                            );\r\n                          case \"jpeg\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <img\r\n                                  style={{\r\n                                    minWidth: \"50px\",\r\n                                    width: \"50px\",\r\n                                    height: \"50px\",\r\n                                  }}\r\n                                  src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                  alt={`scan`}\r\n                                />\r\n                              </a>\r\n                            );\r\n                          case \"png\":\r\n                            return (\r\n                              <a\r\n                                href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              >\r\n                                <img\r\n                                  style={{\r\n                                    minWidth: \"50px\",\r\n                                    width: \"50px\",\r\n                                    height: \"50px\",\r\n                                  }}\r\n                                  src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                  alt={`scan`}\r\n                                />\r\n                              </a>\r\n                            );\r\n\r\n                          default:\r\n                            return (\r\n                              <Icon name=\"File\" color=\"Black\" size=\"huge\" />\r\n                            );\r\n                        }\r\n                      })()}\r\n\r\n                      <p>{file.split(\"_\").pop()}</p>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n              </Feed.Extra>\r\n              <div style={{ marginTop: \"3%\", marginBottom: \"3%\" }}>\r\n                {question.Hashtags.map((hashtag, index) => (\r\n                  <Label color=\"grey\" as=\"a\" tag key={index}>\r\n                    #{hashtag}\r\n                  </Label>\r\n                ))}\r\n              </div>\r\n              <InputEmoji\r\n                onChange={setText}\r\n                cleanOnEnter\r\n                onEnter={handleOnEnter}\r\n                value={text}\r\n                placeholder=\"Type a message\"\r\n              />\r\n              <Form onSubmit={formik.handleSubmit}>\r\n                <div style={{ float: \"right\", marginRight: \"5%\" }}>\r\n                  <Button\r\n                    style={{ maxHeight: \"40px\" }}\r\n                    type=\"submit\"\r\n                    content=\"Reply\"\r\n                    icon=\"edit\"\r\n                  />\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <div style={{ marginLeft: \"5%\" }}>\r\n                    <FileUpload\r\n                      refreshFunction={updateImages}\r\n                      listfile={null}\r\n                      Enbale={enableUpload}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n              <Header dividing as=\"h3\" style={{ marginLeft: \"2%\" }}>\r\n                Comments ({questionAndanswer.length})\r\n              </Header>\r\n              {questionAndanswer.slice(0, loadmore).map((answer, index) => (\r\n                <Comment.Group style={{ marginLeft: \"5%\" }} key={index}>\r\n                  <Comment>\r\n                    <Comment.Avatar as=\"a\" src={answer.Writer.picture} />\r\n                    <Comment.Content>\r\n                      <Comment.Author>{answer.Writer.name}</Comment.Author>\r\n                      <Comment.Metadata>\r\n                        <div>\r\n                          <Icon name=\"calendar\" />\r\n                        </div>\r\n                        <div>{answer.Date}</div>\r\n                      </Comment.Metadata>\r\n                      <Comment.Text as=\"p\">{answer.Body}</Comment.Text>\r\n\r\n                      <Feed.Extra images style={{ display: \"flex\" }}>\r\n                        <List horizontal>\r\n                          {answer.Filee.map((file, index) => (\r\n                            <List.Item key={index}>\r\n                              {(() => {\r\n                                switch (file.split(\".\").pop()) {\r\n                                  case \"pdf\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        {\" \"}\r\n                                        <Icon\r\n                                          name=\"file pdf\"\r\n                                          color=\"red\"\r\n                                          size=\"huge\"\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n                                  case \"docx\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <Icon\r\n                                          name=\"file word\"\r\n                                          color=\"blue\"\r\n                                          size=\"huge\"\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n                                  case \"pptx\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <Icon\r\n                                          name=\"file powerpoint\"\r\n                                          color=\"red\"\r\n                                          size=\"huge\"\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n                                  case \"xlsx\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <Icon\r\n                                          name=\"file excel outline\"\r\n                                          color=\"green\"\r\n                                          size=\"huge\"\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n                                  case \"zip\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <Icon name=\"zip\" size=\"huge\" />\r\n                                      </a>\r\n                                    );\r\n                                  case \"js\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <Icon\r\n                                          name=\"js\"\r\n                                          color=\"yellow\"\r\n                                          size=\"huge\"\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n                                  case \"php\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <Icon\r\n                                          name=\"zip\"\r\n                                          color=\"blue\"\r\n                                          size=\"huge\"\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n                                  case \"txt\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <Icon\r\n                                          name=\"file text\"\r\n                                          size=\"huge\"\r\n                                          color=\"blue\"\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n\r\n                                  case \"jpg\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <img\r\n                                          style={{\r\n                                            minWidth: \"50px\",\r\n                                            width: \"50px\",\r\n                                            height: \"50px\",\r\n                                          }}\r\n                                          src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                          alt={`scan`}\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n                                  case \"jpeg\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <img\r\n                                          style={{\r\n                                            minWidth: \"50px\",\r\n                                            width: \"50px\",\r\n                                            height: \"50px\",\r\n                                          }}\r\n                                          src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                          alt={`scan`}\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n                                  case \"png\":\r\n                                    return (\r\n                                      <a\r\n                                        href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                      >\r\n                                        <img\r\n                                          style={{\r\n                                            minWidth: \"50px\",\r\n                                            width: \"50px\",\r\n                                            height: \"50px\",\r\n                                          }}\r\n                                          src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                                          alt={`scan`}\r\n                                        />\r\n                                      </a>\r\n                                    );\r\n\r\n                                  default:\r\n                                    return (\r\n                                      <Icon\r\n                                        name=\"File\"\r\n                                        color=\"Black\"\r\n                                        size=\"huge\"\r\n                                      />\r\n                                    );\r\n                                }\r\n                              })()}\r\n\r\n                              <p>{file.split(\"_\").pop()}</p>\r\n                            </List.Item>\r\n                          ))}\r\n                        </List>\r\n                      </Feed.Extra>\r\n                      {answer.Writer._id === documentData._id && (\r\n                        <Comment.Actions>\r\n                          <EditAnswer answerSelected={answer} />\r\n                          <Icon\r\n                            name=\"delete\"\r\n                            onClick={() => deleteeAsnwer(answer._id)}\r\n                            color=\"red\"\r\n                          />\r\n                        </Comment.Actions>\r\n                      )}\r\n                    </Comment.Content>\r\n                  </Comment>\r\n                </Comment.Group>\r\n              ))}\r\n              {enableLoadMore && (\r\n                <Segment\r\n                  raised\r\n                  color=\"grey\"\r\n                  textAlign=\"center\"\r\n                  onClick={() => morQuestion(5)}\r\n                >\r\n                  Load more.\r\n                </Segment>\r\n              )}\r\n            </Segment>\r\n          </Card>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\nexport default DetailsQuestion;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\AddPost.js",["646","647","648","649"],"import React from \"react\";\r\nimport { Button, Form, Input, TextArea, Segment } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addQuestion } from \"../../redux/slices/questionslice\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\nfunction AddPost() {\r\n  const history = useHistory();\r\n\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error] = useState({ visible: false, message: \"\" });\r\n  const dispatch = useDispatch();\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n\r\n    setImages(newImages);\r\n    \r\n   \r\n  };\r\n  //inpput tags\r\n  const [tags, setTags] = useState([]);\r\n  const handleChange = (tag) => {\r\n    setTags(tag);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Title: \"\",\r\n      Body: \"\",\r\n      Writerq: { _id: \"\" },\r\n      Filee: [],\r\n      Hashtags: [],\r\n      Class: { _id: \"\" },\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        \r\n       // alert(\"images\"+Images)\r\n      \r\n        values.Filee = Images;\r\n        values.Writerq._id = documentData._id;\r\n        values.Hashtags = tags;\r\n        values.Class = currentClass._id;\r\n        setEnableUpload(true);\r\n        const res = await AddquestionsApi.postQuestions(values);\r\n        dispatch(addQuestion(res));\r\n        const socket = io(ENDPOINT);\r\n        socket.emit(\"send_question\", \"message\");\r\n        setTags([]);\r\n        values.Title = \"\";\r\n        values.Body = \"\";\r\n        console.log(res)\r\n      history.push(\"/FAQ/\"+res._id);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Segment raised color=\"red\">\r\n      <Form onSubmit={formik.handleSubmit}>\r\n          \r\n          <Form.Field\r\n            control={TextArea}\r\n            placeholder=\"whats your question?\"\r\n            label=\"Content\"\r\n            name=\"Body\"\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.Body}\r\n          />\r\n          <TagsInput value={tags} onChange={handleChange} />\r\n\r\n          <div style={{ float: \"right\", marginRight: \"5%\" }}>\r\n                  <Button\r\n                    style={{ maxHeight: \"40px\" }}\r\n                    type=\"submit\"\r\n                    content=\"Reply\"\r\n                    icon=\"edit\"\r\n                  />\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <div style={{ marginLeft: \"5%\" }}>\r\n                    <FileUpload\r\n                      refreshFunction={updateImages}\r\n                      listfile={null}\r\n                      Enbale={enableUpload}\r\n                    />\r\n                  </div>\r\n                </div>\r\n        </Form>\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\nexport default AddPost;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\QuestionComponent.js",["650","651","652","653","654","655"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n \r\n  Header,\r\n  Icon,\r\n  Segment,\r\n  Feed,\r\n  Container,\r\n  Dropdown,\r\n  Message,\r\n  Label,\r\n  List,\r\n} from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport AddQuestion from \"./AddQuestionComponent\";\r\nimport {\r\n  fetchQuestions,\r\n  selectQuestions,\r\n} from \"../../redux/slices/questionslice\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport EditQuestions from \"./EditQuestionComponent\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport io from \"socket.io-client\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\n\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\n\r\nexport default function QuestionComponent(props) {\r\n  const { idd } = useParams();\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const socket = io(ENDPOINT);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchQuestions(currentClass._id));\r\n    socket.on(\"new-question\", (content) => {\r\n      dispatch(fetchQuestions(currentClass._id));\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n\r\n  }, [dispatch]);\r\n\r\n\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n \r\n\r\n  const [questions, errr] = useSelector(selectQuestions);\r\n\r\n \r\n  const deletee = async (idq) => {\r\n    try {\r\n      const res = await AddquestionsApi.deleteQuestions(idq);\r\n      dispatch(fetchQuestions(currentClass._id));\r\n      socket.emit(\"send_question\", \"message\");\r\n\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const [loadmore, setloadmore] = useState(5)\r\n  const [enableLoadMore, setenableLoadMore] = useState(true)\r\n  const morQuestion =  (nb) => {\r\n        setloadmore(loadmore +5)\r\n        console.log(questions.length)\r\n        if(questions.length-loadmore<=0 )\r\n        {\r\n          setenableLoadMore(false)\r\n        }\r\n    };\r\n  return (\r\n    <Container fluid>\r\n      <AddQuestion floated=\"right\" />\r\n      <Link to=\"/MyPosts\">\r\n        <Label\r\n          as=\"a\"\r\n          color=\"grey\"\r\n          image\r\n          style={{ marginLeft: \"60%\", height: \"34px\" }}\r\n        >\r\n          <img src={isAuth().picture} />\r\n          Your\r\n          <Label.Detail>Posts</Label.Detail>\r\n        </Label>\r\n      </Link>\r\n      {Number(questions.length) === 0 && (\r\n        <Segment raised color=\"black\" size=\"huge\">\r\n          <Header style={{ marginLeft: \"35%\" }} color=\"grey\" size=\"huge\">\r\n            No Question{\" \"}\r\n          </Header>\r\n        </Segment>\r\n      )}\r\n\r\n      {questions.slice(0,loadmore).map((question, index) => (\r\n        <Segment key={index} raised color=\"grey\">\r\n          {question.Writerq._id === documentData._id && (\r\n            <Dropdown floated=\"right\" icon=\"ellipsis vertical\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item>\r\n                  <EditQuestions qes={question} />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => deletee(question._id)}>\r\n                  Delete\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          )}\r\n          <Feed>\r\n            <Feed.Event>\r\n              <Feed.Label image={question.Writerq.picture} />\r\n              <Feed.Content>\r\n                <Feed.Date>{question.Date}</Feed.Date>\r\n                <Feed.Summary>\r\n                  <p>{question.Writerq.name} </p>\r\n                </Feed.Summary>\r\n              </Feed.Content>\r\n            </Feed.Event>\r\n          </Feed>\r\n          <Message>\r\n            <Message.Header>{question.Title}</Message.Header>\r\n            <p>{question.Body}</p>\r\n          </Message>{\" \"}\r\n          <Feed.Extra images>\r\n            <List horizontal>\r\n              {question.Filee.map((file, index) => (\r\n                <List.Item key={index}>\r\n                  {(() => {\r\n                    switch (file.split(\".\").pop()) {\r\n                      case \"pdf\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"file pdf\" color=\"red\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"docx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"file word\" color=\"blue\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"pptx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon\r\n                              name=\"file powerpoint\"\r\n                              color=\"red\"\r\n                              size=\"huge\"\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"xlsx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon\r\n                              name=\"file excel outline\"\r\n                              color=\"green\"\r\n                              size=\"huge\"\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"zip\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"zip\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"js\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"js\" color=\"yellow\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"php\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"zip\" color=\"blue\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"txt\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"file text\" size=\"huge\" color=\"blue\" />\r\n                          </a>\r\n                        );\r\n\r\n                      case \"jpg\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"jpeg\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"png\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n\r\n                      default:\r\n                        return <Icon name=\"File\" color=\"Black\" size=\"huge\" />;\r\n                    }\r\n                  })()}\r\n\r\n                  <p>{file.split(\"_\").pop()}</p>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </Feed.Extra>\r\n          <div style={{ marginTop: \"3%\", marginBottom: \"3%\" }}>\r\n            {question.Hashtags.map((hashtag, index) => (\r\n              <Link to={\"/tags/\" + currentClass._id + \"/\" + hashtag} key={index}>\r\n                <Label  color=\"grey\" as=\"a\" tag>\r\n                  #{hashtag}\r\n                </Label>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n          <Header dividing as=\"h3\" style={{ marginLeft: \"2%\" }}></Header>\r\n          <Segment inverted color=\"red\">\r\n            <Link to={\"/FAQ/\" + question._id} style={{ color: \"white\" }}>\r\n              <h6 style={{ textAlign: \"center\" }}>See more</h6>\r\n            </Link>\r\n          </Segment>\r\n   \r\n\r\n        </Segment>\r\n        \r\n      ))}\r\n             {enableLoadMore &&(\r\n          <Segment raised color=\"grey\" textAlign='center' onClick={()=>morQuestion(5)}>Load more.</Segment>\r\n\r\n     )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Quiz\\Quiz.js",["656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Icon,\r\n  Image,\r\n  Button,\r\n  Form,\r\n  Segment,\r\n  Progress,\r\n  Container,\r\n  Header,\r\n  Divider,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth } from \"../../helpers/auth.js\";\r\nimport {\r\n  getListQuestionTasksById,\r\n  assignGradeToStudent,\r\n  getDetailByTaskByStudent,\r\n} from \"../../redux/slices/Grade.js\";\r\nimport { getQuizzes } from \"../../redux/slices/Quiz.js\";\r\nimport EndQuiz from \"./EndQuiz.js\";\r\n\r\nexport default function Quiz(props) {\r\n  const { id } = useParams();\r\n  const quizzes = useSelector((state) => state.grades.listQuestion);\r\n  //const task = useSelector((state) => state.grades.grades)\r\n  const [objgrade, setObjGrade] = useState({\r\n    _id: null,\r\n    grade: 0,\r\n    listReponse: [],\r\n  });\r\n  const [score, setScore] = useState(0);\r\n  const [cuurQuestion, setCurrQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n  const [listReponse] = useState([]);\r\n\r\n  const nextQuestion = () => {\r\n    if (optionChosen === quizzes[cuurQuestion].correct_answer){\r\n    setScore(score + parseInt(quizzes[cuurQuestion].fpoint));\r\n    }\r\n    setCurrQuestion(cuurQuestion + 1);\r\n    listReponse.push(optionChosen);\r\n  \r\n    setOptionChosen(\"\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const handleResult = () => {\r\n    if (optionChosen === quizzes[cuurQuestion].correct_answer) {\r\n      listReponse.push(optionChosen);\r\n\r\n      dispatch(\r\n        assignGradeToStudent({ _id: id, grade: score + parseInt(quizzes[cuurQuestion].fpoint), listReponse: listReponse })).then(()=>{\r\n          dispatch(getDetailByTaskByStudent(id));\r\n        })\r\n    }else{\r\n      listReponse.push(optionChosen);\r\n\r\n      dispatch(\r\n        assignGradeToStudent({ _id: id, grade: score , listReponse: listReponse })).then(()=>{\r\n          dispatch(getDetailByTaskByStudent(id));\r\n        })\r\n    }\r\n    dispatch(getDetailByTaskByStudent(id));\r\n  \r\n    setTimeout(() => {\r\n      setOpen(false);\r\n    }, 1000);\r\n  \r\n  };\r\n  const handleChosen = (option) => {\r\n    setOptionChosen(optionChosen != option ? option : \"\");\r\n  };\r\n  const [open , setOpen] = useState(false)\r\n  const handleOpen = () => {\r\n   setOpen(true)\r\n  };\r\n  useEffect(() => {\r\n    // dispatch(getQuizzes());\r\n    dispatch(getDetailByTaskByStudent(id));\r\n    dispatch(getListQuestionTasksById(id));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"Quiz\">\r\n      <Divider hidden />\r\n      <Segment raised>\r\n        <Progress\r\n          active\r\n          color=\"red\"\r\n          percent={((1 + cuurQuestion) * 100) / quizzes.length}\r\n          attached=\"top\"\r\n        />\r\n\r\n        {quizzes.length > 0 ? (\r\n          <div>\r\n            <h1> {quizzes[cuurQuestion].fquestion + \"?\"} </h1>\r\n            <p>\r\n              Question {cuurQuestion + 1} of {quizzes.length}\r\n            </p>\r\n            <Divider section />\r\n\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionA}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionA)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionA}\r\n            </Button>\r\n            <Divider hidden />\r\n            <br />\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionB}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionB)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionB}\r\n            </Button>\r\n\r\n            <br />\r\n            <Divider hidden />\r\n\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionC}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionC)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionC}\r\n            </Button>\r\n            <Divider hidden />\r\n            <br />\r\n            <Button\r\n              size=\"big\"\r\n              fluid\r\n              basic={optionChosen != quizzes[cuurQuestion].foptionD}\r\n              color=\"grey\"\r\n              onClick={() => handleChosen(quizzes[cuurQuestion].foptionD)}\r\n            >\r\n              {quizzes[cuurQuestion].foptionD}\r\n            </Button>\r\n\r\n            <Divider section />\r\n            {cuurQuestion == quizzes.length - 1 ? (\r\n              <Modal\r\n              open={open}\r\n              trigger={\r\n                <Button  onClick={()=>handleOpen()} content=\"save\" />\r\n              }\r\n              dimmer=\"inverted\"\r\n              size=\"tiny\"\r\n              closeIcon=\"close\"\r\n            >\r\n              <Modal.Header>Quiz Submission Confirmation !</Modal.Header>\r\n              <Modal.Content>\r\n              <p> You about to submit you Quiz ...</p>\r\n              <p>Once you press the Submit Button you cannot return to your Quiz .</p>\r\n                  \r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Link to={\"/Result/\"+id}>\r\n              <Button color=\"red\" onClick={()=>handleResult()}>\r\n                Submit Quiz\r\n              </Button>\r\n              </Link>\r\n              <Button color=\"black\" onClick={()=>setOpen(false)}>\r\n                Cancel\r\n              </Button>\r\n            \r\n                 <br></br>\r\n            \r\n            </Modal.Actions>\r\n            </Modal>\r\n            ) : (\r\n              <>\r\n                <Button.Group>\r\n                  <Button\r\n                    onClick={() => nextQuestion()}\r\n                    disabled={!optionChosen}\r\n                    content=\"Continue\"\r\n                  />\r\n                </Button.Group>\r\n              </>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Segment loading>\r\n            <h1>No Qts</h1>{\" \"}\r\n          </Segment>\r\n        )}\r\n\r\n        <Progress\r\n          active\r\n          color=\"red\"\r\n          percent={((1 + cuurQuestion) * 100) / quizzes.length}\r\n          attached=\"bottom\"\r\n        />\r\n      </Segment>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\QuestionByTags.js",["673","674","675","676","677"],"import React, { useState,useEffect } from \"react\";\r\nimport {\r\n\r\n  Header,\r\n  Icon,\r\n  Segment,\r\n  Feed,\r\n  Container,\r\n  Dropdown,\r\n  Message,\r\n  Label,\r\n  List,\r\n} from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport {  AddquestionsApi } from \"../../api/api\";\r\nimport AddQuestion from \"./AddQuestionComponent\";\r\nimport {\r\n\r\n    fetchQuestionsByTags, selectQuestions,\r\n\r\n} from \"../../redux/slices/questionslice\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport EditQuestions from \"./EditQuestionComponent\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\n\r\nexport default function QuestionByTags(props) {\r\n  const socket = io(ENDPOINT);\r\n  const { tag } = useParams();\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchQuestionsByTags(currentClass._id,tag));\r\n  }, [dispatch]);\r\n\r\n \r\n \r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n \r\n  const [questions, errr] = useSelector(selectQuestions);\r\n  \r\n  const deletee = async (idq) => {\r\n    try {\r\n      const res = await AddquestionsApi.deleteQuestions(idq);\r\n      dispatch(fetchQuestionsByTags(currentClass._id,tag));\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const [loadmore, setloadmore] = useState(5)\r\n  const [enableLoadMore, setenableLoadMore] = useState(true)\r\n  const morQuestion =  (nb) => {\r\n        setloadmore(loadmore +5)\r\n        console.log(questions.length)\r\n        if(questions.length-loadmore<=0 )\r\n        {\r\n          setenableLoadMore(false)\r\n        }\r\n    };\r\n  return (\r\n    <Container fluid>\r\n      <AddQuestion floated=\"right\" />\r\n      <Link to=\"/MyPosts\">\r\n        <Label\r\n          as=\"a\"\r\n          color=\"grey\"\r\n          image\r\n          style={{ marginLeft: \"60%\", height: \"34px\" }}\r\n        >\r\n          <img src={isAuth().picture} />\r\n          Your\r\n          <Label.Detail>Posts</Label.Detail>\r\n        </Label>\r\n      </Link>\r\n      {Number(questions.length) === 0 && (\r\n        <Segment raised color=\"black\" size=\"huge\">\r\n          <Header style={{ marginLeft: \"35%\" }} color=\"grey\" size=\"huge\">\r\n            No Question{\" \"}\r\n          </Header>\r\n        </Segment>\r\n      )}\r\n\r\n      {questions.slice(0,loadmore).map((question, index) => (\r\n        <Segment key={index} raised color=\"grey\">\r\n          {question.Writerq._id === documentData._id && (\r\n            <Dropdown floated=\"right\" icon=\"ellipsis vertical\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item>\r\n                  <EditQuestions qes={question} />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => deletee(question._id)}>\r\n                  Delete\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          )}\r\n          <Feed>\r\n            <Feed.Event>\r\n              <Feed.Label image={question.Writerq.picture} />\r\n              <Feed.Content>\r\n                <Feed.Date>{question.Date}</Feed.Date>\r\n                <Feed.Summary>\r\n                  <p>{question.Writerq.name} </p>\r\n                </Feed.Summary>\r\n              </Feed.Content>\r\n            </Feed.Event>\r\n          </Feed>\r\n          <Message>\r\n            <Message.Header>{question.Title}</Message.Header>\r\n            <p>{question.Body}</p>\r\n          </Message>{\" \"}\r\n          <Feed.Extra images>\r\n            <List horizontal>\r\n              {question.Filee.map((file, index) => (\r\n                <List.Item key={index}>\r\n                  {(() => {\r\n                    switch (file.split(\".\").pop()) {\r\n                      case \"pdf\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"file pdf\" color=\"red\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"docx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"file word\" color=\"blue\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"pptx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon\r\n                              name=\"file powerpoint\"\r\n                              color=\"red\"\r\n                              size=\"huge\"\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"xlsx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon\r\n                              name=\"file excel outline\"\r\n                              color=\"green\"\r\n                              size=\"huge\"\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"zip\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"zip\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"js\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"js\" color=\"yellow\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"php\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"zip\" color=\"blue\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"txt\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"file text\" size=\"huge\" color=\"blue\" />\r\n                          </a>\r\n                        );\r\n\r\n                      case \"jpg\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"jpeg\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"png\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n\r\n                      default:\r\n                        return <Icon name=\"File\" color=\"Black\" size=\"huge\" />;\r\n                    }\r\n                  })()}\r\n\r\n                  <p>{file.split(\"_\").pop()}</p>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </Feed.Extra>\r\n          <div style={{ marginTop: \"3%\", marginBottom: \"3%\" }}>\r\n            {question.Hashtags.map((hashtag, index) => (\r\n              <Link to={\"/tags/\" + currentClass._id + \"/\" + hashtag} key={index}>\r\n                <Label  color=\"grey\" as=\"a\" tag>\r\n                  #{hashtag}\r\n                </Label>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n          <Header dividing as=\"h3\" style={{ marginLeft: \"2%\" }}></Header>\r\n          <Segment inverted color=\"red\">\r\n            <Link to={\"/FAQ/\" + question._id} style={{ color: \"white\" }}>\r\n              <h6 style={{ textAlign: \"center\" }}>See more</h6>\r\n            </Link>\r\n          </Segment>\r\n   \r\n\r\n        </Segment>\r\n        \r\n      ))}\r\n             {enableLoadMore &&(\r\n          <Segment raised color=\"grey\" textAlign='center' onClick={()=>morQuestion(5)}>Load more.</Segment>\r\n\r\n     )}\r\n    </Container>\r\n  );\r\n}","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Quiz\\EndQuiz.js",["678","679"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Divider, Grid, Header, Icon, Image, Message, Segment, Table } from 'semantic-ui-react';\r\nimport { getDetailByTaskByStudent } from '../../redux/slices/Grade';\r\n\r\nexport default function EndQuiz() {\r\nlet pts = 0;\r\nconst task = useSelector((state) => state.grades.grades);\r\nconst [finalTask , setFinalTask] = useState(task);\r\nconst { id } = useParams();\r\n    const  dispatch = useDispatch();\r\n    console.log();\r\n    finalTask[0].task.listQuestion.forEach((element) => {\r\n       pts+=  parseInt(element.fpoint);\r\n    });\r\n   \r\n  useEffect(() => {\r\n      console.log(finalTask[0]);\r\n    dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n      console.log(response);\r\n      setFinalTask(response.payload);\r\n          });\r\n    \r\n    },[] );\r\n \r\n    return (\r\n        <>\r\n         \r\n             \r\n            <Segment basic textAlign='center'>\r\n        \r\n       \r\n        \r\n        \r\n    \r\n    { (finalTask[0].grade * 100 / pts) > 70 ? (<>\r\n  <Image centered src={process.env.PUBLIC_URL + \"/Certification.png\"} />\r\n<p>\r\nCongrats {finalTask[0].student.name} you have ben passed the Quiz  {finalTask[0].grade} / {pts} points.\r\n</p>\r\n</>\r\n    ) : (\r\n      <>\r\n      <Image centered src={process.env.PUBLIC_URL + \"/failedQuiz.jpg\"} />\r\n      <p>\r\n      Sorry {finalTask[0].student.name} next Time .  {finalTask[0].grade} / {pts} points.\r\n    </p>\r\n    </>\r\n\r\n    ) }\r\n   \r\n    \r\n    <Divider horizontal>\r\n      <Header as='h4'>\r\n        <Icon name='bar chart' />\r\n        Answers\r\n      </Header>\r\n    </Divider>\r\n    <Grid columns=\"three\">\r\n        <Grid.Row>\r\n          \r\n            {finalTask[0].task.listQuestion.map((quiz, index) => (\r\n    <Grid.Column>\r\n                <Table key={index} color=\"red\" textAlign=\"center\">\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>\r\n                        {quiz.fquestion + \"?\"}{\" \"}\r\n                      </Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n\r\n                  <Table.Body>\r\n                    <Table.Row\r\n                      positive={quiz.foptionA === quiz.correct_answer  }\r\n                      negative={ quiz.foptionA !==  quiz.correct_answer &&  quiz.foptionA === finalTask[0].listReponse[index]}\r\n                    >\r\n                      <Table.Cell>\r\n                        {(     quiz.foptionA === finalTask[0].listReponse[index] && quiz.foptionA === quiz.correct_answer  ) ?\r\n                          (<Icon name=\"check circle\" color=\"green\" />): <></>\r\n                      }\r\n\r\n                {(     quiz.foptionA === finalTask[0].listReponse[index] && quiz.foptionA !== quiz.correct_answer  ) ?\r\n                          (<Icon name=\"close\" color=\"red\" />): <></>\r\n                      }\r\n                      \r\n                      \r\n                        {quiz.foptionA}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row\r\n                                   positive={quiz.foptionB === quiz.correct_answer  }\r\n                                   negative={quiz.foptionB !==  quiz.correct_answer &&  quiz.foptionB === finalTask[0].listReponse[index]}\r\n                                  \r\n                    >\r\n                      <Table.Cell> \r\n                      {(   quiz.foptionB === finalTask[0].listReponse[index] && quiz.foptionB === quiz.correct_answer ) ?\r\n                          (<Icon name=\"check circle\" color=\"green\" />): <></>\r\n                      }\r\n\r\n{(     quiz.foptionB === finalTask[0].listReponse[index] && quiz.foptionB !== quiz.correct_answer  ) ?\r\n                          (<Icon name=\"close\" color=\"red\" />): <></>\r\n                      }\r\n                      \r\n                        {quiz.foptionB}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row\r\n                                  positive={quiz.foptionC === quiz.correct_answer  }\r\n                                  negative={quiz.foptionC !==  quiz.correct_answer &&  quiz.foptionC === finalTask[0].listReponse[index]}\r\n                    >\r\n                      <Table.Cell> \r\n                      {(  quiz.foptionC === finalTask[0].listReponse[index] &&  quiz.foptionC === quiz.correct_answer ) ?\r\n                          (<Icon name=\"check circle\" color=\"green\" />): <></>\r\n                      }\r\n                        {(     quiz.foptionC === finalTask[0].listReponse[index] && quiz.foptionC !== quiz.correct_answer  ) ?\r\n                          (<Icon name=\"close\" color=\"red\" />): <></>\r\n                      }\r\n                      \r\n                        {quiz.foptionC}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row\r\n                                positive={quiz.foptionD === quiz.correct_answer  }\r\n                                negative={quiz.foptionD !==  quiz.correct_answer &&  quiz.foptionD === finalTask[0].listReponse[index]}\r\n                    >\r\n                      <Table.Cell> \r\n                      {(    quiz.foptionD === finalTask[0].listReponse[index] && quiz.foptionD === quiz.correct_answer ) ?\r\n                          (<Icon name=\"check circle\" color=\"green\" />): <></>\r\n                      }\r\n                        {(     quiz.foptionD === finalTask[0].listReponse[index] && quiz.foptionD !== quiz.correct_answer  ) ?\r\n                          (<Icon name=\"close\" color=\"red\" />): <></>\r\n                      }\r\n                      \r\n                        {quiz.foptionD}</Table.Cell>\r\n                    </Table.Row>\r\n                  </Table.Body>\r\n                </Table>\r\n                <Divider hidden />\r\n              </Grid.Column>\r\n             ) )}\r\n\r\n             </Grid.Row>\r\n             </Grid>\r\n              </Segment>\r\n\r\n         \r\n\r\n\r\n  \r\n    \r\n    </>\r\n  );\r\n\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\DetailTask.js",["680","681","682","683","684","685","686","687","688","689","690"],"\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Card, Divider, Grid, Header, Icon, Image, Input, Menu } from 'semantic-ui-react'\nimport { assignGradeToStudent } from '../../redux/slices/Grade';\nimport {  getDetailTask, getNbrTasksMissing, getNbrTasksRemis } from '../../redux/slices/Task';\nimport CorrectedTask from './CorrectedTask';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams,\n \n} from \"react-router-dom\";\nimport UncorrectedTask from './UncorrectedTask';\nimport StateTask from './StateTask';\n\nexport default function DetailTask() {\n  const {id} = useParams();\n\n  const [activeItem, setActiveItem] = useState(\"Uncorrected\");\n  \n  const remis = useSelector((state) => state.tasks.nbrRemis);\n \n  const missing = useSelector((state) => state.tasks.nbrMissing);\n    const tasks = useSelector( state => state.tasks.tasks)\n   \n  \n    const submitGrade = (e) =>{\n \n    }\n    console.log(tasks);\n    const  dispatch = useDispatch();\n   \n    useEffect(() => {\n     \n      dispatch(getNbrTasksMissing(id));\n      dispatch(getNbrTasksRemis(id))\n      dispatch(getDetailTask(id));\n    }, [id])\n\n    const handleItemClick = (e, { name }) => setActiveItem(name);\n    return (\n        <div>\n    \n        <Grid >\n    <Grid.Row>\n    <Grid.Column width={6}></Grid.Column>\n      <Grid.Column width={6}>\n      \n            <StateTask  missing={missing} remis={remis} student={tasks.length} />\n        \n      </Grid.Column>\n     \n    </Grid.Row>\n  </Grid>\n        <Divider  hidden/>\n<Header  as='h2' content='Task Info' />\n\n            <Grid >\n    <Grid.Row>\n      <Grid.Column width={3}>\n      <Menu pointing secondary vertical>\n      \n      <Menu.Item\n                  name=\"Corrected\"\n                  \n                  active={activeItem === \"Corrected\"}\n                  onClick={handleItemClick}\n                />\n                <Menu.Item\n                  name=\"Uncorrected\"\n             \n                  active={activeItem === \"Uncorrected\"}\n                  onClick={handleItemClick}\n                />\n      </Menu> \n     \n      </Grid.Column>\n      <Grid.Column width={13}>\n\n     \n     { activeItem ===\"Uncorrected\" ? (  <UncorrectedTask uncorrectTasks={tasks}/> )  : (<CorrectedTask correctTasks={tasks}/>) }\n                \n              \n\n            \n        \n      </Grid.Column>\n     \n    </Grid.Row>\n  </Grid>\n\n\n        </div>\n    )\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\StepsBar.js",["691","692","693"],"import React, {  useState } from 'react'\n\nimport {Step,Icon,Button ,Divider,Header, Message} from 'semantic-ui-react';\nimport AddTask from './AddTask';\nimport SendTask from './SendTask';\nimport AddQuiz from '../Quiz/AddQuiz';\nimport TaskFile from './TaskFile';\nimport { isAuth } from '../../helpers/auth';\nimport { Link } from 'react-router-dom';\n\n\nexport default function StepsBar() {\n\n \n\n  const classs = JSON.parse(localStorage.getItem(\"idClass\"));\n  /* save data quiz */\n  const [quiz , setQuiz] = useState({\n    id : \"\",\n    fquestion : \"\",\n    foptionA : \"\",\n    foptionB : \"\",\n    foptionC : \"\",\n    foptionD : \"\",\n    fpoint : \"\",\n\n\n})\n\n\n\n  /* save task data to upload late or update  */\n  const [task , setTask] = useState({\n   \n    title : \"\",\n    description : \"\",\n    theme : \"\",\n    cour : classs._id,\n    typeTask : \"Quiz\",\n    listQuestion : [],\n    listStudents : [],\n    endDate : null,\n    creator : isAuth()._id\n \n});\nconsole.log(\"step : \")\nconsole.log(task);\n \n  const [step, setStep] = useState(1);\nconsole.log(step)\n  const handleNextStep = ()=>{\n \n    setStep(step+1)\n   \n   \n  }\n  \n  const handleBackStep = ()=>{\n    \n    setStep(step-1)\n\n  }\n   \n    return (\n        <div>\n              <Divider hidden/>\n    <Header  as='h2' content='Add Quiz' />\n    \n    <Divider />\n    <Step.Group widths={3}>\n    <Step completed={step===2 || step===3 || step===4} active={step===1}>\n      <Icon name='newspaper' />\n      <Step.Content>\n        <Step.Title>Info Quiz</Step.Title>\n        <Step.Description>Add Quiz Details ..</Step.Description>\n      </Step.Content>\n    </Step>\n    <Step completed={step=== 3 || step ===4} active={step===2}>\n      <Icon name='tasks' />\n      <Step.Content>\n        <Step.Title>Quiz</Step.Title>\n        <Step.Description>Add Quiz Content ..</Step.Description>\n      </Step.Content>\n    </Step>\n    <Step  active={step===3}completed={step=== 4}>\n      <Icon name='info' />\n      <Step.Content>\n        <Step.Title>Send</Step.Title>\n        <Step.Description>Confirm Your Add ..</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n \n \n  {step === 1  ?  ( <AddTask data={task} addTask={task => setTask(task)} nextStep={step => setStep(step)} />) :  step === 2 ?\n  \n\n  task.typeTask===\"File\" ?  ( \n  \n    <TaskFile  data={task} addTask={task => setTask(task)}   nextStep={step => setStep(step)} />\n    \n    )  :\n  \n  ( \n  \n  <AddQuiz  data={task} addTask={task => setTask(task)}   nextStep={step => setStep(step)} />\n  \n  )  \n  \n  \n  \n  : step===3 ?  ( <SendTask data={task} nextStep={step => setStep(step)} /> ) : ( <>   \n  <Message\n    success\n    header='Your Task  was successful Added'\n    content='You may now log-in with the username you have chosen'\n  ></Message>\n  <Link to=\"/TaskList\">\n  <Button fluid color=\"red\">View All Tasks</Button>\n  </Link>\n  \n  </>\n  ) }\n\n  \n \n \n \n  \n<div hidden={step<2 || step>3}>\n  <Button \n  disabled={step<2}\n  floated='left'\n  onClick={handleBackStep}\n  >Back</Button>\n\n  </div>\n \n        </div>\n    )\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\DisplayTaskTeacher.js",["694","695","696","697","698","699","700","701"],"import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Statistic,\n  Icon,\n  Divider,\n  Item,\n\n  Header,\n  Segment,\n  Grid,\n  Dropdown,\n  Confirm,\n\n} from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth\";\n\nimport {\n  getNbrTasksMissing,\n  getNbrTasksRemis,\n  getTaskByTeacher,\n  updateTaskStatus,\n\n  assignAfterSave,\n} from \"../../redux/slices/Task\";\nimport ModalAssignTask from \"./ModalAssignTask\";\n\nimport ModalConfirmDeleteTask from \"./ModalConfirmDeleteTask\";\nimport ModalUpdateTask from \"./ModalUpdateTask\";\n\nexport default function DisplayTaskTeacher() {\n\n  const tasks = useSelector((state) => state.tasks.tasks);\n\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const dispatch = useDispatch();\n  const taskDetail={\n    \"idUser\":isAuth()._id,\n    \"idClass\" : currentClass._id,\n    \n  }\n\n\n \n  useEffect(() => {\n    dispatch(getTaskByTeacher(taskDetail));\n  }, []);\n  return (\n    <>\n      <Divider hidden />\n\n      <Header as=\"h2\" content=\"List Task\" />\n\n      <Divider />\n\n      {tasks.length <=0  ? (\n        <Segment placeholder>\n          <Header icon>\n            <Icon name=\"tasks\" />\n            No Tasks Added.\n            <Link to=\"/AddTask\">\n              <Button color='google plus' >\n           Add Task\n              </Button>\n              \n            </Link>\n          </Header>\n        </Segment>\n      ) : (\n        tasks.map((task, index) => (\n         <>\n            <Segment color=\"grey\" raised>\n              <Item.Group divided key={index}>\n             \n                <Item>\n              \n                  <Item.Image\n                    size=\"tiny\"\n                    \n                    avatar src={process.env.PUBLIC_URL +  task.typeTask === \"Quiz\" ? \"/quiz.jpg\" : \"file.jpg\"} \n                    /> \n              \n  \n                  <Item.Content>\n                  <Link to={\"/DetailTask/\" + task._id}>\n                    <Item.Header as=\"a\">{task.title}</Item.Header>\n                    </Link>\n                    <Item.Meta>\n                      <span className=\"cinema\">\n                        {moment(task.endDate).format(\"MMMM Do yy\")}\n                      </span>\n                    </Item.Meta>\n                    <Item.Description>{task.description}</Item.Description>\n                  </Item.Content>\n                \n                  <Grid columns={6}>\n              \n                    <Grid.Row >\n                   \n                \n                    \n                      <Grid.Column>  \n                       <Dropdown\n                              fluid\n                              pointing\n                              direction=\"left\"\n                              className=\"icon\"\n                              icon=\"ellipsis vertical\"\n                            >\n                              <Dropdown.Menu>\n                                <ModalUpdateTask\n                                  headerTitle=\"Edit Task\"\n                                  buttonTriggerTitle=\"Edit\"\n                                  buttonColor=\"red\"\n                                  icon=\"edit\"\n                                  task={task}\n                                >\n\n\n                                </ModalUpdateTask>\n                              <ModalConfirmDeleteTask\n                                  headerTitle=\"Delete Task\"\n                                  buttonTriggerTitle=\"Delete\"\n                                  buttonColor=\"red\"\n                                  icon=\"trash\"\n                                  task={task}\n                                 \n                                />\n                              </Dropdown.Menu>\n                            </Dropdown></Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                      <Grid.Column width={5}>\n                        {task.status === \"not assign\" ? (\n                          <>\n                       \n    <ModalAssignTask task={task}></ModalAssignTask>\n                          </>\n                        ) : (\n                      <></>\n                        )}\n                      </Grid.Column>\n                    \n                    </Grid.Row>\n                  </Grid>\n                </Item>\n              </Item.Group>\n            </Segment>\n\n            <Divider hidden></Divider>\n          </>\n        ))\n      )}\n    </>\n  );\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\DisplayTaskStudent.js",["702","703","704","705","706","707","708"],"import React ,{useEffect, useState} from 'react';\nimport { useSelector ,useDispatch} from 'react-redux';\n\nimport { Button,Statistic, Icon, Divider, Item, Label,Header, Segment, Menu, Grid } from 'semantic-ui-react';\nimport { isAuth } from '../../helpers/auth';\n\nimport { getTasksById } from '../../redux/slices/Grade';\nimport AllTasksStudent from './AllTasksStudent';\nimport MissingTasks from './MissingTasks';\nimport TasksAssign from './TasksAssign';\nimport TasksRemis from './TasksRemis';\n\n\nexport default function DisplayTaskStudent() {\n \n  const [activeItem, setActiveItem] = useState(\"All\");\n  const grades = useSelector( state => state.grades.grades);\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n  const taskDetail={\n    \"idUser\":isAuth()._id,\n    \"idClass\" : currentClass._id,\n    \n  }\n  console.log(grades)\n    const dispatch = useDispatch();\n  console.log(grades);\n    useEffect(()=>{\n     \n        dispatch(getTasksById(taskDetail));\n       \n       \n       },[])\n\n       const handleItemClick = (e, { name }) => setActiveItem(name);\n  return (\n    <>\n       \n    <Divider  hidden/>\n\n   \n\n         <Header  as='h2' content='List Task' />\n         <Divider />\n         <Grid >\n    <Grid.Row>\n      <Grid.Column width={3}>\n         <Menu pointing secondary vertical>\n         <Menu.Item\n          name='All'\n          active={activeItem === \"All\"}\n          onClick={handleItemClick}\n       \n        />\n        <Menu.Item\n          name='Attribué'\n          active={activeItem === \"Attribué\"}\n          onClick={handleItemClick}\n       \n        />\n         <Menu.Item\n          name='Remis'\n          active={activeItem === \"Remis\"}\n          onClick={handleItemClick}\n       \n        />\n        <Menu.Item\n          name='Manquant'\n          active={activeItem === \"Manquant\"}\n          onClick={handleItemClick}\n        />\n       \n      </Menu>\n      </Grid.Column>\n      <Grid.Column width={13}>\n\n                  \n    \n\n                  {   activeItem ===\"All\" ? (  <AllTasksStudent allGrades={grades} /> ) \n                  : activeItem ===\"Attribué\" ?  (<TasksAssign taskAssign={grades}/>) \n                  : activeItem ===\"Remis\" ?  (<TasksRemis remisGrades={grades}/>)\n                  :   (<MissingTasks taskmissing={grades}/>)\n             \n\n                }\n    \n    \n    </Grid.Column>\n     \n     </Grid.Row>\n   </Grid>\n \n\n\n    \n\n\n </>\n        \n  );\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TaskFileDetail.js",["709","710","711","712","713"],"import React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport { getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\r\nimport CommentComponent from \"../Comment/CommentComponent\";\r\nimport ModalTask from \"./ModalTask\";\r\n\r\nexport default function TaskFileDetail() {\r\n  const { id } = useParams();\r\n  const state = useSelector((state) => state.grades.grades);\r\n  //const files = useSelector((state) => state.tasks.files);\r\n  const [task ,setTask] = useState(state[0]);\r\n\r\n  const grade = {\r\n    id: id,\r\n    taskStatus: \"remis\",\r\n  //  listReponse: files,\r\n  };\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const submitTask = () => {\r\n    console.log(\"grade : \");\r\n    console.log(grade);\r\n  \r\n    dispatch(rendreTask(grade)).then(() => {\r\n      dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n  setTask(response.payload[0]);\r\n      });\r\n    });\r\n  };\r\n // console.log(task);\r\n  useEffect(() => {\r\n    \r\n    dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n      setTask(response.payload[0]);\r\n          });\r\n          console.log(task);\r\n    \r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {!task ? (\r\n        <></>\r\n      ) : (\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={1}></Grid.Column>\r\n            <Grid.Column width={14}>\r\n              <Grid>\r\n                {\" \"}\r\n                <Grid.Row>\r\n                  {\" \"}\r\n                  <Grid.Column width={12}>\r\n                    <Header as=\"h1\" color=\"black\">\r\n                      <Icon circular name=\"file alternate\" />\r\n                      <Header.Content >\r\n                     {task.task.title}\r\n                        \r\n                        <Header.Subheader>\r\n                          <ReactTimeAgo\r\n                            date={task.task.DateAt}\r\n                            locale=\"en-US\"\r\n                          />\r\n                        </Header.Subheader>\r\n                       \r\n                        \r\n                      </Header.Content>\r\n                    </Header>\r\n                    <Divider></Divider>\r\n                    <br />\r\n                    <Container>\r\n                      <h6>{task.task.description}</h6>\r\n                    </Container><br/>\r\n                    <Grid>\r\n                      <Grid.Row>\r\n                      <List horizontal>\r\n                        {!task.task.listQuestion ? (\r\n                          <> <p></p></>\r\n                        ) : (\r\n                          \r\n                          task.task.listQuestion.map((file, index) =>\r\n                         <>\r\n                          <List.Item key={index}>\r\n   \r\n                      {( () => {\r\n                     var f =   file + '';\r\n                       f.split(\".\").pop();\r\n                    switch (file.toString().split(\".\").pop()) {\r\n                      case \"pdf\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"file pdf\" color=\"red\" size=\"massive\" />\r\n                          </a>\r\n                        );\r\n                      case \"docx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"file word\" color=\"blue\" size=\"massive\" />\r\n                          </a>\r\n                        );\r\n                      case \"pptx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon\r\n                              name=\"file powerpoint\"\r\n                              color=\"red\"\r\n                              size=\"massive\"\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"xlsx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon\r\n                              name=\"file excel outline\"\r\n                              color=\"green\"\r\n                              size=\"massive\"\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"zip\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"zip\" size=\"massive\" />\r\n                          </a>\r\n                        );\r\n                      case \"js\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"js\" color=\"yellow\" size=\"massive\" />\r\n                          </a>\r\n                        );\r\n                      case \"php\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"zip\" color=\"blue\" size=\"massive\" />\r\n                          </a>\r\n                        );\r\n                      case \"txt\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"file text\" size=\"massive\" color=\"blue\" />\r\n                          </a>\r\n                        );\r\n\r\n                      case \"jpg\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"250px\",\r\n                                height: \"100px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"jpeg\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"250px\",\r\n                                height: \"100px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"png\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"250px\",\r\n                                height: \"100px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n\r\n                      default:\r\n                        return <Icon name=\"File\" color=\"Black\" size=\"massive\" />;\r\n                    }\r\n                  })()}\r\n\r\n                  <p>{file.toString().split(\"_\").pop()}</p>\r\n                  </List.Item>\r\n                         </>\r\n                          )\r\n                        )}\r\n                        </List>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                    <br />\r\n                  \r\n                    <CommentComponent taskID={id} />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={4}>\r\n                    <Card>\r\n                      <Card.Content>\r\n                      <Card.Header >Your Task -<ReactTimeAgo\r\n                            date={task.task.endDate}\r\n                            locale=\"en-US\"\r\n                          />\r\n                          </Card.Header>\r\n\r\n                        <Card.Description>\r\n                          {task.taskStatus === \"Remis\" ? (\r\n                            <>\r\n                              <Message positive>\r\n                                <Message.Header>\r\n                                  Task Added Succesfully\r\n                                </Message.Header>\r\n                              </Message>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {\" \"}\r\n                              <Message\r\n                                header=\"Upload Your File Here \"\r\n                                content=\"Good Luck For your assignment\"\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Card.Description>\r\n                        <br />\r\n                   \r\n                      </Card.Content>\r\n                      <Card.Content extra>\r\n                      <ModalTask  task={state[0]}/>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={1}></Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\header\\Header.js",["714"],"import { React, useState } from \"react\";\r\nimport { Dropdown, Grid, Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ModalCourses from \"../coursesAndSeances/ModalCourses\";\r\nimport ModalSeance from \"../coursesAndSeances/ModalSeance\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport ModalTaskFile from \"../Task/ModalTaskFile\";\r\n\r\nfunction Header() {\r\n  const [activeItem, setActiveItem] = useState(\"Stream\");\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n  return (\r\n    <>\r\n      <Menu pointing secondary>\r\n        <Link to=\"/stream\">\r\n          <Menu.Item\r\n            name=\"Stream\"\r\n            icon=\"comments\"\r\n            active={activeItem === \"Stream\"}\r\n            onClick={handleItemClick}\r\n          />\r\n        </Link>\r\n        <Link to=\"/FAQ\">\r\n          <Menu.Item\r\n            name=\"FAQ\"\r\n            icon=\"comments\"\r\n            active={activeItem === \"FAQ\"}\r\n            onClick={handleItemClick}\r\n          />\r\n        </Link>\r\n        <Link to=\"/members\">\r\n          <Menu.Item\r\n            name=\"Members\"\r\n            icon=\"users\"\r\n            active={activeItem === \"Members\"}\r\n            onClick={handleItemClick}\r\n          />\r\n        </Link>\r\n        <Link\r\n          to={isAuth().role === \"Student\" ? \"/TaskListStudent\" : \"/TaskList\"}\r\n        >\r\n          <Menu.Item\r\n            name=\"Tasks\"\r\n            icon=\"tasks\"\r\n            active={activeItem === \"Tasks\"}\r\n            onClick={handleItemClick}\r\n          />\r\n        </Link>\r\n      \r\n        {isAuth().role === \"Teacher\" ? (\r\n          <Menu.Item position=\"right\">\r\n            <Dropdown floating className=\"icon\" icon=\"add circle\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Header\r\n                  icon=\"mouse pointer\"\r\n                  content=\"Select something to add\"\r\n                />\r\n                <Dropdown.Divider />\r\n                <ModalSeance\r\n                  headerTitle=\"Add Theme\"\r\n                  buttonTriggerTitle=\"Add Theme\"\r\n                  buttonSubmitTitle=\"Add\"\r\n                  buttonColor=\"black\"\r\n                  icon=\"th\"\r\n                />\r\n                <ModalCourses\r\n                  headerTitle=\"Add Courses\"\r\n                  buttonTriggerTitle=\"Add Courses\"\r\n                  buttonSubmitTitle=\"Add\"\r\n                  buttonColor=\"red\"\r\n                  icon=\"add\"\r\n                />\r\n                  <ModalTaskFile\r\n                  headerTitle=\"Add Task\"\r\n                  buttonTriggerTitle=\"Add Task\"\r\n                  buttonSubmitTitle=\"Add\"\r\n                  buttonColor=\"red\"\r\n                  icon=\"ad\"\r\n                />\r\n                <Link to=\"/AddTask\">\r\n                  <>\r\n                    <Dropdown.Item icon=\"tasks\" text=\"Add Quiz\" />\r\n                  </>\r\n                </Link>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\api\\SeanceApi.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\ModalChangePassword.js",["715","716"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Feed,\r\n  Form,\r\n  Header,\r\n  Icon,\r\n  Message,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport { ChangePassword } from \"../../redux/slices/User\";\r\n\r\nfunction ModalChangePassword(pops) {\r\n  const [currentPass, setCurrentPass] = useState(\"\");\r\n  const [newPass, setnewPass] = useState(\"\");\r\n  const [confirmPass, setConfirmPass] = useState(\"\");\r\n  const [formClassName, SetFormClassName] = useState(\"\");\r\n  const [formSuccessMessage, SetFormSuccessMessage] = useState(\"\");\r\n  const [formErrorMessage, SetFormErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const handleChangeCurrent = (e) => {\r\n    setCurrentPass(e.target.value);\r\n  };\r\n  const handleChangeNew = (e) => {\r\n    setnewPass(e.target.value);\r\n  };\r\n  const handleChangeConfirm = (e) => {\r\n    setConfirmPass(e.target.value);\r\n  };\r\n\r\n  const ResetPassword = () => {\r\n    if (newPass !== confirmPass) {\r\n      SetFormClassName(\"warning\");\r\n      SetFormErrorMessage(\"new password and confirm password didnt Match !\");\r\n    } else {\r\n      const obj = {\r\n        password: currentPass,\r\n        salt: isAuth().salt,\r\n        idUser: isAuth()._id,\r\n        newPassword: newPass,\r\n      };\r\n\r\n      console.log(obj);\r\n      dispatch(ChangePassword(obj))\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (\r\n            response.payload.msg ===\r\n            \"Password Successfully Changed! you can login with your new password\"\r\n          ) {\r\n            SetFormClassName(\"success\");\r\n            SetFormSuccessMessage(response.payload.msg);\r\n          } else {\r\n            SetFormClassName(\"warning\");\r\n            SetFormErrorMessage(response.payload.msg);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) {\r\n            if (err.response.data) {\r\n              SetFormClassName(\"warning\");\r\n              SetFormErrorMessage(err.response.msg);\r\n            }\r\n          } else {\r\n            SetFormClassName(\"warning\");\r\n            SetFormErrorMessage(\"Something wen wrong \" + err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        trigger={\r\n          <Link>\r\n            <Header as=\"h6\" icon=\"lock\" content=\"Change Password\" />\r\n          </Link>\r\n        }\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n      >\r\n        <Modal.Header>Reset your password </Modal.Header>\r\n        <Modal.Content>\r\n          <Form className={formClassName} onSubmit={ResetPassword}>\r\n            <Form.Input\r\n              label=\"CurrentPassword\"\r\n              type=\"password\"\r\n              placeholder={\"Current Password here ...\"}\r\n              name=\"Titre\"\r\n              maxLength=\"40\"\r\n              required\r\n              value={currentPass}\r\n              onChange={handleChangeCurrent}\r\n            />\r\n            <Form.Input\r\n              label=\"NewPassword\"\r\n              type=\"password\"\r\n              placeholder={\" New Password here ...\"}\r\n              name=\"Titre\"\r\n              maxLength=\"40\"\r\n              required\r\n              value={newPass}\r\n              onChange={handleChangeNew}\r\n            />\r\n            <Form.Input\r\n              label=\"ConfirmNewPassword\"\r\n              type=\"password\"\r\n              placeholder={\"Confirm New Password here ...\"}\r\n              name=\"Titre\"\r\n              maxLength=\"40\"\r\n              required\r\n              value={confirmPass}\r\n              onChange={handleChangeConfirm}\r\n            />\r\n            <Message\r\n              success\r\n              color=\"green\"\r\n              header=\"Nice one! 😛 😝\"\r\n              content={formSuccessMessage}\r\n            />\r\n            <Message\r\n              warning\r\n              color=\"yellow\"\r\n              header=\"Woah! 😱 😨\"\r\n              content={formErrorMessage}\r\n            />\r\n            <br />\r\n            <Button color=\"black\" floated=\"right\">\r\n              Update\r\n            </Button>\r\n            <br />\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default ModalChangePassword;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\api\\api.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\EditQuestionComponent.js",["717"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Modal,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {  fetchQuestions } from \"../../redux/slices/questionslice\";\r\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\r\nimport { useHistory } from \"react-router\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\nexport default function EditQuestions({ qes }) {\r\n  const socket = io(ENDPOINT);\r\n  const [open, setOpen] = React.useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n    if (newImages === null) {\r\n      qes.Filee.forEach((element) => {\r\n        setImages(element);\r\n      });\r\n    } else {\r\n      setImages(newImages);\r\n    }\r\n  };\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Title: qes.Title,\r\n      Body: qes.Body,\r\n      Writerq: { _id: \"\" + documentData._id },\r\n      Filee: [],\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        if (Images.length !== 0) {\r\n          values.Filee = Images;\r\n         // alert(\"images : here : \" + values.Filee);\r\n        } else {\r\n          values.Filee = qes.Filee;\r\n        }\r\n        const res = await AddquestionsApi.putQuestions(values, qes._id);\r\n        \r\n        if (Images.length != 0) {\r\n          setEnableUpload(true);\r\n        }\r\n        updateImages([]);\r\n        if (res.ok === 1) {\r\n          setEnableUpload(false);\r\n        }        history.push(\"/FAQ/\"+qes._id);\r\n\r\n          dispatch(fetchQuestions(currentClass._id));\r\n          socket.emit(\"send_question\", \"message\");\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Icon name=\"edit\">Edit</Icon>}\r\n    >\r\n      <Modal.Header>Update your question</Modal.Header>\r\n      <Modal.Content>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Input}\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              name=\"Title\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.Title}\r\n            />\r\n          </Form.Group>\r\n          <Form.Field\r\n            control={TextArea}\r\n            placeholder=\"whats your question?\"\r\n            label=\"Content\"\r\n            name=\"Body\"\r\n            value={formik.values.Body}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.Title}\r\n          />\r\n          <div style={{ float: \"right\", marginRight: \"5%\" }}>\r\n            <Button\r\n              style={{ maxHeight: \"40px\" }}\r\n              type=\"submit\"\r\n              content=\"Edit\"\r\n              icon=\"edit\"\r\n              color=\"red\"\r\n            />\r\n          </div>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ marginLeft: \"5%\" }}>\r\n              <FileUploadEdit\r\n                refreshFunction={updateImages}\r\n                listfile={qes.Filee}\r\n                Enbale={enableUpload}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        \r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\AddQuestionComponent.js",["718","719","720"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Icon,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport { addQuestion } from \"../../redux/slices/questionslice\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport io from \"socket.io-client\";\r\nimport { selectedClasses } from \"../../redux/slices/classsline\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\nfunction AddQuestion() {\r\n  const history = useHistory();\r\n\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error] = useState({ visible: false, message: \"\" });\r\n  const dispatch = useDispatch();\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n\r\n    setImages(newImages);\r\n    \r\n   \r\n  };\r\n  //inpput tags\r\n  const [tags, setTags] = useState([]);\r\n  const handleChange = (tag) => {\r\n    setTags(tag);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Title: \"\",\r\n      Body: \"\",\r\n      Writerq: { _id: \"\" },\r\n      Filee: [],\r\n      Hashtags: [],\r\n      Class: { _id: \"\" },\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        \r\n       // alert(\"images\"+Images)\r\n      \r\n        values.Filee = Images;\r\n        values.Writerq._id = documentData._id;\r\n        values.Hashtags = tags;\r\n        values.Class = currentClass._id;\r\n        setEnableUpload(true);\r\n        const res = await AddquestionsApi.postQuestions(values);\r\n        dispatch(addQuestion(res));\r\n        const socket = io(ENDPOINT);\r\n        socket.emit(\"send_question\", \"message\");\r\n        setTags([]);\r\n        values.Title = \"\";\r\n        values.Body = \"\";\r\n        console.log(res)\r\n      history.push(\"/FAQ/\"+res._id);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={\r\n        <Button as=\"div\" labelPosition=\"right\">\r\n          <Button color=\"red\">\r\n            <Icon name=\"question circle outline\" />\r\n            Question\r\n          </Button>\r\n\r\n          <Label as=\"a\" basic color=\"red\" pointing=\"left\">\r\n            <Icon name=\"bullhorn\">Post</Icon>\r\n          </Label>\r\n        </Button>\r\n      }\r\n    >\r\n      <Modal.Header>Whats your question?</Modal.Header>\r\n      <Modal.Content>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Input}\r\n              placeholder=\"Title\"\r\n              label=\"Title\"\r\n              name=\"Title\"\r\n              onChange={formik.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Field\r\n            control={TextArea}\r\n            placeholder=\"whats your question?\"\r\n            label=\"Content\"\r\n            name=\"Body\"\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.Body}\r\n          />\r\n          <TagsInput value={tags} onChange={handleChange} />\r\n\r\n          <div style={{ float: \"right\", marginRight: \"5%\",marginTop:\"2%\" }}>\r\n                  <Button\r\n                    style={{ maxHeight: \"40px\" }}\r\n                    type=\"submit\"\r\n                    content=\"Post\"\r\n                    icon=\"bullhorn\"\r\n                    color=\"red\"\r\n\r\n                  />\r\n                  <Button color=\"black\" onClick={() => setOpen(false)}>\r\n          Cancel\r\n        </Button>\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <div style={{ marginLeft: \"5%\" }}>\r\n                    <FileUpload\r\n                      refreshFunction={updateImages}\r\n                      listfile={null}\r\n                      Enbale={enableUpload}\r\n                    />\r\n                  </div>\r\n                </div>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n      \r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\nexport default AddQuestion;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\AllTasksStudent.js",["721","722","723","724","725","726","727"],"import moment from 'moment';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react'\nimport { getTasksById } from '../../redux/slices/Grade';\n\n\nexport default function AllTasksStudent(props) {\n\n   \n    console.log(props.allGrades);\n    return (\n        <div>\n              { props.allGrades.length <= 0 ? (\n\n<Segment placeholder>\n<Header icon>\n  <Icon name='tasks' />\n  No Tasks For you .\n</Header>\n\n</Segment> \n                   ) : (\n                    props.allGrades.map((task,index) =>\n                    \n                    <Link to={task.task.typeTask === \"Quiz\" ? \"/TaskQuizDetail/\"+task._id : \"/TaskFileDetail/\"+task._id}>                      \n                      <Segment color='grey' raised > \n                     \n                       <Item.Group divided key={index} >\n                      \n             <Item  >\n             <Item.Image size='tiny' \n              avatar src={process.env.PUBLIC_URL +  task.task.typeTask === \"Quiz\" ? \"/quiz.jpg\" : \"file.jpg\"} /> \n           \n              <Item.Content >\n                <Item.Header as='a'>{task.task.title}</Item.Header>\n                <Item.Meta>\n                   <span className='cinema'>At {moment(task.task.DateAt).format(\"MMM Do YY\")}</span>\n                </Item.Meta>\n                <Item.Description>{task.task.description}</Item.Description>\n              \n                \n             \n                </Item.Content>\n             \n                  <label color=\"green\">  Status : {task.taskStatus}<br/>\n                  <span className='cinema'> End Date : {moment(task.task.endDate).format(\"MMM Do \")}</span>\n                  </label>\n                  \n             \n              \n              \n                \n             </Item>\n             \n             </Item.Group>\n             \n             </Segment>\n             <Divider hidden></Divider>\n             </Link>\n\n                     ))}\n        </div>\n    )\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TasksAssign.js",["728","729","730","731","732","733","734"],"import moment from 'moment';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react'\nimport { getTasksById } from '../../redux/slices/Grade';\n\nexport default function TasksAssign(props) {\n\n   \n   \n    return (\n        <div>\n             { props.taskAssign.length <= 0 ? (\n\n<Segment placeholder>\n<Header icon>\n  <Icon name='tasks' />\n  No Assign Tasks For you.\n</Header>\n\n</Segment> \n                   ) : (\n               props.taskAssign.map((task,index) =>\n               task.taskStatus === \"Attribué\" ? (\n                <Link to={task.task.typeTask === \"Quiz\" ? \"/TaskQuizDetail/\"+task._id : \"/TaskFileDetail/\"+task._id}>   \n                      <Segment color=\"grey\" raised> \n                       <Item.Group divided key={index} >\n                     \n             <Item  >\n             <Item.Image size='tiny' \n              avatar src={process.env.PUBLIC_URL +  task.task.typeTask === \"Quiz\" ? \"/quiz.jpg\" : \"file.jpg\"} /> \n             \n              <Item.Content >\n                <Item.Header as='a'>{task.task.title}</Item.Header>\n                <Item.Meta>\n                <span className='cinema'>At {moment(task.task.DateAt).format(\"MMM Do YY\")}</span>\n                </Item.Meta>\n                <Item.Description>{task.task.description}</Item.Description>\n            \n             \n                \n             \n                </Item.Content>\n            \n                <label color=\"green\">  Status : {task.taskStatus}<br/>\n                  <span className='cinema'> End Date : {moment(task.task.endDate).format(\"MMM Do \")}</span>\n                  </label>\n                \n             </Item>\n             \n             </Item.Group>\n    \n             </Segment>\n             <Divider hidden></Divider>\n             </Link>\n             \n                     ) : (<></>)  ))}\n        </div>\n    )\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\MissingTasks.js",["735","736","737","738","739","740","741"],"import moment from 'moment';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react'\nimport { getTasksById } from '../../redux/slices/Grade';\n\n\nexport default function MissingTasks(props) {\n    return (\n        <div>\n              { props.taskmissing.length <= 0 ? (\n\n<Segment placeholder>\n<Header icon>\n  <Icon name='tasks' />\n  No Missing Tasks For you.\n</Header>\n\n</Segment> \n                   ) : (\n                    props.taskmissing.map((task,index) =>\n                    task.taskStatus ===\"missing\" ?(\n                      <Link to={task.task.typeTask === \"Quiz\" ? \"/TaskQuizDetail/\"+task._id : \"/TaskFileDetail/\"+task._id}>   \n                      <Segment color=\"grey\" raised> \n                       <Item.Group divided key={index} >\n                     \n             <Item  >\n             <Item.Image size='tiny' \n                avatar src={process.env.PUBLIC_URL +  task.task.typeTask === \"Quiz\" ? \"/quiz.jpg\" : \"file.jpg\"} /> \n             \n              <Item.Content >\n                <Item.Header as='a'>{task.task.title}</Item.Header>\n                <Item.Meta>\n                <span className='cinema'>At {moment(task.task.DateAt).format(\"MMM Do YY\")}</span>\n                </Item.Meta>\n                <Item.Description>{task.task.description}</Item.Description>\n               \n                </Item.Content>\n                <label color=\"green\">  Status : {task.taskStatus}<br/>\n                  <span className='cinema'> End Date : {moment(task.task.endDate).format(\"MMM Do \")}</span>\n                  </label>\n                \n                \n             </Item>\n             \n             </Item.Group>\n          \n             </Segment>\n             <Divider hidden></Divider>\n             </Link>\n                     ) : (<></>) ) ) }\n        </div>\n    )\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TasksRemis.js",["742","743","744","745","746","747","748"],"import moment from 'moment';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Header, Icon, Item, Label, Segment, Statistic } from 'semantic-ui-react'\nimport { getTasksById } from '../../redux/slices/Grade';\n\n\nexport default function TasksRemis(props) {\n\n    return (\n        <div>\n                { props.remisGrades.length <= 0 ? (\n\n<Segment placeholder>\n<Header icon>\n  <Icon name='tasks' />\n  No Remis Tasks For you.\n</Header>\n\n</Segment> \n                   ) : (\n                     \n                     \n                    props.remisGrades.map((task,index) =>\n                    task.taskStatus===\"Remis\" ? (\n                      <Link to={task.task.typeTask === \"Quiz\" ? \"/TaskQuizDetail/\"+task._id : \"/TaskFileDetail/\"+task._id}>   \n                      <Segment color=\"grey\" raised> \n                       <Item.Group divided key={index} >\n                     \n             <Item  >\n             <Item.Image size='tiny' \n               avatar src={process.env.PUBLIC_URL +  task.task.typeTask === \"Quiz\" ? \"/quiz.jpg\" : \"file.jpg\"} /> \n             \n              <Item.Content >\n                <Item.Header as='a'>{task.task.title}</Item.Header>\n                <Item.Meta>\n                <span className='cinema'> At {moment(task.task.DateAt).format(\"MMM Do YY\")}</span>\n                </Item.Meta>\n                <Item.Description>{task.task.description}</Item.Description>       \n                </Item.Content>\n               \n                <label color=\"green\">  Status : {task.taskStatus}<br/>\n                  <span className='cinema'> End Date : {moment(task.task.endDate).format(\"MMM Do \")}</span>\n                  </label>\n             </Item>\n             \n             </Item.Group>\n           \n             </Segment>\n             <Divider hidden></Divider>\n             </Link>\n\n             \n                ) : (<></>) ))}\n        </div>\n    )\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TaskFile.js",["749","750","751","752","753","754"],"import React, {useState} from 'react'\nimport Dropzone from \"react-dropzone-uploader\";\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport { Button, Divider } from 'semantic-ui-react';\nimport axios from \"axios\"\nimport { addUploadFile, uploadFile } from '../../redux/slices/Task';\nimport { useDispatch } from 'react-redux';\nimport FileUpload from '../../utlis/FileUpload';\n\nexport default function TaskFile(props) {\n\n    const [tasks , setTask] = useState({\n           \n        title : props.data.title,\n        description : props.data.description,\n        theme : props.data.theme,\n        typeTask : props.data.typeTask,\n        listQuestion : props.data.listQuestion,\n        listStudents : props.data.listStudents,\n        endDate : props.data.endDate,\n        creator : props.data.creator\n     \n    });\n\n    const [Images, setImages] = useState(props.data.listQuestion);\n\n    const [enableUpload, setEnableUpload] = useState(false);\n   \n  const updateImages = (newImages) => {\n  \n    setImages(newImages);\n    \n   \n  };\n  \n    var step=2;\n    const onclicNext = () => {  \n     \n     \n      props.addTask(tasks.listQuestion = Images);\n      props.addTask(tasks);\n      \n \n        props.nextStep(step+1);\n        setEnableUpload(true);\n        console.log(enableUpload);\n\n      }\n \n    return (\n        <div>\n          <div>       \n              <FileUpload refreshFunction={updateImages} listfile={null} Enbale={enableUpload}/>\n          </div>\n \n         <Divider hidden></Divider>\n  <Button\n      \n            color=\"red\"\n              type=\"submit\" \n              floated='right'\n              onClick={()=>onclicNext()}\n             >Next</Button>\n        </div>\n    )\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\SendTask.js",["755","756","757","758","759","760","761","762","763","764"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Step,\n  Icon,\n  Button,\n  Label,\n  Item,\n  Divider,\n  Header,\n  Grid,\n  Segment,\n  Table,\n  List,\n  Image,\n  Confirm,\n} from \"semantic-ui-react\";\nimport { assignTask, postTasks } from \"../../redux/slices/Task\";\nimport moment from \"moment\";\n\nimport ReactPlayer from \"react-player\";\nimport FileUpload from \"../../utlis/FileUpload\";\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\nexport default function SendTask(props) {\n  const [activeIndex, setActiveIndex] = useState();\n  const dispatch = useDispatch();\n \n \n  const [Images, setImages] = useState(props.data.listQuestion);\n\n  const [enableUpload, setEnableUpload] = useState(false);\n \nconst updateImages = (newImages) => {\n\n  setImages(newImages);\n  \n \n};\n  var step = 3;\n  console.log(\"cc\");\n  console.log(props.data);\n  const [cancel, setCancel] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [opensave, setOpensave] = useState(false);\n\n  const [close, setClose] = useState(false);\n  const clicCancel = () => {\n    setCancel(true);\n  };\n  const clicOpen = () => {\n    setOpen(true);\n  };\n  const clicOpensave = () => {\n    setOpensave(true);\n  };\n  const clicConfirmCancel = () => {\n    //dispatch(postTasks(props.data));\n   // props.nextStep(step + 1);\n   setCancel(false);\n  };\n  const clicConfirm = () => {\n   \n    dispatch(postTasks(props.data));\n    props.nextStep(step + 1);\n    setOpensave(false);\n  };\n  const clicConfirmAssign = () => {\n    dispatch(assignTask(props.data));\n    props.nextStep(step + 1);\n    setOpen(false);\n  };\n  const clicClose = () => {\n    setOpen(false);\n  };\n  const clicClosesave = () => {\n    setOpensave(false);\n  };\n  const clicCloseCancel = () => {\n    setCancel(false);\n  };\n \n\n  return (\n    <div>\n      <Grid centered columns={3}>\n        <Grid.Column></Grid.Column>\n      </Grid>\n      <Divider horizontal>\n        <Header as=\"h4\">\n          <Icon name=\"newspaper\" />\n          Info Task\n        </Header>\n      </Divider>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Segment raised>\n              <Item.Group divided>\n                <Item>\n                  <Item.Content>\n                    <Item.Header as=\"a\">{props.data.title}</Item.Header>\n                    <Item.Meta>\n                      <span className=\"cinema\">\n                        {moment(props.data.endDate).format(\"MMMM Do yy\")}\n                      </span>\n                    </Item.Meta>\n                    <Item.Description>\n                      {props.data.description}\n                    </Item.Description>\n                    <Item.Extra>\n                      <Label icon=\"tasks\" content={props.data.typeTask} />\n                    </Item.Extra>\n                  </Item.Content>\n                </Item>\n              </Item.Group>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment raised>\n              <Item.Group>\n                <Item>\n                  <Item.Content verticalAlign=\"middle\">\n                    <Item.Header>\n                      <List animated verticalAlign=\"middle\">\n                        {props.data.listStudents.map((student) =>(\n                        <List.Item>\n                          <Image\n                            avatar\n                            src={student.picture}\n                          />\n                          <List.Content>\n                            <List.Header>{student.name}</List.Header>\n                          </List.Content>\n                        </List.Item>\n                  ) )}\n                      </List>\n                    </Item.Header>\n                  </Item.Content>\n                </Item>\n              </Item.Group>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Divider horizontal>\n        <Header as=\"h4\">\n          <Icon name=\"tasks\" />\n          Questions\n        </Header>\n      </Divider>\n      <Grid columns=\"three\">\n        <Grid.Row>\n          {props.data.typeTask === \"Quiz\" ? (\n            props.data.listQuestion.map((quiz, index) => (\n              <Grid.Column>\n                <Table key={index} color=\"red\" textAlign=\"center\">\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>\n                        {quiz.fquestion + \"?\"}{\" \"}\n                      </Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n\n                  <Table.Body>\n                    <Table.Row\n                      positive={quiz.foptionA === quiz.correct_answer}\n                      negative={quiz.foptionA !== quiz.correct_answer}\n                    >\n                      <Table.Cell>\n                      {(     quiz.foptionA === quiz.correct_answer  ) ?\n                          (<Icon name=\"check circle\" color=\"green\" />): <></>\n                      }\n                        {quiz.foptionA}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row\n                      positive={quiz.foptionB === quiz.correct_answer}\n                      negative={quiz.foptionB !== quiz.correct_answer}\n                    >\n                      <Table.Cell> \n                      {(     quiz.foptionB === quiz.correct_answer  ) ?\n                          (<Icon name=\"check circle\" color=\"green\" />): <></>\n                      }\n                        {quiz.foptionB}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row\n                      positive={quiz.foptionC === quiz.correct_answer}\n                      negative={quiz.foptionC !== quiz.correct_answer}\n                    >\n                      <Table.Cell>\n                      {(     quiz.foptionC === quiz.correct_answer  ) ?\n                          (<Icon name=\"check circle\" color=\"green\" />): <></>\n                      }\n                         {quiz.foptionC}</Table.Cell>\n                    </Table.Row>\n                    <Table.Row\n                      positive={quiz.foptionD === quiz.correct_answer}\n                      negative={quiz.foptionD !== quiz.correct_answer}\n                    >\n                      <Table.Cell>\n                      {(     quiz.foptionD === quiz.correct_answer  ) ?\n                          (<Icon name=\"check circle\" color=\"green\" />): <></>\n                      }\n                         {quiz.foptionD}</Table.Cell>\n                    </Table.Row>\n                  </Table.Body>\n                </Table>\n                <Divider hidden />\n              </Grid.Column>\n            ))\n          ) : props.data.listQuestion.legnth >=0 ? (\n            <></>\n          ) : (\n           \n            <FileUploadEdit\n            refreshFunction={updateImages}\n            listfile={props.data.listQuestion}  \n          />\n          )}\n        </Grid.Row>\n      </Grid>\n\n      <Button.Group floated=\"right\">\n        <Button onClick={() => clicCancel()}>Cancel</Button>\n        <Confirm\n          header=\"Cancel Add \"\n          content=\"Are you sure?\"\n          open={cancel}\n          onCancel={clicCloseCancel}\n          onConfirm={clicConfirmCancel}\n        />\n        <Button.Or />\n        <Button\n          color=\"red\"\n          type=\"submit\"\n          onClick={() => clicOpensave()}\n          //onClick={onSubmitSaveTask}\n        >\n          Save\n        </Button>\n        <Confirm\n          header=\"Save Task To Assign\"\n          content=\"Are you sure?\"\n          open={opensave}\n          onCancel={clicClosesave}\n          onConfirm={clicConfirm}\n        />\n        <Button.Or />\n        <Button\n          color=\"red\"\n          type=\"submit\"\n          // onClick={onSubmitAssignTask}\n          onClick={() => clicOpen()}\n        >\n          Assign\n        </Button>\n        <Confirm\n          header=\"Assign Task To Student\"\n          content=\"Are you sure?\"\n          open={open}\n          onCancel={clicClose}\n          onConfirm={clicConfirmAssign}\n        />\n      </Button.Group>\n    </div>\n  );\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Quiz\\AddQuiz.js",["765","766","767","768","769","770","771","772"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Divider, Grid, Segment, Icon, Header } from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Select from 'react-select';\r\nexport default function AddQuiz(props) {\r\n  const Options = [\r\n    { label: \"OPTION A\", value: \"OPTION A\" },\r\n    { label: \"OPTION B\", value: \"OPTION B\" },\r\n    { label: \"OPTION C\", value: \"OPTION C\" },\r\n    { label: \"OPTION D\", value: \"OPTION D\" },\r\n];\r\nconst [selected, setSelected] = useState(null);\r\n  const [tasks, setTask] = useState({\r\n    title: props.data.title,\r\n    description: props.data.description,\r\n    theme: props.data.theme,\r\n    cour: props.data.cour,\r\n    typeTask: props.data.typeTask,\r\n    listQuestion: props.data.listQuestion,\r\n    listStudents: props.data.listStudents,\r\n    endDate: props.data.endDate,\r\n    creator: props.data.creator,\r\n  });\r\n\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      fquestion: \"\",\r\n      foptionA: \"\",\r\n      foptionB: \"\",\r\n      foptionC: \"\",\r\n      foptionD: \"\",\r\n      correct_answer: \"\",\r\n      fpoint: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"InputFields\", inputFields);\r\n\r\n  };\r\n\r\n  const handleChangeSelect = (id,selectedOption) => {\r\n    console.log(id);\r\n    console.log(selectedOption);\r\n    const newInputFields = inputFields.map((i) => {\r\n    \r\n      if (id === i.id) {\r\n        switch (selectedOption.value) {\r\n          case 'OPTION A':\r\n            i[\"correct_answer\"] = i[\"foptionA\"];\r\n            break;\r\n          case 'OPTION B':\r\n            i[\"correct_answer\"] = i[\"foptionB\"];\r\n            break;\r\n          case 'OPTION C':\r\n            i[\"correct_answer\"] = i[\"foptionC\"];\r\n            break;\r\n            case 'OPTION D':\r\n              i[\"correct_answer\"] = i[\"foptionD\"];\r\n              break;\r\n         \r\n        }\r\n       \r\n      }\r\n\r\n\r\n      return i;\r\n    });\r\n    console.log(newInputFields);\r\n    setInputFields(newInputFields);\r\n  };\r\n  const handleChangeInput = (id, event) => {\r\n   \r\n    console.log(id);\r\n    const newInputFields = inputFields.map((i) => {\r\n    \r\n\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n       \r\n      }\r\n\r\n\r\n      return i;\r\n    });\r\n    console.log(newInputFields);\r\n    setInputFields(newInputFields);\r\n  };\r\n  const [theme, setTheme] = useState();\r\n  const selectedTheme = (selectedList, selectedItem) => {\r\n\r\n    \r\n  //  inputFields[0][\"correct_answer\"] = selectedItem.value;\r\n    \r\n    \r\n    console.log(inputFields);\r\n    setInputFields(inputFields);\r\n        \r\n  };\r\n  const handleAddFields = () => {\r\n\r\n    setInputFields([\r\n      ...inputFields,\r\n      {\r\n        id: uuidv4(),\r\n        fquestion: \"\",\r\n        foptionA: \"\",\r\n        foptionB: \"\",\r\n        foptionC: \"\",\r\n        foptionD: \"\",\r\n        correct_answer: \"\",\r\n        fpoint: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  const [selectedItem, SetSelectedItem] = useState();\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n\r\n  var step = 2;\r\n  const event = () => {\r\n    props.addTask((tasks.listQuestion = inputFields));\r\n    props.addTask(tasks);\r\n    props.nextStep(step + 1);\r\n  };\r\n\r\n \r\n  return (\r\n    <div>\r\n      <Grid centered>\r\n        <Grid.Column>\r\n          <Segment raised>\r\n            <Form className=\"qsd\" onSubmit={handleSubmit}>\r\n              {inputFields.map((inputField, index) => (\r\n                <div key={inputField.id}>\r\n                  <Divider />\r\n                  <label>Question {index + 1}</label>\r\n                  <Form.Group widths=\"equal\" inline>\r\n                    <Form.Input\r\n                      name=\"fquestion\"\r\n                      fluid\r\n                      value={inputFields.fquestion}\r\n                      onChange={(event) =>\r\n                        handleChangeInput(inputField.id, event)\r\n                      }\r\n                    />\r\n\r\n                    <Form.Input\r\n                      name=\"fpoint\"\r\n                      value={inputFields.fquestion}\r\n                      onChange={(event) =>\r\n                        handleChangeInput(inputField.id, event)\r\n                      }\r\n                    />\r\n                    <Button.Group>\r\n                      <Button\r\n                        size=\"mini\"\r\n                        disabled={inputFields.length === 1}\r\n                        onClick={() => handleRemoveFields(inputField.id)}\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      <Button.Or></Button.Or>\r\n                      <Button size=\"mini\" onClick={handleAddFields}>\r\n                        +\r\n                      </Button>\r\n                    </Button.Group>\r\n                  </Form.Group>\r\n                  <label>A</label>\r\n\r\n                  <Form.Input\r\n                    icon={<Icon name=\"check circle outline\" />}\r\n                    name=\"foptionA\"\r\n                    fluid\r\n                    value={inputFields.foptionA}\r\n                    onChange={(event) =>\r\n                      handleChangeInput(inputField.id, event)\r\n                    }\r\n                  />\r\n\r\n                  <Form.Input\r\n                    name=\"foptionB\"\r\n                    label=\"B\"\r\n                    variant=\"filled\"\r\n                    value={inputFields.foptionB}\r\n                    onChange={(event) =>\r\n                      handleChangeInput(inputField.id, event)\r\n                    }\r\n                  />\r\n                  <Form.Input\r\n                    name=\"foptionC\"\r\n                    label=\"C\"\r\n                    variant=\"filled\"\r\n                    value={inputFields.foptionC}\r\n                    onChange={(event) =>\r\n                      handleChangeInput(inputField.id, event)\r\n                    }\r\n                  />\r\n                  <Form.Input\r\n                    name=\"foptionD\"\r\n                    label=\"D\"\r\n                    variant=\"filled\"\r\n                    value={inputFields.foptionD}\r\n                    onChange={(event) =>\r\n                      handleChangeInput(inputField.id, event)\r\n                    }\r\n                    \r\n                  />\r\n                <Header as=\"h5\" icon=\"check square outline\" content={\"The Correct Answer : \"+inputField.correct_answer} /> \r\n                <Select\r\n              \r\n        value={selected}\r\n        onChange={( selectedOption , event) =>\r\n          handleChangeSelect(inputField.id,selectedOption)  \r\n        }\r\n        options={Options}\r\n\r\n      />\r\n          \r\n    \r\n              \r\n                </div>\r\n              ))}\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      <br/>\r\n      <Divider hidden></Divider>\r\n      <Button color=\"red\" type=\"submit\" floated=\"right\" onClick={event}>\r\n        Next\r\n      </Button>\r\n\r\n    </div>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalCourses.js",["773","774"],"import React from \"react\";\r\nimport { Dropdown, Feed, Icon, Modal } from \"semantic-ui-react\";\r\nimport FormCourses from \"./FormCourses\";\r\n\r\nfunction ModalCourses(props) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        trigger={<Dropdown.Item icon=\"file text\" text=\"Add courses\" />}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <FormCourses\r\n            buttonSubmitTitle={props.buttonSubmitTitle}\r\n            buttonColor={props.buttonColor}\r\n            coursesId={props.coursesId}\r\n            onCoursesAdded={props.onCoursesAdded}\r\n            onCoursesUpdated={props.onCoursesUpdated}\r\n            server={props.server}\r\n            //socket={this.props.socket}\r\n          />\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalCourses;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalSeance.js",["775","776"],"import React from \"react\";\r\nimport { Dropdown, Feed, Icon, Modal } from \"semantic-ui-react\";\r\nimport FormSeance from \"./FormSeance\";\r\n\r\nfunction ModalSeance(props) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        trigger={\r\n          <Dropdown.Item icon={props.icon} text={props.buttonTriggerTitle} />\r\n        }\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <FormSeance\r\n            buttonSubmitTitle={props.buttonSubmitTitle}\r\n            buttonColor={props.buttonColor}\r\n            seanceId={props.seanceId}\r\n            onSeanceAdded={props.onSeanceAdded}\r\n            onSeanceUpdated={props.onSeanceUpdated}\r\n            server={props.server}\r\n            socket={props.socket}\r\n          />\r\n        </Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalSeance;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\AddTask.js",["777","778","779","780","781","782"],"import React, { useState } from \"react\";\n\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Select from \"react-select\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\n\nimport {\n  Dropdown,\n  Button,\n  Form,\n  Grid,\n  Rail,\n  Segment,\n  TextArea,\n  Label,\n  Header,\n} from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\nimport MultiSelect from \"react-multi-select-component\";\n\n\n\n\nexport default function AddTask(props) {\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\n\n  const seanceChosen = [];\n  const studentChosen =[] ;\n  const seances = useSelector((state) => state.seance.seance);\n  currentClass.classUsers.forEach((element) => {\n    studentChosen.push({ label: element.name, value: element._id });\n  });\n\n  seances.forEach((element) => {\n    seanceChosen.push({ label: element.titre, value: element });\n  });\n\n \n  const [selectedSeance, setSelectedSeance] = useState(null);\n\n  const [theme, setTheme] = useState(props.data.theme);\n\n \n  const [selected, setSelected] = useState([]);\n \n \n\n  var step = 1;\n\n  const [tasks, setTask] = useState({\n    title: props.data.title,\n    description: props.data.description,\n    theme: props.data.theme,\n    cour: props.data.cour,\n    typeTask: props.data.typeTask,\n    listQuestion: props.data.listQuestion,\n    listStudents: props.data.listStudents,\n    endDate: props.data.endDate,\n    creator: props.data.creator,\n  });\n\n  const event = () => {\n    props.addTask(\n      currentClass.classUsers.forEach((itemselect) => {\n      \n        const index = selected.findIndex(\n          (item) => item.value === itemselect._id\n        );\n        if (index !== -1) {\n          \n      \n          tasks.listStudents.push(itemselect);\n        }\n      \n        \n      })\n    );\n   // console.log(tasks.listStudents);\n    props.addTask((tasks.theme = selectedSeance.value));\n   // console.log(tasks.theme);\n    props.addTask(tasks);\n\n    props.nextStep(step + 1);\n  };\n\n  return (\n    <div>\n      <Segment raised>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={11}>\n              <Form>\n                <Form.Field>\n                  <Form.Input\n                    label=\"Title\"\n                    required\n                    value={tasks.title}\n                    onChange={(e) =>\n                      setTask({ ...tasks, title: e.target.value })\n                    }\n                    placeholder=\"Title\"\n                  />\n                </Form.Field>\n                <Form.Field required>\n                  <label>Description</label>\n                  <TextArea\n                    required\n                    label=\"Description\"\n                    value={tasks.description}\n                    onChange={(e) =>\n                      setTask({ ...tasks, description: e.target.value })\n                    }\n                    placeholder=\"Description..\"\n                    style={{ minHeight: 50 }}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Due</label>\n                  <SemanticDatepicker\n                    onChange={(e, data) =>\n                      setTask({ ...tasks, endDate: data.value })\n                    }\n                    value={tasks.endDate}\n                  />\n                </Form.Field>\n              </Form>\n            </Grid.Column>\n            <Grid.Column width={5}>\n              <Header\n                as=\"h5\"\n                icon=\"check square outline\"\n                content={\"Choose Theme  \"}\n              />\n              <Select\n                value={selectedSeance}\n                onChange={setSelectedSeance}\n                options={seanceChosen}\n              />\n\n        \n              <Header\n                as=\"h5\"\n                icon=\"check square outline\"\n                content={\" For Student  \"}\n              />\n              <Form.Field required>\n               \n                <MultiSelect\n                  options={studentChosen}\n                  value={selected}\n                  onChange={setSelected}\n                  labelledBy=\"Select\"\n                />\n              </Form.Field>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Button\n        disabled={\n          step > 2 || (!tasks.title && !tasks.description && !tasks.typeTask)\n        }\n        type=\"submit\"\n        floated=\"right\"\n        color=\"red\"\n        onClick={event}\n      >\n        Next\n      </Button>\n    </div>\n  );\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\UncorrectedTask.js",["783","784","785","786","787","788","789","790","791","792","793","794","795"],"import React, { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Feed,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Input,\n  List,\n  Loader,\n  Segment,\n} from \"semantic-ui-react\";\nimport { isAuth } from \"../../helpers/auth\";\nimport { assignGradeToStudent } from \"../../redux/slices/Grade\";\nimport { getDetailTask } from \"../../redux/slices/Task\";\nimport CorrectedTask from \"./CorrectedTask\";\n\nexport default function UncorrectedTask(props) {\n  const { id } = useParams();\n  const [grade, setGrade] = useState();\n  const [_id, setIdTask] = useState();\n  const [objgrade, setObjGrade] = useState({ _id: null, grade: null });\n\n  const submitGrade = (e, data) => {\n    setObjGrade({ _id: data, grade: e.target.value });\n\n    console.log(objgrade);\n  };\n  const dispatch = useDispatch();\n\n  const assignGrade = () => {\n    dispatch(assignGradeToStudent(objgrade)).then(() => {\n      dispatch(getDetailTask(id));\n    });\n  };\n  console.log(props.uncorrectTasks);\n\n  useEffect(() => {\n    dispatch(getDetailTask(id));\n  }, [id]);\n\n  return (\n    <div>\n      <Card.Group>\n        {props.uncorrectTasks.length <= 0 ? (\n          <div> </div>\n        ) : (\n          props.uncorrectTasks.map((task, index) =>\n            task.grade === null ? (\n              <Card key={index} color=\"red\" raised>\n                <Card.Content>\n                  <Image\n                    floated=\"right\"\n                    size=\"mini\"\n                    src={task.student.picture}\n                  />\n                  <Card.Header>{task.student.name}</Card.Header>\n\n                  <Card.Meta>\n                    <strong>{task.taskStatus}</strong>\n                  </Card.Meta>\n                  <Card.Description>\n                    {task.task.typeTask === \"File\" ? (\n                      <>\n                        <Feed.Extra images style={{ display: \"flex\" }}>\n                          <List horizontal>\n                            {task.listReponse.map((file, index) => (\n                              <List.Item key={index}>\n                                {(() => {\n                                  switch (file.toString().split(\".\").pop()) {\n                                    case \"pdf\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          {\" \"}\n                                          <Icon\n                                            name=\"file pdf\"\n                                            color=\"red\"\n                                            size=\"huge\"\n                                          />\n                                        </a>\n                                      );\n                                    case \"docx\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <Icon\n                                            name=\"file word\"\n                                            color=\"blue\"\n                                            size=\"huge\"\n                                          />\n                                        </a>\n                                      );\n                                    case \"pptx\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <Icon\n                                            name=\"file powerpoint\"\n                                            color=\"red\"\n                                            size=\"huge\"\n                                          />\n                                        </a>\n                                      );\n                                    case \"xlsx\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <Icon\n                                            name=\"file excel outline\"\n                                            color=\"green\"\n                                            size=\"huge\"\n                                          />\n                                        </a>\n                                      );\n                                    case \"zip\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <Icon name=\"zip\" size=\"huge\" />\n                                        </a>\n                                      );\n                                    case \"js\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <Icon\n                                            name=\"js\"\n                                            color=\"yellow\"\n                                            size=\"huge\"\n                                          />\n                                        </a>\n                                      );\n                                    case \"php\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <Icon\n                                            name=\"zip\"\n                                            color=\"blue\"\n                                            size=\"huge\"\n                                          />\n                                        </a>\n                                      );\n                                    case \"txt\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <Icon\n                                            name=\"file text\"\n                                            size=\"huge\"\n                                            color=\"blue\"\n                                          />\n                                        </a>\n                                      );\n\n                                    case \"jpg\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <img\n                                            style={{\n                                              minWidth: \"50px\",\n                                              width: \"50px\",\n                                              height: \"50px\",\n                                            }}\n                                            src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                            alt={`scan`}\n                                          />\n                                        </a>\n                                      );\n                                    case \"jpeg\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <img\n                                            style={{\n                                              minWidth: \"50px\",\n                                              width: \"50px\",\n                                              height: \"50px\",\n                                            }}\n                                            src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                            alt={`scan`}\n                                          />\n                                        </a>\n                                      );\n                                    case \"png\":\n                                      return (\n                                        <a\n                                          href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                        >\n                                          <img\n                                            style={{\n                                              minWidth: \"50px\",\n                                              width: \"50px\",\n                                              height: \"50px\",\n                                            }}\n                                            src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                            alt={`scan`}\n                                          />\n                                        </a>\n                                      );\n\n                                    default:\n                                      return (\n                                        <Icon\n                                          name=\"File\"\n                                          color=\"Black\"\n                                          size=\"huge\"\n                                        />\n                                      );\n                                  }\n                                })()}\n\n                                <p>{file.toString().split(\"_\").pop()}</p>\n                              </List.Item>\n                            ))}\n                          </List>\n                        </Feed.Extra>\n\n                        <Input\n                    name=\"grade\"\n                    type=\"number\"\n                    size=\"mini\"\n                    onChange={(e) => submitGrade(e, task._id)}\n                  />\n                  \n                  <Button color=\"red\" size='mini' floated onClick={() => assignGrade()}>\n                    Send\n                  </Button>\n                      </>\n\n                    ) : (\n                      <>\n                        {\" \"}\n                        <strong> Quiz </strong>{\" \"}\n                      </>\n                    )}\n\n\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n               \n                <Link to={ task.task.typeTask === \"File\" ? \"/TaskFileDetail/\"+task._id :  \"/TaskQuizDetail/\"+task._id }>\n            <Button  inverted fluid color=\"red\" content=\"View Detail\"/>\n            </Link>\n       \n                </Card.Content>\n              </Card>\n            ) : (\n              <></>\n            )\n          )\n        )}\n      </Card.Group>\n    </div>\n  );\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\CorrectedTask.js",["796","797","798","799","800","801","802","803"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Card, Feed, Header, Icon, Image, Input, Label, List, Segment } from 'semantic-ui-react'\nimport { assignGradeToStudent } from '../../redux/slices/Grade'\nimport { getCorrectedTask, getDetailTask } from '../../redux/slices/Task'\n\nexport default function CorrectedTask(props) {\nconst zero = 0;\n  const dispatch = useDispatch();\n\n  const assignGrade = (id) => {\n    \n    dispatch(assignGradeToStudent({ _id: id, grade:null })).then(() => {\n      dispatch(getDetailTask(id));\n    });\n  };\n\n    return (\n        <div>\n             <Card.Group>\n             { !props.correctTasks ? (<div></div>)  : (\n             props.correctTasks.map((task,index) =>\n               \n            task.grade!=null ? ( \n    <Card key={index} color='grey' raised>\n \n     \n\n      <Card.Content>\n        <Image\n          floated='right'\n          size='mini'\n          src={task.student.picture}\n        />\n        <Card.Header>\n        <strong>{task.student.name}</strong>\n        </Card.Header>\n       \n        <Card.Meta >\n            <strong>{task.taskStatus}</strong> <br/>\n        \n    </Card.Meta>\n        <Card.Description>\n        { task.task.typeTask === \"File\" ?  (<>\n          <Feed.Extra images style={{ display: \"flex\" }}>\n                        <List horizontal>\n                          {task.listReponse.map((file, index) => (\n                            <List.Item key={index}>\n                            {(() => {\n                              switch (file.toString().split(\".\").pop()) {\n                                case \"pdf\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n                                      {\" \"}\n                                      <Icon name=\"file pdf\" color=\"red\" size=\"huge\" />\n                                    </a>\n                                  );\n                                case \"docx\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n                                      <Icon name=\"file word\" color=\"blue\" size=\"huge\" />\n                                    </a>\n                                  );\n                                case \"pptx\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n                                      <Icon\n                                        name=\"file powerpoint\"\n                                        color=\"red\"\n                                        size=\"huge\"\n                                      />\n                                    </a>\n                                  );\n                                case \"xlsx\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n                                      <Icon\n                                        name=\"file excel outline\"\n                                        color=\"green\"\n                                        size=\"huge\"\n                                      />\n                                    </a>\n                                  );\n                                case \"zip\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n                                      <Icon name=\"zip\" size=\"huge\" />\n                                    </a>\n                                  );\n                                case \"js\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n                                      <Icon name=\"js\" color=\"yellow\" size=\"huge\" />\n                                    </a>\n                                  );\n                                case \"php\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n                                      <Icon name=\"zip\" color=\"blue\" size=\"huge\" />\n                                    </a>\n                                  );\n                                case \"txt\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n                                      <Icon name=\"file text\" size=\"huge\" color=\"blue\" />\n                                    </a>\n                                  );\n          \n                                case \"jpg\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n          \n                                    <img\n                                      style={{\n                                        minWidth: \"50px\",\n                                        width: \"50px\",\n                                        height: \"50px\",\n                                      }}\n                                      src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                      alt={`scan`}\n                                    />\n                                    </a>\n                                  );\n                                case \"jpeg\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n          \n                                    <img\n                                      style={{\n                                        minWidth: \"50px\",\n                                        width: \"50px\",\n                                        height: \"50px\",\n                                      }}\n                                      src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                      alt={`scan`}\n                                    />\n                                    </a>\n                                  );\n                                case \"png\":\n                                  return (\n                                    <a href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}>\n          \n                                    <img\n                                      style={{\n                                        minWidth: \"50px\",\n                                        width: \"50px\",\n                                        height: \"50px\",\n                                      }}\n                                      src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\n                                      alt={`scan`}\n                                    />\n                                    </a>\n                                  );\n          \n                                default:\n                                  return <Icon name=\"File\" color=\"Black\" size=\"huge\" />;\n                              }\n                            })()}\n          \n                            <p>{file.toString().split(\"_\").pop()}</p>\n                          </List.Item>\n                          ))}\n                        </List>\n                      </Feed.Extra>\n        \n                      <Label   color=\"red\" icon>\n        <Icon name='clipboard check' />\n                              <Label.Detail>{task.grade}</Label.Detail>\n        \n       \n      </Label> <Button color=\"red\" size='mini' floated onClick={() => assignGrade(task._id)}>\n                    Cancel\n                  </Button>\n        </>) : (<> <h5>Quiz</h5>  <br/>   <Label   color=\"red\" icon>\n        <Icon name='clipboard check' />\n                              <Label.Detail>{task.grade}</Label.Detail>\n        \n       \n      </Label> </>)}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n    \n    \n      <Link to={ task.task.typeTask === \"File\" ? \"/TaskFileDetail/\"+task._id :  \"/TaskQuizDetail/\"+task._id }>\n            <Button inverted fluid color=\"red\" content=\"View Detail\"/>\n            </Link>\n      </Card.Content>\n      \n    </Card>\n             ) : (\n             \n             <></>\n             \n             )))}\n  </Card.Group>\n        </div>\n    )\n}\n","C:\\Smart-Virtual-Classroom\\client\\src\\utlis\\FileUpload.js",["804","805","806","807","808","809","810","811","812","813","814"],"import { set } from \"js-cookie\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { Icon, Segment, Loader, Tab, Dimmer, Label } from \"semantic-ui-react\";\r\nimport { array } from \"yup/lib/locale\";\r\nimport { AddquestionsApi } from \"../api/api\";\r\n\r\nfunction FileUpload(props) {\r\n  const arr = [];\r\n  const [enablee, setUploadfilee] = useState(props.Enbale);\r\n  const [loader, SetLoader] = useState(false);\r\n  const [endloader, SetEndLoader] = useState(true);\r\n  useEffect(() => {\r\n    if (props.upImg === 0) {\r\n      if (props.listfile != null) {\r\n        props.listfile.forEach((element) => {\r\n          arr.push(element);\r\n        });\r\n      } else {\r\n        setImages([]);\r\n      }\r\n    }\r\n  });\r\n\r\n  const [hideshow, setetat] = useState(\"none\");\r\n\r\n  const [Images, setImages] = useState(arr);\r\n  var [fd, setfd] = useState(new FormData());\r\n\r\n  const onDrop = (files) => {\r\n    const file = [];\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    files.forEach((f) => {\r\n      formData.append(\"files\", f);\r\n\r\n      arr.push(f.name);\r\n      props.refreshFunction(arr);\r\n    });\r\n    fd = formData;\r\n    setfd(formData);\r\n    setImages(arr);\r\n\r\n    /*formData.append(\"files\", files[i]);\r\n    fd = formData;\r\n    setfd(formData);\r\n   */\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (props.Enbale && endloader) {\r\n      //save the Image we chose inside the Node Server\r\n\r\n\r\n      SetLoader(true);\r\n      const config = {\r\n        header: { \"content-type\": \"multipart/form-data\" },\r\n      };\r\n      const res = await AddquestionsApi.uploadFileQuestions(fd, config).then(\r\n        (response) => {\r\n          if (response.data) {\r\n            SetEndLoader(false);\r\n            setImages(response.data);\r\n            props.refreshFunction(response.data);\r\n            SetLoader(false);\r\n            setImages([]);\r\n          } else {\r\n            alert(\"Failed to save the File in Server\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  });\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = Images.indexOf(image);\r\n\r\n    let newImages = [...Images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flexwrap\" }}>\r\n      <Dropzone    onDrop={onDrop} multiple={true} maxSize={800000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: \"40px\",\r\n              height: \"40px\",\r\n              //border: \"1px solid lightgray\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            {...getRootProps()}\r\n          \r\n          >\r\n            <input {...getInputProps()} />\r\n            <Label as=\"a\" onClick={() => setetat(\"flex\")}>\r\n              <div style={{ display: \"flex\" }}>\r\n                <Icon name=\"paperclip\" floated />\r\n                <p>Add</p>\r\n              </div>\r\n            </Label>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: \"wrap\" + hideshow,\r\n        }}\r\n      >\r\n        {Images.map((image, index) => (\r\n          <Segment\r\n            key={index}\r\n            raised\r\n            color=\"black\"\r\n            onClick={() => onDelete(image)}\r\n          >\r\n            {(() => {\r\n              switch (image.split(\".\").pop()) {\r\n                case \"pdf\":\r\n                  return <Icon name=\"file pdf\" color=\"white\" size=\"huge\" />;\r\n                case \"docx\":\r\n                  return <Icon name=\"file word\" color=\"blue\" size=\"huge\" />;\r\n                case \"pptx\":\r\n                  return (\r\n                    <Icon name=\"file powerpoint\" color=\"red\" size=\"huge\" />\r\n                  );\r\n                case \"xlsx\":\r\n                  return (\r\n                    <Icon name=\"file excel outline\" color=\"green\" size=\"huge\" />\r\n                  );\r\n                case \"zip\":\r\n                  return <Icon name=\"zip\" size=\"huge\" />;\r\n                case \"js\":\r\n                  return <Icon name=\"js\" size=\"huge\" />;\r\n                case \"php\":\r\n                  return <Icon name=\"zip\" size=\"huge\" />;\r\n                case \"txt\":\r\n                  return <Icon name=\"file text\" size=\"huge\" />;\r\n\r\n                case \"jpg\":\r\n                  return <Icon name=\"file image\" color=\"blue\" size=\"huge\" />;\r\n\r\n                case \"jpeg\":\r\n                  return <Icon name=\"file image\" color=\"blue\" size=\"huge\" />;\r\n\r\n                case \"png\":\r\n                  return <Icon name=\"file image\" color=\"blue\" size=\"huge\" />;\r\n\r\n                default:\r\n                  return <Icon name=\"file\" color=\"red\" />;\r\n              }\r\n            })()}\r\n            <p\r\n              style={{\r\n                wordBreak: \"break-all\",\r\n              }}\r\n            >\r\n              {image}\r\n            </p>\r\n          </Segment>\r\n        ))}\r\n      </div>\r\n      {loader ? (\r\n        <Dimmer active inverted>\r\n          <Loader inline=\"centered\">Preparing Files ... please wait !</Loader>\r\n        </Dimmer>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalConfirmDeleteCour.js",["815","816"],"import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Feed, Icon, Modal } from \"semantic-ui-react\";\r\nimport { DeleteCourses } from \"../../redux/slices/Courses\";\r\n\r\nfunction ModalConfirmDeleteCour(props) {\r\n  const [modalOpen, SetModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpen = (e) => SetModalOpen(true);\r\n  const handleClose = (e) => SetModalOpen(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    let params = e.target.getAttribute(\"coursesid\");\r\n\r\n    dispatch(DeleteCourses(params))\r\n      .then((response) => {\r\n        handleClose();\r\n        //props.onCoursesDeleted(response.data.result);\r\n        //this.props.socket.emit(\"delete\", response.data.result);\r\n      })\r\n      .catch((err) => {\r\n        handleClose();\r\n        throw err;\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        trigger={\r\n          // <Button onClick={this.handleOpen} color={this.props.buttonColor}>\r\n          //   {this.props.buttonTriggerTitle}\r\n          // </Button>\r\n\r\n          <Feed.Like onClick={handleOpen}>\r\n            <Icon onClick={handleOpen} name=\"trash\" /> Remove\r\n          </Feed.Like>\r\n        }\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <p>\r\n            Are you sure you want to delete{\" \"}\r\n            <strong>{props.courses.titre}</strong>?\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            coursesid={props.courses._id}\r\n            color=\"red\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"black\">\r\n            No\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalConfirmDeleteCour;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalCoursesEdit.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\CommentChat.js",["817","818","819","820"],"import React from 'react'\r\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\r\n\r\nfunction CommentChat() {\r\n    return (\r\n      <div>\r\n        <Comment.Group minimal>\r\n          <Header as=\"h3\" dividing icon=\"comments\">\r\n            Comments added to this courses\r\n          </Header>\r\n\r\n          <Comment>\r\n            <Comment.Avatar\r\n              as=\"a\"\r\n              src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\"\r\n            />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">Matt</Comment.Author>\r\n              <Comment.Metadata>\r\n                <span>Today at 5:42PM</span>\r\n              </Comment.Metadata>\r\n              <Comment.Text>How artistic!</Comment.Text>\r\n              <Comment.Actions>\r\n                <a>Reply</a>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Comment>\r\n            <Comment.Avatar\r\n              as=\"a\"\r\n              src=\"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\"\r\n            />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">Elliot Fu</Comment.Author>\r\n              <Comment.Metadata>\r\n                <span>Yesterday at 12:30AM</span>\r\n              </Comment.Metadata>\r\n              <Comment.Text>\r\n                <p>\r\n                  This has been very useful for my research. Thanks as well!\r\n                </p>\r\n              </Comment.Text>\r\n              <Comment.Actions>\r\n                <a>Reply</a>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n\r\n            <Comment.Group>\r\n              <Comment>\r\n                <Comment.Avatar\r\n                  as=\"a\"\r\n                  src=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\"\r\n                />\r\n                <Comment.Content>\r\n                  <Comment.Author as=\"a\">Jenny Hess</Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <span>Just now</span>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>Elliot you are always so right :)</Comment.Text>\r\n                  <Comment.Actions>\r\n                    <a>Reply</a>\r\n                  </Comment.Actions>\r\n                </Comment.Content>\r\n              </Comment>\r\n            </Comment.Group>\r\n          </Comment>\r\n\r\n          <Comment>\r\n            <Comment.Avatar\r\n              as=\"a\"\r\n              src=\"https://react.semantic-ui.com/images/avatar/small/joe.jpg\"\r\n            />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">Joe Henderson</Comment.Author>\r\n              <Comment.Metadata>\r\n                <span>5 days ago</span>\r\n              </Comment.Metadata>\r\n              <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n              <Comment.Actions>\r\n                <a>Reply</a>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Form reply>\r\n            <Form.TextArea />\r\n            <Button\r\n              content=\"Add Reply\"\r\n              labelPosition=\"left\"\r\n              icon=\"edit\"\r\n              primary\r\n            />\r\n          </Form>\r\n        </Comment.Group>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CommentChat\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\answer\\EditAnswer.js",["821","822","823","824","825","826","827"],"import React, { useEffect } from \"react\";\r\nimport { Button, Form, TextArea, Modal, Icon } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { AddAnswersApi } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchQuestions } from \"../../redux/slices/questionslice\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport { fetchAnswers } from \"../../redux/slices/answerslice\";\r\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\r\n\r\nexport default function EditAnswer(props) {\r\n  const answer = props.answerSelected;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [Images, setImages] = useState([]);\r\n  const updateImages = (newImages) => {\r\n    if (newImages === null) {\r\n      answer.Filee.forEach((element) => {\r\n        setImages(element);\r\n      });\r\n    } else {\r\n      //alert(\"hi\");\r\n      setUp(1);\r\n      setImages(newImages);\r\n    }\r\n  };\r\n\r\n  const [up, setUp] = useState(0);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Body: answer.Body,\r\n      Writerq: { _id: \"604e421a647d1719cb93d08e\" },\r\n      Filee: [],\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        if (Images.length !== 0) {\r\n          values.Filee = Images;\r\n        } else {\r\n          values.Filee = answer.Filee;\r\n        }\r\n\r\n        const res = await AddAnswersApi.putAnswers(values, answer._id);\r\n        if (Images.length != 0) {\r\n          setEnableUpload(true);\r\n        }\r\n        updateImages([]);\r\n        if (res.ok === 1) {\r\n          setEnableUpload(false);\r\n        }\r\n        dispatch(fetchAnswers(answer.Question._id));\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Icon name=\"edit\"></Icon>}\r\n    >\r\n      <Modal.Header>Update Your Answer</Modal.Header>\r\n      <Modal.Content>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Field\r\n            control={TextArea}\r\n            placeholder=\"write your answer here\"\r\n            label=\"Content\"\r\n            name=\"Body\"\r\n            value={formik.values.Body}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.Body}\r\n          />\r\n          <div style={{ float: \"right\", marginRight: \"5%\" }}>\r\n            <Button\r\n              style={{ maxHeight: \"40px\" }}\r\n              type=\"submit\"\r\n              content=\"Edit\"\r\n              icon=\"edit\"\r\n              color=\"red\"\r\n\r\n            />\r\n            <Button color=\"black\" onClick={() => setOpen(false) }>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ marginLeft: \"5%\" }}>\r\n              <FileUploadEdit\r\n                refreshFunction={updateImages}\r\n                listfile={answer.Filee}\r\n                Enbale={enableUpload}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions></Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Comment\\CommentComponent.js",["828","829","830","831","832","833"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Comment,\r\n  Form,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  fetchCommentsCourse,\r\n  selectComments,\r\n  fetchCommentsTask,\r\n} from \"../../redux/slices/commentslice\";\r\nimport { CommentsApi } from \"../../api/api\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport EditComment from \"./EditComment\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\n\r\nfunction CommentComponent(props) {\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (props.courseID !== undefined) {\r\n      dispatch(fetchCommentsCourse(props.courseID));\r\n    } else {\r\n      dispatch(fetchCommentsTask(props.taskID));\r\n    }\r\n  }, [dispatch]);\r\n  const [commentss, er] = useSelector(selectComments);\r\n  const [text, setText] = useState(\"\");\r\n  function handleOnEnter(text) {\r\n    console.log(\"enter\", text);\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Body: \" \",\r\n      Writer: { _id: \"\" + documentData._id },\r\n      Course: props.courseID,\r\n      Task: props.taskID,\r\n    },\r\n\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      values.Body = text;\r\n\r\n      try {\r\n        if (values.Body !== \" \") {\r\n          console.log(values.Task);\r\n\r\n          const res = await CommentsApi.postComments(values).then((data) => {\r\n            if (data.Course !== null) {\r\n              dispatch(fetchCommentsCourse(data.Course));\r\n            } else if (data.Task !== null) {\r\n              dispatch(fetchCommentsTask(data.Task));\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n  const deletecomment = async (idcomment) => {\r\n    try {\r\n      const res = await CommentsApi.deleteComments(idcomment);\r\n\r\n      if (props.courseID != null) {\r\n        console.log(\"course\");\r\n        dispatch(fetchCommentsCourse(props.courseID));\r\n      } else if (props.taskID != null) {\r\n        console.log(\"task\");\r\n        dispatch(fetchCommentsTask(props.taskID));\r\n      }\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Comment.Group size=\"small\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <Comment>\r\n            <Comment.Avatar as=\"a\" src={isAuth().picture}></Comment.Avatar>\r\n          </Comment>\r\n\r\n          <InputEmoji\r\n            onChange={setText}\r\n            cleanOnEnter\r\n            onEnter={handleOnEnter}\r\n            placeholder=\"Type a message\"\r\n          />\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            <Button\r\n              style={{ maxHeight: \"40px\" }}\r\n              type=\"submit\"\r\n              content=\"\"\r\n              icon=\"edit\"\r\n            />\r\n          </Form>\r\n        </div>\r\n        {Number(commentss.length) !== 0 && (\r\n          <Header as=\"h3\" dividing>\r\n            Comments\r\n          </Header>\r\n        )}\r\n\r\n        {commentss.map((commentt, index) => (\r\n          <Comment key={index}>\r\n            <Comment.Avatar as=\"a\" src={commentt.Writer.picture} />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">{commentt.Writer.name}</Comment.Author>\r\n              <Comment.Metadata>\r\n                <span>{commentt.Date}</span>\r\n              </Comment.Metadata>\r\n              <Comment.Text>{commentt.Body}</Comment.Text>\r\n              {commentt.Writer._id === documentData._id && (\r\n                <Comment.Actions>\r\n                  <Icon\r\n                    name=\"delete\"\r\n                    onClick={() => deletecomment(commentt._id)}\r\n                    color=\"red\"\r\n                  />\r\n                  <EditComment comment={commentt} />\r\n                </Comment.Actions>\r\n              )}\r\n            </Comment.Content>\r\n          </Comment>\r\n        ))}\r\n      </Comment.Group>\r\n    </div>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\nexport default CommentComponent;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\utlis\\FileUploadEdit.js",["834","835","836","837","838"],"import React, { useState, useEffect } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport {\r\n  Icon,\r\n  Segment,\r\n  Loader,\r\n  Tab,\r\n  Dimmer,\r\n  Message,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { AddquestionsApi } from \"../api/api\";\r\n\r\nfunction FileUploadEdit(props) {\r\n  const arr = [];\r\n  const [endloader, SetEndLoader] = useState(true);\r\n  const [loader, SetLoader] = useState(false);\r\n  useEffect(() => {\r\n    if (props.listfile != null) {\r\n      props.listfile.forEach((element) => {\r\n        arr.push(element);\r\n      });\r\n    }\r\n  });\r\n\r\n  const [hideshow, setetat] = useState(\"none\");\r\n\r\n  const [Images, setImages] = useState(arr);\r\n  var [fd, setfd] = useState(new FormData());\r\n\r\n  const onDrop = (files) => {\r\n    const file = [];\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    console.log(files);\r\n    files.forEach((f) => {\r\n      formData.append(\"files\", f);\r\n\r\n      console.log(formData.getAll(\"files\"));\r\n      arr.push(f.name);\r\n      props.refreshFunction([...Images, f.name]);\r\n    });\r\n    fd = formData;\r\n    setfd(formData);\r\n    setImages(arr);\r\n  };\r\n  useEffect(async () => {\r\n    // console.log(fd.getAll(\"files\"));\r\n    if (props.Enbale && endloader ) {\r\n      //save the Image we chose inside the Node Server\r\n\r\nconsole.log(props.Enbale);\r\nconsole.log(endloader);\r\n\r\n      SetLoader(true);\r\n      SetEndLoader(false);\r\n\r\n      const config = {\r\n        header: { \"content-type\": \"multipart/form-data\" },\r\n      };\r\n      const res = await AddquestionsApi.uploadFileQuestions(fd, config).then(\r\n        (response) => {\r\n          SetLoader(false);\r\n\r\n          if (response.data) {\r\n            setImages(response.data);\r\n            props.refreshFunction([...Images, response.data]);\r\n\r\n          } else {\r\n            alert(\"Failed to save the File in Server\");\r\n          }\r\n        }\r\n      );\r\n      console.log(res);\r\n    }\r\n  });\r\n\r\n  const onDelete = (image) => {\r\n    const currentIndex = Images.indexOf(image);\r\n\r\n    let newImages = [...Images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flexwrap\" }}>\r\n      <Dropzone onDrop={onDrop} multiple={true} maxSize={800000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: \"40px\",\r\n              height: \"40px\",\r\n              //   border: \"1px solid lightgray\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} />\r\n\r\n            <Label as=\"a\" onClick={() => setetat(\"flex\")}>\r\n              <div style={{ display: \"flex\" }}>\r\n                <Icon name=\"paperclip\" floated />\r\n                <p>Add</p>\r\n              </div>\r\n            </Label>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      <h3>old Files</h3>\r\n      {props.listfile.length === 0 && (\r\n        <Message color=\"brown\">Opps !! you didn't add files </Message>\r\n      )}\r\n      {props.listfile.map((image, index) => (\r\n        <Segment key={index} raised color=\"black\">\r\n          {(() => {\r\n            switch (image.split(\".\").pop()) {\r\n              case \"pdf\":\r\n                return <Icon name=\"file pdf\" color=\"white\" size=\"huge\" />;\r\n              case \"docx\":\r\n                return <Icon name=\"file word\" color=\"blue\" size=\"huge\" />;\r\n              case \"pptx\":\r\n                return <Icon name=\"file powerpoint\" color=\"red\" size=\"huge\" />;\r\n              case \"xlsx\":\r\n                return (\r\n                  <Icon name=\"file excel outline\" color=\"green\" size=\"huge\" />\r\n                );\r\n              case \"zip\":\r\n                return <Icon name=\"zip\" size=\"huge\" />;\r\n              case \"js\":\r\n                return <Icon name=\"js\" size=\"huge\" />;\r\n              case \"php\":\r\n                return <Icon name=\"zip\" size=\"huge\" />;\r\n              case \"txt\":\r\n                return <Icon name=\"file text\" size=\"huge\" />;\r\n\r\n              case \"jpg\":\r\n                return (\r\n                  <img\r\n                    style={{\r\n                      minWidth: \"50px\",\r\n                      width: \"50px\",\r\n                      height: \"50px\",\r\n                    }}\r\n                    src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${image}?alt=media`}\r\n                    alt={`scan`}\r\n                  />\r\n                );\r\n\r\n              case \"jpeg\":\r\n                return (\r\n                  <img\r\n                    style={{\r\n                      minWidth: \"50px\",\r\n                      width: \"50px\",\r\n                      height: \"50px\",\r\n                    }}\r\n                    src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${image}?alt=media`}\r\n                    alt={`scan`}\r\n                  />\r\n                );\r\n              case \"png\":\r\n                return (\r\n                  <img\r\n                    style={{\r\n                      minWidth: \"50px\",\r\n                      width: \"50px\",\r\n                      height: \"50px\",\r\n                    }}\r\n                    src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${image}?alt=media`}\r\n                    alt={`scan`}\r\n                  />\r\n                );\r\n\r\n              default:\r\n                return <Icon name=\"file\" color=\"red\" />;\r\n            }\r\n          })()}\r\n\r\n          <p\r\n            style={{\r\n              wordBreak: \"break-all\",\r\n            }}\r\n          >\r\n            {image}\r\n          </p>\r\n        </Segment>\r\n      ))}\r\n      <div\r\n        style={{\r\n          display: \"wrap\" + hideshow,\r\n        }}\r\n      >\r\n        <h3>All File</h3>\r\n\r\n        {Images.map((image, index) => (\r\n          <Segment\r\n            key={index}\r\n            raised\r\n            color=\"black\"\r\n            onClick={() => onDelete(image)}\r\n          >\r\n            {(() => {\r\n              switch (image.split(\".\").pop()) {\r\n                case \"pdf\":\r\n                  return <Icon name=\"file pdf\" color=\"white\" size=\"huge\" />;\r\n                case \"docx\":\r\n                  return <Icon name=\"file word\" color=\"blue\" size=\"huge\" />;\r\n                case \"pptx\":\r\n                  return (\r\n                    <Icon name=\"file powerpoint\" color=\"red\" size=\"huge\" />\r\n                  );\r\n                case \"xlsx\":\r\n                  return (\r\n                    <Icon name=\"file excel outline\" color=\"green\" size=\"huge\" />\r\n                  );\r\n                case \"zip\":\r\n                  return <Icon name=\"zip\" size=\"huge\" />;\r\n                case \"js\":\r\n                  return <Icon name=\"js\" size=\"huge\" />;\r\n                case \"php\":\r\n                  return <Icon name=\"zip\" size=\"huge\" />;\r\n                case \"txt\":\r\n                  return <Icon name=\"file text\" size=\"huge\" />;\r\n\r\n                case \"jpg\":\r\n                  return <Icon name=\"file image\" color=\"blue\" size=\"huge\" />;\r\n\r\n                case \"jpeg\":\r\n                  return <Icon name=\"file image\" color=\"blue\" size=\"huge\" />;\r\n\r\n                case \"png\":\r\n                  return <Icon name=\"file image\" color=\"blue\" size=\"huge\" />;\r\n\r\n                default:\r\n                  return <Icon name=\"file\" color=\"red\" />;\r\n              }\r\n            })()}\r\n\r\n            <p\r\n              style={{\r\n                wordBreak: \"break-all\",\r\n              }}\r\n            >\r\n              {image}\r\n            </p>\r\n          </Segment>\r\n        ))}\r\n\r\n        {loader ? (\r\n          <Dimmer active inverted>\r\n            <Loader inline=\"centered\">Preparing Files ... please wait !</Loader>\r\n          </Dimmer>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUploadEdit;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\FormCourses.js",["839","840","841","842","843","844","845","846","847","848"],"import React from \"react\";\r\n\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\n\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport {\r\n  Button,\r\n  Dimmer,\r\n  Dropdown,\r\n  Form,\r\n  Header,\r\n  Loader,\r\n  Message,\r\n  Select,\r\n} from \"semantic-ui-react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  AddCourses,\r\n  RetrieveCoursesByIdClass,\r\n} from \"../../redux/slices/Courses\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\n\r\nimport { useParams } from \"react-router\";\r\nimport { isAuth, signout } from \"../../helpers/auth\";\r\nimport { notificationsApi } from \"../../api/api\";\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\n\r\nfunction FormCourses(props) {\r\n  const socket = io(ENDPOINT);\r\n  const seances = useSelector((state) => state.seance.seance);\r\n  const { id } = useParams();\r\n  const [titre, SetTitre] = useState(\"\");\r\n  const [description, SetDescription] = useState(\"\");\r\n  const [idSance, SetIdSeance] = useState(2);\r\n  const [dateCreation, SetDateCreation] = useState(Date.now());\r\n  const [multiple_resources, SetMultiple_resources] = useState([]);\r\n  const [formClassName, SetFormClassName] = useState(\"\");\r\n  const [formSuccessMessage, SetFormSuccessMessage] = useState(\"\");\r\n  const [formErrorMessage, SetFormErrorMessage] = useState(\"\");\r\n  const [selectedItem, SetSelectedItem] = useState();\r\n  const [loader, SetLoader] = useState(false);\r\n  const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const idClass = CurrentClass._id;\r\n  const members = [];\r\n  for (let i = 0; i < CurrentClass.classUsers.length; i++) {\r\n    members.push(CurrentClass.classUsers[i]._id);\r\n  }\r\n  const SeanceOptions = [{ key: Number, text: \"\", value: \"\" }];\r\n  const dispatch = useDispatch();\r\n  for (let i = 0; i < seances.length; i++) {\r\n    const option = {\r\n      key: seances[i]._id,\r\n      text: seances[i].titre,\r\n      value: seances[i].titre,\r\n    };\r\n\r\n    SeanceOptions.push(option);\r\n  }\r\n\r\n  const [notif] = useState({\r\n    Message: \"new Courses was added check your timeline ! !\",\r\n    Owner: [],\r\n    Course: { _id: \"\" },\r\n  });\r\n\r\n  const handleChangeSelect = async (e) => {\r\n    console.log(e.target.value);\r\n    await SetSelectedItem(e.target.value);\r\n    await console.log(selectedItem);\r\n  };\r\n  const handleTitreChanges = (e) => {\r\n    console.log(id);\r\n    SetTitre(e.target.value);\r\n  };\r\n  const handleDescriptionChanges = (e) => {\r\n    SetDescription(e.target.value);\r\n  };\r\n  const AddCourse = (e) => {\r\n    console.log(members);\r\n    e.preventDefault();\r\n    const idOwner = isAuth()._id;\r\n    SetLoader(true);\r\n    const rep = dispatch(\r\n      AddCourses(\r\n        selectedItem,\r\n        titre,\r\n        description,\r\n        multiple_resources,\r\n        idOwner,\r\n        idClass\r\n      )\r\n    )\r\n      .then((response) => {\r\n        SetLoader(false);\r\n        console.log(response);\r\n        notif.Owner = members;\r\n        notif.Course = response.result._id;\r\n        const res2 = notificationsApi.addNotification(notif);\r\n        socket.emit(\"add-new-notification\", members);\r\n\r\n        console.log(response);\r\n\r\n        const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n        console.log(CurrentClass._id);\r\n        dispatch(RetrieveCoursesByIdClass(CurrentClass._id));\r\n        console.log(response);\r\n        SetFormClassName(\"success\");\r\n        SetFormSuccessMessage(response.msg);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          if (err.response.data) {\r\n            SetFormClassName(\"warning\");\r\n            SetFormErrorMessage(err.response.msg);\r\n          }\r\n        } else {\r\n          SetFormClassName(\"warning\");\r\n          SetFormErrorMessage(\"Something wen wrong \" + err);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChangeStatus = ({ meta, file }, status) => {\r\n    console.log(status, meta, file);\r\n\r\n    if (status === \"done\") {\r\n      SetMultiple_resources(multiple_resources.concat(file));\r\n    }\r\n    if (status === \"removed\") {\r\n      let multiple_resource = multiple_resources.slice();\r\n      multiple_resource = multiple_resources.filter((u) => {\r\n        return u !== file;\r\n      });\r\n      SetMultiple_resources(multiple_resource);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form className={formClassName} onSubmit={AddCourse}>\r\n        <Form.Input\r\n          label=\"Titre\"\r\n          type=\"text\"\r\n          placeholder={\"Seance 1\"}\r\n          name=\"Titre\"\r\n          maxLength=\"40\"\r\n          required\r\n          value={titre}\r\n          onChange={handleTitreChanges}\r\n        />\r\n        <Form.Field\r\n          control={TextareaAutosize}\r\n          label=\"Description\"\r\n          type=\"text\"\r\n          placeholder=\"In this workshop we will learn ...\"\r\n          name=\"Description\"\r\n          required\r\n          value={description}\r\n          onChange={handleDescriptionChanges}\r\n        />\r\n        <Header as=\"h5\" icon=\"file alternate outline\" content=\"Select Seance\" />\r\n\r\n        <select value={selectedItem} onChange={handleChangeSelect}>\r\n          {SeanceOptions.map((c, index) => (\r\n            <option key={index} value={c.key}>\r\n              {c.text}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <Header as=\"h5\" icon=\"images outline\" content=\"Select Files\" />\r\n\r\n        <Dropzone\r\n          styles={{ dropzone: { minHeight: 120, maxHeight: 250 } }}\r\n          onChangeStatus={handleChangeStatus}\r\n        />\r\n        <br />\r\n        {loader ? (\r\n          <Dimmer active inverted>\r\n            <Loader inline=\"centered\">Preparing Files ... please wait !</Loader>\r\n          </Dimmer>\r\n        ) : (\r\n          <>\r\n            <Message\r\n              success\r\n              color=\"green\"\r\n              header=\"Nice one! 📒 📕 📚 📖\"\r\n              content={formSuccessMessage}\r\n            />\r\n            <Message\r\n              warning\r\n              color=\"yellow\"\r\n              header=\"Woah! 😱 😨\"\r\n              content={formErrorMessage}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <br />\r\n        <Button color=\"black\" floated=\"right\">\r\n          Add\r\n        </Button>\r\n        <br />\r\n        <br />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormCourses;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\FormSeance.js",["849","850","851","852"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, Message } from \"semantic-ui-react\";\r\nimport {\r\n  AddSeance,\r\n  EditSeances,\r\n  GetSeancesById,\r\n  updateById,\r\n} from \"../../redux/slices/Seance\";\r\n\r\nfunction FormSeance(props) {\r\n  const [titre, SetTitre] = useState(\"\");\r\n  const [description, SetDescription] = useState(\"\");\r\n \r\n  const [dateCreation, SetDateCreation] = useState(Date.now());\r\n  const [formClassName, SetFormClassName] = useState(\"\");\r\n  const [formSuccessMessage, SetFormSuccessMessage] = useState(\"\");\r\n  const [formErrorMessage, SetFormErrorMessage] = useState(\"\");\r\n  const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n\r\n  const seanceId = props.seanceId;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (seanceId) {\r\n      console.log(seanceId);\r\n      dispatch(GetSeancesById(seanceId)).then((response) => {\r\n        console.log(response);\r\n        SetTitre(response.payload.titre);\r\n        SetDescription(response.payload.description);\r\n      });\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleTitreChanges = (e) => {\r\n    SetTitre(e.target.value);\r\n  };\r\n  const handleDescriptionChanges = (e) => {\r\n    SetDescription(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    // Prevent browser refresh\r\n    e.preventDefault();\r\n\r\n    // Acknowledge that if the user id is provided, we're updating via PUT\r\n    // Otherwise, we're creating a new data via POST\r\n    if (seanceId) {\r\n      const seance = {\r\n        titre: titre,\r\n        description: description,\r\n        idClass: CurrentClass._id,\r\n        dateCreation: dateCreation,\r\n        _id: seanceId,\r\n      };\r\n\r\n      dispatch(EditSeances(seance))\r\n        .then((response) => {\r\n          SetFormClassName(\"success \");\r\n          SetFormSuccessMessage(response.payload.msg);\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) {\r\n            if (err.response.data) {\r\n              SetFormClassName(\"warning\");\r\n              SetFormErrorMessage(err.response.payload.msg);\r\n            }\r\n          } else {\r\n            SetFormClassName(\"warning\");\r\n            SetFormErrorMessage(\"something wen wrong \" + err);\r\n          }\r\n        });\r\n    }\r\n\r\n    if (!seanceId) {\r\n      const seance = {\r\n        titre: titre,\r\n        description: description,\r\n        idClass: CurrentClass._id,\r\n        dateCreation: dateCreation,\r\n      };\r\n      console.log(seance);\r\n      dispatch(AddSeance(seance))\r\n        .then((response) => {\r\n          SetFormClassName(\"success\");\r\n          SetFormSuccessMessage(response.payload.msg);\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) {\r\n            if (err.response.data) {\r\n              SetFormClassName(\"warning\");\r\n              SetFormErrorMessage(err.response.payload.msg);\r\n            }\r\n          } else {\r\n            SetFormClassName(\"warning\");\r\n            SetFormErrorMessage(\"something wen wrong \" + err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form className={formClassName} onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          label=\"Titre\"\r\n          type=\"text\"\r\n          placeholder=\"Seance 1\"\r\n          name=\"Titre\"\r\n          maxLength=\"40\"\r\n          required\r\n          value={titre}\r\n          onChange={handleTitreChanges}\r\n        />\r\n        <Form.TextArea\r\n          label=\"Description\"\r\n          type=\"TextArea\"\r\n          placeholder=\"In this workshop we will learn ...\"\r\n          name=\"Description\"\r\n          maxLength=\"5000\"\r\n          required\r\n          value={description}\r\n          onChange={handleDescriptionChanges}\r\n        />\r\n        <Message\r\n          success\r\n          color=\"green\"\r\n          header=\"Nice one! 📒 📕 📚 📖\"\r\n          content={formSuccessMessage}\r\n        />\r\n        <Message\r\n          warning\r\n          color=\"yellow\"\r\n          header=\"Woah! 😱 😨\"\r\n          content={formErrorMessage}\r\n        />\r\n        <Button color=\"green\" floated=\"right\">\r\n          Save\r\n        </Button>\r\n        <br /> {/* Yikes! Deal with Semantic UI React! */}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSeance;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\FormCoursesEdit.js",["853","854","855","856","857","858","859","860","861","862"],"import React from \"react\";\r\n\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport {\r\n  Button,\r\n  Dimmer,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  List,\r\n  Loader,\r\n  Message,\r\n  Table,\r\n} from \"semantic-ui-react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  DeleteResources,\r\n  GetCoursesById,\r\n  RetrieveCoursesByIdClass,\r\n  UpdateCourses,\r\n  UpdateResources,\r\n} from \"../../redux/slices/Courses\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction FormCoursesEdit(props) {\r\n  const seances = useSelector((state) => state.seance.seance);\r\n  const [titre, SetTitre] = useState(\"\");\r\n  const [description, SetDescription] = useState(\"\");\r\n  const [idSance, SetIdSeance] = useState(2);\r\n  const [dateCreation, SetDateCreation] = useState(Date.now());\r\n  const [multiple_resources, SetMultiple_resources] = useState([]);\r\n  const [formClassName, SetFormClassName] = useState(\"\");\r\n  const [formSuccessMessage, SetFormSuccessMessage] = useState(\"\");\r\n  const [formErrorMessage, SetFormErrorMessage] = useState(\"\");\r\n  const [selectedItem, SetSelectedItem] = useState(seances[0]._id);\r\n  const [loader, SetLoader] = useState(false);\r\n\r\n  const SeanceOptions = [{ key: Number, text: \"\", value: \"\" }];\r\n\r\n  const coursesId = props.coursesId;\r\n  const dispatch = useDispatch();\r\n  const Resources = useSelector((state) => state.courses.Resources);\r\n\r\n  for (let i = 0; i < seances.length; i++) {\r\n    const option = {\r\n      key: seances[i]._id,\r\n      text: seances[i].titre,\r\n      value: seances[i].titre,\r\n    };\r\n\r\n    SeanceOptions.push(option);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const test = dispatch(GetCoursesById(coursesId)).then((response) => {\r\n      console.log(response);\r\n      SetTitre(response.payload.titre);\r\n      SetDescription(response.payload.description);\r\n      SetSelectedItem(response.payload.idSeance);\r\n\r\n      console.log(multiple_resources);\r\n    });\r\n    console.log(test);\r\n  }, [dispatch]);\r\n\r\n  const handleTitreChanges = (e) => {\r\n    e.preventDefault();\r\n    SetTitre(e.target.value);\r\n  };\r\n  const handleDescriptionChanges = (e) => {\r\n    e.preventDefault();\r\n    SetDescription(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(\"this is test\");\r\n    console.log(Resources);\r\n    dispatch(\r\n      UpdateCourses(coursesId, titre, description, Resources, selectedItem)\r\n    )\r\n      .then((response) => {\r\n        const CurrentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n        console.log(CurrentClass._id);\r\n        dispatch(RetrieveCoursesByIdClass(CurrentClass._id));\r\n        console.log(response);\r\n        SetFormClassName(\"success\");\r\n        SetFormSuccessMessage(response.msg);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          if (err.response.data) {\r\n            SetFormClassName(\"warning\");\r\n            SetFormErrorMessage(err.response.msg);\r\n          }\r\n        } else {\r\n          SetFormClassName(\"warning\");\r\n          SetFormErrorMessage(\"Something wen wrong \" + err);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleRemoveUpload = (e, res) => {\r\n    console.log(selectedItem);\r\n\r\n    console.log(res);\r\n    dispatch(DeleteResources(res));\r\n    console.log(\"Trigger remove photo\");\r\n    console.log(Resources);\r\n  };\r\n\r\n  const handleChangeStatus = async ({ meta, file }, status) => {\r\n    console.log(status, meta, file);\r\n\r\n    if (status === \"done\") {\r\n      SetLoader(true);\r\n      var formData = new FormData();\r\n      formData.append(\"multiple_resources\", file);\r\n      await axios\r\n        .post(\r\n          \"https://closer-server.herokuapp.com/courses/api/upload\",\r\n          formData\r\n        )\r\n        .then((response) => {\r\n          SetLoader(false);\r\n          console.log(response.data.result.reqFiles[0]);\r\n          dispatch(UpdateResources(response.data.result.reqFiles[0]));\r\n        });\r\n      console.log(\"Trigger update photo\");\r\n      console.log(Resources);\r\n    }\r\n    if (status === \"removed\") {\r\n      let multiple_resource = multiple_resources.slice();\r\n      multiple_resource = multiple_resource.filter((u) => {\r\n        return u !== file;\r\n      });\r\n      SetMultiple_resources(multiple_resource);\r\n    }\r\n  };\r\n\r\n  const handleChangeSelect = async (e) => {\r\n    console.log(e.target.value);\r\n    await SetSelectedItem(e.target.value);\r\n    await console.log(selectedItem);\r\n  };\r\n\r\n  const Preview = ({ meta }) => {\r\n    const { name, percent, status } = meta;\r\n    return <span></span>;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form className={formClassName}>\r\n        <Form.Input\r\n          label=\"Titre\"\r\n          type=\"text\"\r\n          placeholder=\"Seance 1\"\r\n          name=\"Titre\"\r\n          maxLength=\"40\"\r\n          required\r\n          value={titre}\r\n          onChange={handleTitreChanges}\r\n        />\r\n        <Form.Field\r\n          control={TextareaAutosize}\r\n          label=\"Description\"\r\n          type=\"text\"\r\n          placeholder=\"In this workshop we will learn ...\"\r\n          name=\"Description\"\r\n          maxLength=\"5000\"\r\n          required\r\n          value={description}\r\n          onChange={handleDescriptionChanges}\r\n        />\r\n\r\n        <br />\r\n\r\n        <Header as=\"h5\" icon=\"file alternate outline\" content=\"Select Seance\" />\r\n        <select\r\n          defaultValue={selectedItem}\r\n          value={selectedItem}\r\n          onChange={handleChangeSelect}\r\n        >\r\n          {SeanceOptions.map((c, index) => (\r\n            <option key={index} value={c.key}>\r\n              {c.text}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <Header as=\"h5\" icon=\"images outline\" content=\"Select Files\" />\r\n\r\n        <Dropzone\r\n          inputContent=\"Drop Files here or click to choose ...\"\r\n          onChangeStatus={handleChangeStatus}\r\n          canCancel={false}\r\n          canRemove={false}\r\n          canRestart={false}\r\n          PreviewComponent={Preview}\r\n        />\r\n        <br />\r\n        <Grid stackable>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}></Grid.Column>\r\n            <Grid.Column width={12}>\r\n              <List divided verticalAlign=\"middle\">\r\n                {Resources.map((files, index) => (\r\n                  <List.Item>\r\n                    <List.Content floated=\"right\">\r\n                      <Button\r\n                        circular\r\n                        size=\"small\"\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        onClick={(e) => {\r\n                          handleRemoveUpload(e, files.url);\r\n                        }}\r\n                      ></Button>\r\n                    </List.Content>\r\n                    {files.type === \"image/png\" ||\r\n                    files.type === \"image/jpg\" ||\r\n                    files.type === \"image/jpeg\" ||\r\n                    files.type === \"image/gif\" ? (\r\n                      <Image src={files.url} rounded size=\"mini\" />\r\n                    ) : files.type === \"application/pdf\" ? (\r\n                      <Image\r\n                        rounded\r\n                        size=\"mini\"\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/files-type/\" +\r\n                          \"pdf\" +\r\n                          \".png\"\r\n                        }\r\n                      />\r\n                    ) : files.type ===\r\n                      \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ? (\r\n                      <Image\r\n                        rounded\r\n                        size=\"mini\"\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/files-type/\" +\r\n                          \"docx\" +\r\n                          \".png\"\r\n                        }\r\n                      />\r\n                    ) : files.type ===\r\n                      \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" ? (\r\n                      <Image\r\n                        rounded\r\n                        size=\"mini\"\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/files-type/\" +\r\n                          \"pptx\" +\r\n                          \".png\"\r\n                        }\r\n                      />\r\n                    ) : files.type === \"video/mp4\" ? (\r\n                      <Image\r\n                        rounded\r\n                        size=\"mini\"\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/files-type/\" +\r\n                          \"mp4\" +\r\n                          \".png\"\r\n                        }\r\n                      />\r\n                    ) : files.type === \"audio/mpeg\" ? (\r\n                      <Image\r\n                        rounded\r\n                        size=\"mini\"\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/files-type/\" +\r\n                          \"mp3\" +\r\n                          \".png\"\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <Image\r\n                        rounded\r\n                        size=\"mini\"\r\n                        src={\r\n                          process.env.PUBLIC_URL + \"/files-type/\" + \"noFile.png\"\r\n                        }\r\n                      />\r\n                    )}\r\n\r\n                    <List.Content>\r\n                      <Header as=\"h4\" color=\"red\">\r\n                        {files.originalname.slice(0, 20)}\r\n                      </Header>\r\n                      <highlight>\r\n                        <strong>{files.type.slice(0, 40)}</strong>\r\n                      </highlight>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={2}></Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n\r\n        {loader ? (\r\n          <Dimmer active inverted>\r\n            <Loader inline=\"centered\">Preparing Files ... please wait !</Loader>\r\n          </Dimmer>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Message\r\n          success\r\n          color=\"green\"\r\n          header=\"Nice one! 📒 📕 📚 📖\"\r\n          content={formSuccessMessage}\r\n        />\r\n        <Message\r\n          warning\r\n          color=\"yellow\"\r\n          header=\"Woah! 😱 😨\"\r\n          content={formErrorMessage}\r\n        />\r\n        <br />\r\n\r\n        <Button color=\"black\" floated=\"right\" onClick={handleSubmit}>\r\n          Save\r\n        </Button>\r\n        <br />\r\n        <br />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormCoursesEdit;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Comment\\EditComment.js",["863","864","865","866","867","868","869","870","871","872"],"import { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Icon, Modal, Button, Form, TextArea } from \"semantic-ui-react\";\r\nimport { CommentsApi } from \"../../api/api\";\r\nimport * as Yup from \"yup\";\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport {\r\n  fetchCommentsCourse,\r\n  fetchCommentsTask,\r\n  selectComments,\r\n} from \"../../redux/slices/commentslice\";\r\nfunction EditComment(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchCommentsCourse(props.courseID));\r\n  }, [dispatch]);\r\n  const [commentss, er] = useSelector(selectComments);\r\n  const [text, setText] = useState(\"\");\r\n  function handleOnEnter(text) {\r\n    console.log(\"enter\", text);\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      Body: \" \" + props.comment.Body,\r\n      Writer: { _id: \"\" + props.comment.Writer._id },\r\n      Course: { _id: \"\" + props.comment.Course },\r\n      task: { _id: \"\" + props.comment.Task },\r\n    },\r\n    validationSchema: yupSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        alert(values.Body);\r\n        const res = await CommentsApi.putComments(values, props.comment._id);\r\n        if (props.comment.Task  == null) {\r\n          dispatch(fetchCommentsCourse(props.comment.Course));\r\n        } else {\r\n          dispatch(fetchCommentsTask(props.comment.Task));\r\n        }\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={<Icon name=\"edit\"></Icon>}\r\n      >\r\n        <Modal.Header>Update Your Answer</Modal.Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Field\r\n              control={TextArea}\r\n              placeholder=\"write your answer here\"\r\n              label=\"Content\"\r\n              name=\"Body\"\r\n              value={formik.values.Body}\r\n              onChange={formik.handleChange}\r\n              error={formik.errors.Body}\r\n            />\r\n            <Button type=\"submit\" color=\"red\">\r\n              Update!\r\n            </Button>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => setOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nconst yupSchema = Yup.object({\r\n  Body: Yup.string().required(\"Champs requis!\"),\r\n});\r\nexport default EditComment;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\AppointmentTooltip.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\Appointment.js",["873"],"import React from 'react';\r\nimport Query from 'devextreme/data/query';\r\nimport { resourcesData } from '../../api/data';\r\n\r\nfunction getSectionById(id) {\r\n  return Query(resourcesData).filter(['id', id]).toArray()[0];\r\n}\r\nexport default function Appointment(model) {\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const { appointmentData } = model.data;\r\n const dd = getSectionById(appointmentData.sectionId) || {};\r\n  return (\r\n    <div style={{height:100}} >\r\n      <div>Text: <strong>{appointmentData.text}</strong></div>\r\n      <div>\r\n      Description: <strong>{ appointmentData.description }</strong>\r\n      </div>\r\n      <div>\r\n      Owner: <strong>{ appointmentData.postOwner.name }</strong>\r\n      </div>\r\n      <div>\r\n      Type: <strong>{ dd.text }</strong>\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}","C:\\Smart-Virtual-Classroom\\client\\src\\api\\data.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\coursesAndSeances\\ModalConfirmDelete.js",["874","875","876","877"],"import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Dropdown, Feed, Icon, Modal } from \"semantic-ui-react\";\r\nimport { DeleteSeance } from \"../../redux/slices/Seance\";\r\n\r\nfunction ModalConfirmDelete(props) {\r\n  const [modalOpen, SetModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpen = (e) => SetModalOpen(true);\r\n  const handleClose = (e) => SetModalOpen(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    let params = e.target.getAttribute(\"seanceid\");\r\n\r\n    dispatch(DeleteSeance(params))\r\n      .then((response) => {\r\n        handleClose();\r\n        //props.onSeanceDeleted(response.data.result);\r\n        //this.props.socket.emit(\"delete\", response.data.result);\r\n      })\r\n      .catch((err) => {\r\n        handleClose();\r\n        throw err;\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        trigger={\r\n          <Dropdown.Item onClick={handleOpen} icon=\"delete\" text=\"Delete\" />\r\n        }\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <p>\r\n            Are you sure you want to delete{\" \"}\r\n            <strong>{props.seance.titre}</strong>?\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            seanceid={props.seance._id}\r\n            color=\"red\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"black\">\r\n            No\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalConfirmDelete;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\AddClassComponent.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\ArchieveClassComponent.js",["878"],"import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Dropdown, Modal } from \"semantic-ui-react\";\r\nimport {  fetchclass,fetchActiveClass,fetchclassArchived } from \"../../redux/slices/classsline\";\r\nimport { AddclassApi} from \"../../api/api\";\r\nexport default function ArchieveClassComponent(props) {\r\n  const [modalOpen, SetModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const handleOpen = (e) => SetModalOpen(true);\r\n  const handleClose = (e) => SetModalOpen(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    let params = e.target.getAttribute(\"classid\");\r\n    let error = { visible: false, message: \"\" };\r\n    try {\r\n       await AddclassApi.updateClassActive(params);\r\n      dispatch(fetchclass(documentData.role, documentData._id,\"Active\"));\r\n      dispatch(fetchclassArchived(documentData.role, documentData._id,\"Archive\"));\r\n      dispatch(fetchActiveClass(documentData._id));\r\n      handleClose();\r\n    } catch (err) {\r\n      error = {\r\n        visible: true,\r\n        message: JSON.stringify(err.errors, null, 2),\r\n      };\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        trigger={\r\n          <Dropdown.Item onClick={handleOpen} icon=\"archive\" text=\"Archive\" />\r\n        }\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <p>\r\n            Are you sure you want to archive class named{\" \"}\r\n            <strong>{props.classes.className}</strong> ?\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            classid={props.classes._id}\r\n            color=\"red\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"black\">\r\n            No\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\EditComponent.js",["879","880","881","882","883","884","885"],"import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Dropdown, Feed, Icon, Modal } from \"semantic-ui-react\";\r\nimport { DeleteSeance } from \"../../redux/slices/Seance\";\r\nimport { Form, Input, TextArea } from \"semantic-ui-react\";\r\nimport { addClasss, updateClasss,fetchclass } from \"../../redux/slices/classsline\";\r\nimport { AddclassApi } from \"../../api/api\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst options = [\r\n  { key: 1, text: \"red\", value: \"red\" },\r\n  { key: 2, text: \"blue\", value: \"blue\" },\r\n  { key: 3, text: \"yellow\", value: \"yellow\" },\r\n  { key: 4, text: \"grey\", value: \"grey\" },\r\n  { key: 5, text: \"pink\", value: \"pink\" },\r\n  { key: 6, text: \"green\", value: \"green\" },\r\n  { key: 7, text: \"olive\", value: \"olive\" },\r\n  { key: 8, text: \"teal\", value: \"teal\" },\r\n  { key: 9, text: \"violet\", value: \"violet\" },\r\n  { key: 10, text: \"purple\", value: \"purple\" },\r\n  { key: 11, text: \"brown\", value: \"brown\" },\r\n  { key: 12, text: \"black\", value: \"black\" },\r\n  { key: 13, text: \"white\", value: \"white\" },\r\n];\r\n\r\nexport default function ArchieveClassComponent(props) {\r\n  const [modalOpen, SetModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpen = (e) => SetModalOpen(true);\r\n  const handleClose = (e) => SetModalOpen(false);\r\n  let [color, setClassColor] = useState();\r\n  const selectedClass = (data) => {\r\n    console.log(data.target.innerText);\r\n    setClassColor(data.target.innerText);\r\n  };\r\n  color = props.classes.classColor;\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  let error = { visible: false, message: \"\" };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      className: props.classes.className,\r\n      classSection: props.classes.classSection,\r\n      classLevel: props.classes.classLevel,\r\n      classDescription: props.classes.classDescription,\r\n      classColor: props.classes.classColor,\r\n      classStatus: props.classes.classStatus,\r\n    },\r\n    validationSchema: Yup.object({\r\n      className: Yup.string().required(),\r\n      classSection: Yup.string()\r\n        .required()\r\n        .matches(\r\n          /^[1-5]([A-Z])\\w+$/,\r\n          \"first letter of classSection must be in 1-5\"\r\n        ),\r\n      classLevel: Yup.string(),\r\n      classDescription: Yup.string().required(),\r\n    }),\r\n    onSubmit: async (formData) => {\r\n      console.log(formData);\r\n      try {\r\n        const lvl = formData.classSection.substring(0, 1);\r\n        if (color === undefined) color = \"red\";\r\n\r\n        const data = {\r\n          className: formData.className,\r\n          classSection: formData.classSection,\r\n          classLevel: lvl,\r\n          classDescription: formData.classDescription,\r\n          classOwner: documentData._id,\r\n          classColor: color,\r\n          classStatus: \"Active\",\r\n        };\r\n        const res = await AddclassApi.updateClass(props.classes._id, data);\r\n        console.log(res);\r\n        dispatch(fetchclass(documentData.role, documentData._id,\"Active\"));\r\n        handleClose();\r\n      } catch (err) {\r\n        error = {\r\n          visible: true,\r\n          message: JSON.stringify(err.errors, null, 2),\r\n        };\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        trigger={<Dropdown.Item onClick={handleOpen} icon=\"edit\" text=\"Edit\" />}\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        dimmer=\"inverted\"\r\n      >\r\n        <Modal.Header>Edit Class</Modal.Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Class Name\"\r\n                placeholder=\"Class Name\"\r\n                name=\"className\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.className}\r\n                error={formik.errors.className}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Class Section\"\r\n                placeholder=\"Class Section\"\r\n                name=\"classSection\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.classSection}\r\n                error={formik.errors.classSection}\r\n              />\r\n              <Form.Field\r\n                control={Dropdown}\r\n                label=\"Class Color\"\r\n                placeholder=\"Class Color\"\r\n                name=\"classColor\"\r\n                clearable\r\n                selection\r\n                options={options}\r\n                onChange={selectedClass}\r\n                value={color}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Class Level\"\r\n                placeholder=\"Class Level\"\r\n                name=\"classLevel\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.classSection.substring(0, 1)}\r\n                error={formik.errors.classLevel}\r\n              />\r\n            </Form.Group>\r\n            <Form.Field\r\n              control={TextArea}\r\n              label=\"Class Description\"\r\n              placeholder=\"Class Description\"\r\n              name=\"classDescription\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.classDescription}\r\n              error={formik.errors.classDescription}\r\n            />\r\n            <Form.Group>\r\n              {error.visible && <Form.Error>{error.message}</Form.Error>}\r\n            </Form.Group>\r\n\r\n            <Button.Group floated=\"right\">\r\n              <Button onClick={() => handleClose()}>Cancel</Button>\r\n              <Button.Or />\r\n              <Button color=\"red\" type=\"submit\">\r\n                Update\r\n              </Button>\r\n            </Button.Group>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Content></Modal.Content>\r\n        <Modal.Actions></Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\InvitationClassComonent.js",["886","887","888","889","890","891"],"import { Grid, Image, Label, Segment, Button, Card } from \"semantic-ui-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  fetchActiveClass,\r\n  fetchRequestClass,\r\n  fetchInvitationclass,\r\n  selectinvitationclass,\r\n  fetchclass,\r\n} from \"./../../redux/slices/classsline\";\r\nimport { ClassInvitationApi,AddclassApi } from \"../../api/api\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function InvitationClassComonent() {\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const [classinvit, err] = useSelector(selectinvitationclass);\r\n \r\n \r\n \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchInvitationclass(documentData._id));\r\n  }, [dispatch]);\r\n\r\n  const Decline = async (idq) => {\r\n    try {\r\n      const res = await ClassInvitationApi.deleteClassInvitation(idq);\r\n      dispatch(fetchInvitationclass(documentData._id));\r\n      dispatch(fetchActiveClass(documentData._id));\r\n      dispatch(fetchRequestClass(documentData._id));\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const Approve = async (idinviation,idclass,email) => {\r\n    try {\r\n      const res = await AddclassApi.addUserToClass(idclass,email);\r\n      const res2 = await ClassInvitationApi.deleteClassInvitation(idinviation);\r\n      dispatch(fetchInvitationclass(documentData._id));\r\n      dispatch(fetchActiveClass(documentData._id));\r\n      dispatch(fetchRequestClass(documentData._id));\r\n      dispatch(fetchclass(documentData.role, documentData._id,\"Active\"));\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n \r\n  return (\r\n    <div>\r\n      <Grid columns={1}>\r\n        <Grid.Column>\r\n          <Segment raised>\r\n            <Label as=\"a\" color=\"teal\" ribbon>\r\n              Class Invitation\r\n            </Label>\r\n            {classinvit?.map((co, i) => (\r\n              <Grid.Column key={i}>\r\n                <Card.Group>\r\n                  <Card color='teal' >\r\n                    <Card.Content>\r\n                      <Image\r\n                        floated=\"right\"\r\n                        size=\"mini\"\r\n                        src={co.userOb.picture}\r\n                      />\r\n                      <Card.Header>{co.classOb.className}</Card.Header>\r\n                      <Card.Meta>{co.classOb.classSection}</Card.Meta>\r\n                      <Card.Description>{co.classOb.classDescription}</Card.Description>                \r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                      <div className=\"ui two buttons\">\r\n                        <Button basic color=\"green\" onClick={() => Approve(co._id,co.classOb._id,co.userOb.email)}>\r\n                          Approve\r\n                        </Button>\r\n                        <Button basic color=\"red\" onClick={() => Decline(co._id)}>\r\n                          Decline\r\n                        </Button>\r\n                      </div>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </Card.Group>\r\n              </Grid.Column>\r\n            ))}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n <div>\r\n      <fieldset className={classes.fieldsets}>\r\n        <legend>&nbsp; Class Invitation  &nbsp;</legend>\r\n        \r\n        {classinvit?.map((co, i) => (\r\n          <div key={i}>\r\n           \r\n        <Card className={classes.root}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                R \r\n              </Avatar>\r\n            }\r\n           \r\n            title={co.classOb.classOwner.firstName}\r\n            subheader={co.classOb.classDatePost}\r\n          />\r\n          { <CardMedia\r\n          className={classes.media}\r\n          image=\"/static/images/cards/paella.jpg\"\r\n          title=\"Paella dish\"\r\n        /> }\r\n\r\n        <CardContent>\r\n        <Typography variant=\"body2\" component=\"h2\">\r\n        {co.classOb.className}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"h4\">\r\n        {co.classOb.classSection}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        {co.classOb.classDescription}\r\n        </Typography>\r\n      </CardContent>\r\n       <CardActions disableSpacing>\r\n      <Button color=\"primary\">Accept</Button>\r\n      <Button color=\"secondary\">Decline</Button>\r\n    </CardActions>\r\n    </Card>\r\n    </div>\r\n     ))}  \r\n  </fieldset>\r\n</div>\r\n*/\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\authentification\\ModalChangeProfilePicture.js",["892"],"import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dimmer,\r\n  Header,\r\n  Image,\r\n  Loader,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { UpdateProfilePicture } from \"../../redux/slices/User\";\r\n\r\nfunction ModalChangeProfilePicture(props) {\r\n  const Resources = useSelector((state) => state.user.Resources);\r\n  const [loader, SetLoader] = useState(false);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [picture, setPicture] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const updatePicture = () => {\r\n    var formData = new FormData();\r\n    SetLoader(true);\r\n    formData.append(\"multiple_resources\", picture);\r\n    console.log(\"this is pic\");\r\n    console.log(picture);\r\n    dispatch(UpdateProfilePicture(formData)).then((response) => {\r\n      console.log(response);\r\n      SetLoader(false);\r\n      setOpen(false);\r\n    });\r\n  };\r\n  const handleChangeStatus = ({ meta, file }, status) => {\r\n    if (status === \"done\") {\r\n      setPicture(file);\r\n    }\r\n    if (status === \"removed\") {\r\n      console.log(status, meta, file);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={\r\n          <Image\r\n            fluid\r\n            centered\r\n            style={{\r\n              margin: \"10px\",\r\n              height: \"250px\",\r\n              width: \"250px\",\r\n            }}\r\n            label={{\r\n              as: \"a\",\r\n              color: \"red\",\r\n              content: \"Edit\",\r\n              icon: \"edit\",\r\n              ribbon: true,\r\n            }}\r\n            src={Resources}\r\n          />\r\n        }\r\n      >\r\n        <Modal.Header>Select a Photo</Modal.Header>\r\n\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <Header>Default Profile Image</Header>\r\n            <p>\r\n              We've found the following gravatar image associated with your\r\n              e-mail address.\r\n            </p>\r\n            <p>Is it okay to use this photo?</p>\r\n            <br />\r\n            <br />\r\n\r\n            <br />\r\n            <Dropzone\r\n              styles={{ dropzone: { minHeight: 120, maxHeight: 250 } }}\r\n              canCancel={true}\r\n              canRemove={true}\r\n              canRestart={true}\r\n              onChangeStatus={handleChangeStatus}\r\n              maxFiles={1}\r\n              multiple={false}\r\n              accept=\"image/*\"\r\n              inputContent={(files, extra) =>\r\n                extra.reject ? \"Image files only\" : \"Drag Files\"\r\n              }\r\n              styles={{\r\n                dropzoneReject: { borderColor: \"red\", backgroundColor: \"#DAA\" },\r\n                inputLabel: (files, extra) =>\r\n                  extra.reject ? { color: \"red\" } : {},\r\n              }}\r\n            />\r\n            <br />\r\n            {loader ? (\r\n              <Dimmer active>\r\n                <Loader>Preparing Files ... please wait !</Loader>\r\n              </Dimmer>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => setOpen(false)}>\r\n            Discard\r\n          </Button>\r\n          <Button\r\n            content=\"Yep, Save\"\r\n            labelPosition=\"right\"\r\n            icon=\"checkmark\"\r\n            onClick={updatePicture}\r\n            color=\"red\"\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalChangeProfilePicture;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\container\\WhiteBoard.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\board\\Board.jsx",["893"],"import React from 'react';\nimport io from 'socket.io-client';\n\nimport './style.css';\n\nclass Board extends React.Component {\n\n    timeout;\n    socket = io.connect(\"https://closer-server.herokuapp.com\");\n\n    ctx;\n    isDrawing = false;\n\n    constructor(props) {\n        super(props);\n\n        this.socket.on(\"canvas-data\", function(data){\n\n            var root = this;\n            var interval = setInterval(function(){\n                if(root.isDrawing) return;\n                root.isDrawing = true;\n                clearInterval(interval);\n                var image = new Image();\n                var canvas = document.querySelector('#board');\n                var ctx = canvas.getContext('2d');\n                image.onload = function() {\n                    ctx.drawImage(image, 0, 0);\n\n                    root.isDrawing = false;\n                };\n                image.src = data;\n            }, 200)\n        })\n    }\n\n    componentDidMount() {\n        this.drawOnCanvas();\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.ctx.strokeStyle = newProps.color;\n        this.ctx.lineWidth = newProps.size;\n    }\n\n    drawOnCanvas() {\n        var canvas = document.querySelector('#board');\n        this.ctx = canvas.getContext('2d');\n        var ctx = this.ctx;\n\n        var sketch = document.querySelector('#sketch');\n        var sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n\n        var mouse = {x: 0, y: 0};\n        var last_mouse = {x: 0, y: 0};\n\n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n\n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n\n\n        /* Drawing on Paint App */\n        ctx.lineWidth = this.props.size;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = this.props.color;\n\n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n\n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        var root = this;\n        var onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            if(root.timeout != undefined) clearTimeout(root.timeout);\n            root.timeout = setTimeout(function(){\n                var base64ImageData = canvas.toDataURL(\"image/png\");\n                root.socket.emit(\"canvas-data\", base64ImageData);\n            }, 1000)\n        };\n    }\n\n    render() {\n        return (\n            <div class=\"sketch\" id=\"sketch\">\n                <canvas className=\"board\" id=\"board\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Board","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalConfirmDeleteTask.js",["894"],"import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Dropdown, Modal } from 'semantic-ui-react';\r\nimport { isAuth } from '../../helpers/auth';\r\nimport { deleteTask } from '../../redux/slices/Task';\r\n\r\nexport default function ModalConfirmDeleteTask(props) {\r\n\r\n    const [modalOpen, SetModalOpen] = useState(false);\r\n    const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const dispatch = useDispatch();\r\n  const taskDetail={\r\n    \"idUser\":isAuth()._id,\r\n    \"idClass\" : currentClass._id,\r\n    \r\n  }\r\n  \r\n    const handleOpen = (e) => SetModalOpen(true);\r\n    const handleClose = (e) => SetModalOpen(false);\r\n  \r\n    const handleSubmit = (e) => {\r\n      let params = e.target.getAttribute(\"taskid\");\r\n \r\n      dispatch(deleteTask(params));\r\n      console.log(\"kamlt\");\r\n      handleClose();\r\n  \r\n        \r\n    \r\n    \r\n    };\r\n    return (\r\n        <>\r\n              <Modal\r\n        trigger={\r\n          <Dropdown.Item onClick={handleOpen} icon=\"delete\" text=\"Delete\" />\r\n        }\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <p>\r\n            Are you sure you want to delete{\" \"}\r\n            <strong>{props.task.title}</strong>?\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            taskid={props.task._id}\r\n            color=\"red\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"black\">\r\n            No\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n        \r\n    )\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalUpdateTask.js",["895","896","897","898"],"import React, { useState } from 'react'\r\nimport { Button, Dropdown, Feed, Icon, Modal } from 'semantic-ui-react'\r\nimport AddTask from './AddTask'\r\nimport FormTask from './FormTask'\r\n\r\nexport default function ModalUpdateTask(props) {\r\n  const [open, setOpen] = useState(false);\r\n    return (\r\n        <>\r\n        <Modal\r\n          trigger={\r\n            <Dropdown.Item icon={props.icon} text={props.buttonTriggerTitle} />\r\n          }\r\n          dimmer=\"inverted\"\r\n          size=\"tiny\"\r\n          closeIcon=\"close\"\r\n        >\r\n          <Modal.Header>{props.headerTitle}</Modal.Header>\r\n          <Modal.Content>\r\n            \r\n            <FormTask\r\n              buttonSubmitTitle={props.buttonSubmitTitle}\r\n              buttonColor={props.buttonColor}\r\n              task={props.task}\r\n             \r\n           \r\n           \r\n            />\r\n              \r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n          <Button color=\"black\" onClick={() => setOpen(false)}>\r\n            Back To Task\r\n          </Button>\r\n      \r\n             <br></br>\r\n        \r\n        </Modal.Actions>\r\n        </Modal>\r\n      </>\r\n    )\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\FormTask.js",["899","900","901","902","903","904","905","906","907","908","909"],"import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\r\nimport { Button, Form, Message } from 'semantic-ui-react';\r\nimport { getTaskByTeacher, taskSlice, updateTask } from '../../redux/slices/Task';\r\nimport FileUploadEdit from '../../utlis/FileUploadEdit';\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nexport default function FormTask({task}) {\r\n\r\n  const [Images, setImages] = useState(task.listQuestion);\r\n  let listFile;\r\n  const [enableUpload, setEnableUpload] = useState(false);\r\n  const [successMessage, SetSuccessMessage] = useState(\"\");\r\n  const [errorMessage, SetErrorMessage] = useState(\"\");\r\n\r\n  const [up, setUp] = useState(0);\r\n\r\n  const updateImages = (newImages) => {\r\n \r\n\r\n    setImages(newImages);\r\n\r\n\r\n  };\r\n\r\n    const [taskEdit , setTaskEdit] = useState(task);\r\n    \r\n\r\n    const  dispatch = useDispatch();\r\n   \r\n \r\n    const d = new Date(task.endDate,);\r\n    const initialDateValue = d;\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        _id : task._id,\r\n        title: task.title,\r\n        description: task.description,\r\n        theme: task.theme,\r\n        cour : task.cour,\r\n        typeTask: task.typeTask,\r\n        listQuestion:Images,\r\n        listStudents: task.listStudents,\r\n        endDate: initialDateValue,\r\n        creator: task.creator,\r\n\r\n      },\r\n  \r\n  \r\n      onSubmit: async (values) => {\r\n       \r\n        try {\r\n         \r\n          setEnableUpload(true);\r\n            values.listQuestion = Images;\r\n         \r\n           \r\n  \r\n        \r\n        console.log(values);\r\n        const res = await dispatch(updateTask(values)).then(()=>{\r\n          dispatch(getTaskByTeacher({\"idUser\":task.creator,\"idClass\":task.cour}));\r\n          SetSuccessMessage(\"Update Task successfully !\")\r\n      });\r\n        } catch (error) {\r\n          SetErrorMessage(\"Semothing Wrrong Check Your Data Please  !\")\r\n          alert(error);\r\n        }\r\n      },\r\n    });\r\n    return (\r\n        <div>\r\n          { successMessage ? ( <Message\r\n          success\r\n          color=\"green\"\r\n          header=\"Nice one! 📒 📕 📚 📖\"\r\n            content={successMessage}\r\n        />) : (<></>)}\r\n       \r\n       {errorMessage ? (\r\n          <Message\r\n          warning\r\n          color=\"yellow\"\r\n          header=\"Woah! 😱 😨\"\r\n          content={errorMessage}\r\n        \r\n        />\r\n       ) : (<></>)}\r\n       \r\n             <Form  onSubmit={formik.handleSubmit}>\r\n        <Form.Input\r\n          label=\"Titre\"\r\n          type=\"text\"\r\n          \r\n          name=\"title\"\r\n          maxLength=\"40\"\r\n          \r\n          required\r\n      \r\n          onChange={\r\n            formik.handleChange}\r\n            value={formik.values.title}\r\n        />\r\n        <Form.TextArea\r\n          label=\"Description\"\r\n          type=\"TextArea\"\r\n       required\r\n          name=\"description\"\r\n         \r\n        \r\n          onChange={\r\n            formik.handleChange}\r\n            value={formik.values.description}\r\n        />\r\n             <Form.Field>\r\n                  <label>Due</label>\r\n                  <SemanticDatepicker\r\n                  required\r\n                   value={formik.values.endDate}\r\n                   onChange={(e, data) =>\r\n                    (formik.values.endDate= data.value )\r\n                  }\r\n                  />\r\n                </Form.Field>\r\n                 \r\n          { task.typeTask === \"File\" ? (  <FileUploadEdit\r\n          refreshFunction={updateImages}\r\n            listfile={task.listQuestion}  \r\n            Enbale={enableUpload}\r\n          />)  :  (<></>)}\r\n       \r\n      \r\n          <br/>\r\n               <Button type=\"submit\" color=\"red\" disabled={formik.values.title ===\"\" || formik.values.description=== \"\" || formik.values.endDate===null }\r\n               content=\"Update Task\"  floated=\"right\"  icon=\"checkmark\" / >\r\n        \r\n           </Form>\r\n       \r\n           <br/>\r\n        <br/>\r\n    \r\n        <br /> {/* Yikes! Deal with Semantic UI React! */}\r\n     \r\n        </div>\r\n    )\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalAssignTask.js",["910","911","912"],"import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\r\nimport { isAuth } from '../../helpers/auth';\r\nimport { assignAfterSave, getTaskByTeacher, updateTaskStatus } from '../../redux/slices/Task';\r\n\r\nexport default function ModalAssignTask(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n    const dispatch = useDispatch();\r\n    const taskDetail={\r\n      \"idUser\":isAuth()._id,\r\n      \"idClass\" : currentClass._id,\r\n      \r\n    }\r\n    console.log(props.task);\r\n\r\n    const assign = () => {\r\n      \r\n      \r\n            dispatch(assignAfterSave(props.task));\r\n\r\n        \r\n        setOpen(false);\r\n    }\r\n    return (\r\n        <div>\r\n              <Modal\r\n      \r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      size='small'\r\n      trigger={<Button negative>Assign</Button>}\r\n    >\r\n      <Header >\r\n        <Icon name='archive' />\r\n        Assign Task\r\n      </Header>\r\n      <Modal.Content>\r\n        <p>\r\n          {props.task.description}\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button  color='red'  onClick={()=>assign()}>\r\n          <Icon name='remove' /> Yes\r\n        </Button>\r\n        <Button color='black'  onClick={() => setOpen(false)}>\r\n          <Icon name='checkmark' /> No\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\home\\HomeCloser.js",["913"],"/* eslint-disable max-classes-per-file */\r\n/* eslint-disable react/no-multi-comp */\r\n\r\nimport { createMedia } from \"@artsy/fresnel\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n  Sidebar,\r\n  Visibility,\r\n} from \"semantic-ui-react\";\r\n\r\nconst { MediaContextProvider, Media } = createMedia({\r\n  breakpoints: {\r\n    mobile: 0,\r\n    tablet: 768,\r\n    computer: 1024,\r\n  },\r\n});\r\n\r\n/* Heads up!\r\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\r\n * components for such things.\r\n */\r\nconst HomepageHeading = ({ mobile }) => (\r\n  <Container text>\r\n    <Header\r\n      as=\"h1\"\r\n      content=\"Smart-Classroom-Closer\"\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? \"2em\" : \"4em\",\r\n        fontWeight: \"normal\",\r\n        marginBottom: 0,\r\n        marginTop: mobile ? \"1.5em\" : \"3em\",\r\n      }}\r\n    />\r\n    <Header\r\n      as=\"h2\"\r\n      content=\"Learn whatever you want without leaving home.\"\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? \"1.5em\" : \"1.7em\",\r\n        fontWeight: \"normal\",\r\n        marginTop: mobile ? \"0.5em\" : \"1.5em\",\r\n      }}\r\n    />\r\n    <Button negative size=\"huge\">\r\n      Get Started\r\n      <Icon name=\"right arrow\" />\r\n    </Button>\r\n  </Container>\r\n);\r\n\r\nHomepageHeading.propTypes = {\r\n  mobile: PropTypes.bool,\r\n};\r\n\r\n/* Heads up!\r\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n * It can be more complicated, but you can create really flexible markup.\r\n */\r\nclass DesktopContainer extends Component {\r\n  state = {};\r\n\r\n  hideFixedMenu = () => this.setState({ fixed: false });\r\n  showFixedMenu = () => this.setState({ fixed: true });\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { fixed } = this.state;\r\n\r\n    return (\r\n      <Media greaterThan=\"mobile\">\r\n        <Visibility\r\n          once={false}\r\n          onBottomPassed={this.showFixedMenu}\r\n          onBottomPassedReverse={this.hideFixedMenu}\r\n        >\r\n          <Segment\r\n            inverted\r\n            textAlign=\"center\"\r\n            style={{ minHeight: 700, padding: \"1em 0em\" }}\r\n            vertical\r\n          >\r\n            <Menu\r\n              fixed={fixed ? \"top\" : null}\r\n              inverted={!fixed}\r\n              pointing={!fixed}\r\n              secondary={!fixed}\r\n              size=\"large\"\r\n            >\r\n              <Container>\r\n                <Menu.Item as=\"a\" active>\r\n                  Home\r\n                </Menu.Item>\r\n                <Menu.Item as=\"a\">Features</Menu.Item>\r\n                <Menu.Item as=\"a\">About Us</Menu.Item>\r\n\r\n                <Menu.Item position=\"right\">\r\n                  <Link to=\"/login\">\r\n                    <Button as=\"a\" inverted={!fixed}>\r\n                      Log in\r\n                    </Button>\r\n                  </Link>\r\n                  <Link to=\"/register\">\r\n                    <Button\r\n                      as=\"a\"\r\n                      inverted={!fixed}\r\n                      negative={fixed}\r\n                      style={{ marginLeft: \"0.5em\" }}\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                  </Link>\r\n                </Menu.Item>\r\n              </Container>\r\n            </Menu>\r\n            <HomepageHeading />\r\n          </Segment>\r\n        </Visibility>\r\n\r\n        {children}\r\n      </Media>\r\n    );\r\n  }\r\n}\r\n\r\nDesktopContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nclass MobileContainer extends Component {\r\n  state = {};\r\n\r\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\r\n\r\n  handleToggle = () => this.setState({ sidebarOpened: true });\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { sidebarOpened } = this.state;\r\n\r\n    return (\r\n      <Media as={Sidebar.Pushable} at=\"mobile\">\r\n        <Sidebar.Pushable>\r\n          <Sidebar\r\n            as={Menu}\r\n            animation=\"overlay\"\r\n            inverted\r\n            onHide={this.handleSidebarHide}\r\n            vertical\r\n            visible={sidebarOpened}\r\n          >\r\n            <Menu.Item as=\"a\" active>\r\n              Home\r\n            </Menu.Item>\r\n            <Menu.Item as=\"a\">Features</Menu.Item>\r\n            <Menu.Item as=\"a\">About Us</Menu.Item>\r\n            <Link to=\"/login\">\r\n              <Menu.Item as=\"a\">Log in</Menu.Item>\r\n            </Link>\r\n            <Link to=\"/register\">\r\n              <Menu.Item as=\"a\">Sign Up</Menu.Item>\r\n            </Link>\r\n          </Sidebar>\r\n\r\n          <Sidebar.Pusher dimmed={sidebarOpened}>\r\n            <Segment\r\n              inverted\r\n              textAlign=\"center\"\r\n              style={{ minHeight: 350, padding: \"1em 0em\" }}\r\n              vertical\r\n            >\r\n              <Container>\r\n                <Menu inverted pointing secondary size=\"large\">\r\n                  <Menu.Item onClick={this.handleToggle}>\r\n                    <Icon name=\"sidebar\" />\r\n                  </Menu.Item>\r\n                  <Menu.Item position=\"right\">\r\n                    <Link to=\"/login\">\r\n                      <Button as=\"a\" inverted>\r\n                        Log in\r\n                      </Button>\r\n                    </Link>\r\n                    <Link to=\"/register\">\r\n                      <Button as=\"a\" inverted style={{ marginLeft: \"0.5em\" }}>\r\n                        Sign Up\r\n                      </Button>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </Container>\r\n              <HomepageHeading mobile />\r\n            </Segment>\r\n\r\n            {children}\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </Media>\r\n    );\r\n  }\r\n}\r\n\r\nMobileContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n  /* Heads up!\r\n   * For large applications it may not be best option to put all page into these containers at\r\n   * they will be rendered twice for SSR.\r\n   */\r\n  <MediaContextProvider>\r\n    <DesktopContainer>{children}</DesktopContainer>\r\n    <MobileContainer>{children}</MobileContainer>\r\n  </MediaContextProvider>\r\n);\r\n\r\nResponsiveContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst HomepageLayout = () => (\r\n  <ResponsiveContainer>\r\n    <Segment style={{ padding: \"8em 0em\" }} vertical>\r\n      <Grid container stackable verticalAlign=\"middle\">\r\n        <Grid.Row>\r\n          <Grid.Column width={8}>\r\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n              Virtual Classroom\r\n            </Header>\r\n            <p style={{ fontSize: \"1.33em\" }}>\r\n              Closer Smart Virtual Classroom is A collaborative web conferencing\r\n              tool with an <span>online whiteboard</span>, <span>breakout rooms</span>, and <span>screen sharing</span>\r\n              capabilities for teachers and tutors who want to conduct highly\r\n              interactive live online teaching sessions\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={6}>\r\n            <Image\r\n              bordered\r\n              rounded\r\n              size=\"large\"\r\n              alt=\"closer.png\"\r\n              title=\"Logo Closer\"\r\n              src={process.env.PUBLIC_URL + \"/closer.png\"}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n\r\n    <Segment style={{ padding: \"8em 0em\" }} vertical>\r\n      <Container text>\r\n        <Divider\r\n          as=\"h4\"\r\n          className=\"header\"\r\n          horizontal\r\n          style={{ margin: \"3em 0em\", textTransform: \"uppercase\" }}\r\n        >\r\n          <a href=\"#\">Main Features</a>\r\n        </Divider>\r\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n          Online whiteboard\r\n        </Header>\r\n        <p style={{ fontSize: \"1.33em\" }}>\r\n          Share with your participants various types of learning resources on\r\n          the <span>whiteboard</span>  and discuss them during your <span>live sessions</span>. Engage your\r\n          participants in different collaborative activities using the tools for\r\n          creating, editing and presenting learning content.\r\n        </p>\r\n        <Button as=\"a\" size=\"large\">\r\n          Read More\r\n        </Button>\r\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n          Video-conference\r\n        </Header>\r\n        <p style={{ fontSize: \"1.33em\" }}>\r\n          See and hear your up to 2 participants simultaneously and experience\r\n          an interaction which is very similar to face-to-face training.\r\n        </p>\r\n        <Button as=\"a\" size=\"large\">\r\n          Read More\r\n        </Button>\r\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n          Screen-sharing\r\n        </Header>\r\n        <p style={{ fontSize: \"1.33em\" }}>\r\n          Demonstrate additional software and multimedia applications by <span>sharing\r\n          your screen </span> with the participants.\r\n        </p>\r\n        <Button as=\"a\" size=\"large\">\r\n          Read More\r\n        </Button>\r\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n          Recording\r\n        </Header>\r\n        <p style={{ fontSize: \"1.33em\" }}>\r\n          Monitor the work of the tutors in your organisation, analyse your own\r\n          performance or encourage your learner to revise the learning content\r\n          by watching the past sessions’ interactive playback.\r\n        </p>\r\n        <Button as=\"a\" size=\"large\">\r\n          Read More\r\n        </Button>\r\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n          Post to the class stream\r\n        </Header>\r\n        <p style={{ fontSize: \"1.33em\" }}>\r\n          Posts information or a question that you add to the class stream,\r\n          Comment response to a post or comment, Reply response to a comment\r\n          that mentions the person who made that comment, Mention classmates or\r\n          teacher in your post and finally upload file in your post (PDF,\r\n          Picture …).\r\n        </p>\r\n        <Button as=\"a\" size=\"large\">\r\n          Read More\r\n        </Button>\r\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\r\n          Courses\r\n        </Header>\r\n        <p style={{ fontSize: \"1.33em\" }}>\r\n          You can add a new course to the <span>class</span>, also u can\r\n          Modify/Delete/Display it.\r\n        </p>\r\n        <Button as=\"a\" size=\"large\">\r\n          Read More\r\n        </Button>\r\n      </Container>\r\n    </Segment>\r\n\r\n    <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\r\n      <Container>\r\n        <Grid divided inverted stackable>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <Header inverted as=\"h4\" content=\"About\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Contact Us</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={8}>\r\n              <Header inverted as=\"h4\" content=\"Services\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\">Meeting</List.Item>\r\n                <List.Item as=\"a\">Classroom</List.Item>\r\n                <List.Item as=\"a\">Recording</List.Item>\r\n                <List.Item as=\"a\">Screen sharing</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={7}>\r\n              <p>© 2020-2021 <span>Closer</span> is owned and operated by NoLimits</p>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default HomepageLayout;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\home\\404.js",[],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalTaskFile.js",["914","915","916","917","918","919","920","921","922","923","924","925","926"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\n\r\nimport {\r\n  Dropdown,\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Rail,\r\n  Segment,\r\n  TextArea,\r\n  Label,\r\n  Modal,\r\n  Confirm,\r\n  Header,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isAuth } from \"../../helpers/auth\";\r\nimport FileUpload from \"../../utlis/FileUpload\";\r\nimport { assignTask, getTaskByTeacher, postTasks } from \"../../redux/slices/Task\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\nimport { addQuestion } from \"../../redux/slices/questionslice\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\n\r\n\r\n\r\nexport default function ModalTaskFile(props) {\r\n \r\n  const currentClass =JSON.parse(localStorage.getItem(\"idClass\"));\r\n  \r\n    //const [classCurr , setClassCurr] = useState([]);\r\n   // setClassCurr(currentClass.classUsers)\r\n  //const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n  const seances = useSelector((state) => state.seance.seance);\r\n  const studentChosen = [];\r\n  const seanceChosen = [];\r\n \r\n  currentClass.classUsers.forEach((element) => {\r\n    studentChosen.push({ label: element.name, value: element._id });\r\n  });\r\n  console.log(studentChosen);\r\n  seances.forEach((element) => {\r\n    seanceChosen.push({ label: element.titre, value: element });\r\n  });\r\n    const [cancel, setCancel] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [opensave, setOpensave] = useState(false);\r\n  \r\n    const [close, setClose] = useState(false);\r\n   \r\n    const [successMessage, SetSuccessMessage] = useState(\"\");\r\n    const [errorMessage, SetErrorMessage] = useState(\"\");\r\n \r\n    const [selectedSeance, setSelectedSeance] = useState(null);\r\n    const [openModel, setOpenModel] = useState(false);\r\n\r\n    const [selected, setSelected] = useState([]);\r\n   \r\n    const [tasks , setTask] = useState({\r\n   \r\n        title : \"\",\r\n        description : \"\",\r\n        theme : \"\",\r\n        cour : currentClass._id,\r\n        typeTask : \"File\",\r\n   \r\n        listQuestion : [],\r\n        listStudents : [],\r\n        endDate : null,\r\n        creator : isAuth()._id\r\n     \r\n    });\r\n\r\n    const taskDetail={\r\n      \"idUser\":isAuth()._id,\r\n      \"idClass\" : currentClass._id,\r\n      \r\n    }\r\n  \r\n    const  dispatch = useDispatch();\r\n    const clicCancel = () => {\r\n      setCancel(true);\r\n    };\r\n    const clicOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const clicOpensave = () => {\r\n      setOpensave(true);\r\n    };\r\n    const clicConfirmCancel = () => {\r\n    \r\n      SetSuccessMessage(\"\");\r\n     setOpenModel(false);\r\n     \r\n    };\r\n    const clicConfirm = () => {\r\n\r\n      setTask(\r\n        currentClass.classUsers.forEach((itemselect) => {\r\n        \r\n          const index = selected.findIndex(\r\n            (item) => item.value === itemselect._id\r\n          );\r\n          if (index !== -1) {\r\n            \r\n            tasks.listStudents.push(itemselect);\r\n           // tasks.listStudents.push(itemselect);\r\n          }\r\n         \r\n          \r\n        })\r\n      );\r\n      console.log(selectedSeance);\r\n      setTask(tasks.theme = selectedSeance.value);\r\n     // setTask(...tasks.listStudents = listStud);\r\n      setTask(...tasks.listQuestion = Images);\r\n     \r\n      setSelected([]);\r\n      setSelectedSeance(null);\r\n      setEnableUpload(true);\r\n      setOpensave(false);\r\n      dispatch(postTasks(tasks)).then(()=>{\r\n        setEnableUpload(false);\r\n        dispatch(getTaskByTeacher(taskDetail));\r\n        setTask({\r\n   \r\n          title : \"\",\r\n          description : \"\",\r\n          theme : \"\",\r\n          cour : currentClass._id,\r\n          typeTask : \"File\",\r\n     \r\n          listQuestion : [],\r\n          listStudents : [],\r\n          endDate : null,\r\n          creator : isAuth()._id\r\n       \r\n      })\r\n        SetSuccessMessage(\"Assgin Task successfully !\");\r\n      });\r\n    \r\n    \r\n     \r\n    };\r\n    \r\n    const clicConfirmAssign = () => {\r\n      setTask(\r\n        currentClass.classUsers.forEach((itemselect) => {\r\n        \r\n          const index = selected.findIndex(\r\n            (item) => item.value === itemselect._id\r\n          );\r\n          if (index !== -1) {\r\n            \r\n            tasks.listStudents.push(itemselect);\r\n           // tasks.listStudents.push(itemselect);\r\n          }\r\n         \r\n          \r\n        })\r\n      );\r\n      setTask(tasks.theme = selectedSeance.value);\r\n     // setTask(...tasks.listStudents = listStud);\r\n      setTask(...tasks.listQuestion = Images);\r\n      setSelected([]);\r\n      setSelectedSeance(null)\r\n      setEnableUpload(true);\r\n      setOpen(false);\r\n      dispatch(assignTask(tasks)).then(()=>{\r\n        setEnableUpload(false);\r\n        dispatch(getTaskByTeacher(taskDetail));\r\n        \r\n        setTask({\r\n   \r\n          title : \"\",\r\n          description : \"\",\r\n          theme : \"\",\r\n          cour : currentClass._id,\r\n          typeTask : \"File\",\r\n     \r\n          listQuestion : [],\r\n          listStudents : [],\r\n          endDate : null,\r\n          creator : isAuth()._id\r\n       \r\n      })\r\n        SetSuccessMessage(\"Assgin Task successfully !\");\r\n        \r\n      \r\n      });\r\n     \r\n    \r\n  \r\n      \r\n    };\r\n    const clicClose = () => {\r\n      setOpen(false);\r\n     // setOpenModel(false);\r\n    };\r\n    const clicClosesave = () => {\r\n      setOpensave(false);\r\n     // setOpenModel(false);\r\n    \r\n    };\r\n    const clicCloseCancel = () => {\r\n      setCancel(false);\r\n     // setOpenModel(false);\r\n    };\r\n\r\n  \r\n      const [enableUpload, setEnableUpload] = useState(false);\r\n      const [Images, setImages] = useState([]);\r\n      const updateImages = (newImages) => {\r\n    \r\n        setImages(newImages);\r\n        \r\n       \r\n      };\r\n      const handleOpen = ()=>{\r\n        setOpenModel(true);\r\n      }\r\n\r\n\r\n      \r\n    return (\r\n        <div>\r\n               <Modal\r\n        trigger={<Dropdown.Item onClick={handleOpen} icon=\"clipboard\" text=\"Add Task\" />}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n        open={openModel}\r\n        \r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n        { successMessage ? ( <Message\r\n          success\r\n          color=\"green\"\r\n          header=\"Nice one! 📒 📕 📚 📖\"\r\n            content={successMessage}\r\n        />) : (<></>)}\r\n       \r\n       {errorMessage ? (\r\n          <Message\r\n          warning\r\n          color=\"yellow\"\r\n          header=\"Woah! 😱 😨\"\r\n          content={errorMessage}\r\n        \r\n        />\r\n       ) : (<></>)}\r\n        <Grid>\r\n          <Grid.Row>\r\n       \r\n            <Grid.Column width={10}>\r\n              <Form >\r\n                <Form.Field>\r\n                  <Form.Input\r\n                    label=\"Title\"\r\n                    required\r\n                  \r\n                    value={tasks.title}\r\n                    onChange={(e) =>\r\n                      setTask({ ...tasks, title: e.target.value })\r\n                    }\r\n                    placeholder=\"Title\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label>Description</label>\r\n                  <TextArea\r\n                  required\r\n                    label=\"Description\"\r\n              value={tasks.description}\r\n                    onChange={(e) =>\r\n                      setTask({ ...tasks, description: e.target.value })\r\n                    }\r\n                    placeholder=\"Description..\"\r\n                    style={{ minHeight: 50 }}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Due</label>\r\n                  <SemanticDatepicker\r\n                    onChange={(e, data) =>\r\n                      setTask({ ...tasks, endDate: data.value })\r\n                    }\r\n                    value={tasks.endDate}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n            <Header\r\n                as=\"h5\"\r\n                icon=\"check square outline\"\r\n                content={\"Choose Theme  \"}\r\n              />\r\n              <Select\r\n               options={seanceChosen}\r\n                value={selectedSeance}\r\n                onChange={setSelectedSeance}\r\n               \r\n              />\r\n        \r\n              <Header\r\n                as=\"h5\"\r\n                icon=\"check square outline\"\r\n                content={\" For Student  \"}\r\n              />\r\n            \r\n               \r\n                <MultiSelect\r\n                  options={studentChosen}\r\n                  value={selected}\r\n                  onChange={setSelected}\r\n                  labelledBy=\"Select\"\r\n                />\r\n            \r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n\r\n               \r\n        <FileUpload refreshFunction={updateImages} listfile={null} Enbale={enableUpload}/>\r\n      \r\n      \r\n     \r\n        </Modal.Content>\r\n     \r\n       \r\n        <Modal.Actions>\r\n     \r\n        <Button color=\"black\"      floated=\"right\" onClick={clicConfirmCancel}>Back</Button>\r\n     \r\n           \r\n        <Button\r\n          color=\"red\"\r\n          type=\"submit\"\r\n          onClick={() => clicOpensave()}\r\n          //onClick={onSubmitSaveTask}\r\n                    disabled={tasks.title ===\"\" || tasks.description=== \"\" || tasks.endDate===null || selectedSeance ===null || selected ===[]}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Confirm\r\n        \r\n          size=\"tiny\"\r\n          header=\"Save Task To Assign\"\r\n          content=\"Are you sure?\"\r\n          open={opensave}\r\n          onCancel={clicClosesave}\r\n          onConfirm={clicConfirm}\r\n        />\r\n     \r\n      \r\n        <Button\r\n       \r\n          color=\"red\"\r\n          type=\"submit\"\r\n          // onClick={onSubmitAssignTask}\r\n          onClick={() => clicOpen()}\r\n          disabled={tasks.title ===\"\" || tasks.description=== \"\" || tasks.endDate===null || selectedSeance ===null || selected ===[] }\r\n        >\r\n          Assign\r\n        </Button>\r\n   \r\n        <Confirm\r\n         size=\"tiny\"\r\n          header=\"Assign Task To Student\"\r\n          content=\"Are you sure?\"\r\n          open={open}\r\n          onCancel={clicClose}\r\n          onConfirm={clicConfirmAssign}\r\n          \r\n        />\r\n        \r\n \r\n    \r\n    \r\n   \r\n    </Modal.Actions>\r\n      </Modal>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ModalTask.js",["927","928","929","930","931","932","933","934","935","936","937","938","939","940","941"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Dropdown,\n  Feed,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Modal,\n} from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport FileUploadEdit from \"../../utlis/FileUploadEdit\";\nimport { isAuth } from \"../../helpers/auth\";\nimport {  getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\nimport { UpdateProfilePicture } from \"../../redux/slices/User\";\nimport FileUpload from \"../../utlis/FileUpload\";\n\nexport default function ModalTask({task}) {\n  \n\n  const [open, setOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const [Images, setImages] = useState([]);\n  const [enableUpload, setEnableUpload] = useState(false);\n\n  \n\n  const updateImages = (newImages) => {\n    if (newImages === null) {\n      task.listReponse.forEach((element) => {\n        setImages(element);\n        \n      });\n    } else {\n      setImages(Images.concat(newImages));\n    }\n  };\n\n    \n\n\n    const formik = useFormik({\n      initialValues: {\n        _id : task._id,\n        grade: task.grade,\n        taskStatus: \"Remis\",\n      student : task.student,\n       task: task.task,\n        listReponse: [],\n      \n\n      },\n  \n  \n      onSubmit: async (values) => {\n       \n        try {\n          console.log(\"cc\");\n          console.log(Images);\n          if(Images.length !==0 )\n         { values.listReponse = Images;\n          \n        }\n        else{\n          values.listReponse = task.listReponse;\n        }\n        setEnableUpload(true)\n        console.log(values);\n        const res = await dispatch(rendreTask(values)).then(()=>{\n\n          dispatch(getDetailByTaskByStudent(task._id));\n\n          setEnableUpload(false)\n        });\n        } catch (error) {\n          alert(error);\n        }\n      },\n    });\n  const closeModel = () => {\n  \n    dispatch(getDetailByTaskByStudent(task._id));\n   \n    setOpen(false);\n  };\n\n\n\n  return (\n    <div>\n     \n\n    \n<Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        size=\"tiny\"\n        trigger={\n          <div className='ui two buttons'>\n          <Button  color=\"red\" fluid floated\n          icon=\"cloud upload\"\n          >\n            <Icon name=\"cloud upload\"></Icon>\n              { task.taskStatus === \"Remis\" ? ( <> update Task </>) : ( <> Rendre Task </> ) }\n            </Button>\n            </div>\n         \n        }\n      >\n        <Modal.Header>Upload Your File Here </Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n          <Form  onSubmit={formik.handleSubmit}>\n         \n        { task.taskStatus ===\"Remis\"  ? ( \n    <FileUploadEdit\n    refreshFunction={updateImages}\n    listfile={ task.listReponse}  \n    Enbale={enableUpload}\n  />\n\n        ) : (\n\n          <FileUpload\n          refreshFunction={updateImages}\n          listfile={ null}  \n          Enbale={enableUpload}\n        />\n        )}\n         <Button type=\"submit\" color=\"red\" floated=\"right\"   icon=\"checkmark\">\n          rendre Task\n        </Button>\n</Form>\n          </Modal.Description>\n        </Modal.Content>\n        <br/>\n        <br/>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => setOpen(false)}>\n            Back To Task\n          </Button>\n        \n             <br></br>\n        \n        </Modal.Actions>\n     \n      </Modal>\n   \n      \n\n\n    </div>\n  );\n}\n\n\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\BottomBar\\ListUsers.js",["942","943"],"import React, { useEffect, useState } from \"react\";\r\nimport { Dropdown, Menu } from \"semantic-ui-react\";\r\n\r\nfunction ListUsers(props) {\r\n  const listUsers = [{ key: Number, text: \"\", value: \"\" }];\r\n  for (let i = 0; i < props.userlistromm.length; i++) {\r\n    const option = {\r\n      key: props.userlistromm[i]._id,\r\n      text: props.userlistromm[i].info.userName,\r\n      value: props.userlistromm[i].info.userName,\r\n    };\r\n    \r\n    listUsers.push(option);\r\n  }\r\n  console.log(\"cc\");\r\n  console.log(props.userlistromm);\r\n  \r\n\r\n  return (\r\n    <div>\r\n     <Menu compact>\r\n     <Dropdown\r\n    placeholder='List Participant'\r\n  \r\n    selection\r\n    options={listUsers}\r\n  />\r\n        </Menu>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListUsers;\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\TaskQuizDetail.js",["944","945","946","947","948","949","950"],"import React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactTimeAgo from \"react-time-ago/commonjs/ReactTimeAgo\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Label,\r\n  List,\r\n  Message,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport { getDetailByTaskByStudent, rendreTask } from \"../../redux/slices/Grade\";\r\nimport CommentComponent from \"../Comment/CommentComponent\";\r\nimport ModalTask from \"./ModalTask\";\r\n\r\nexport default function TaskQuizDetail() {\r\n  const { id } = useParams();\r\n  const state = useSelector((state) => state.grades.grades);\r\n  //const files = useSelector((state) => state.tasks.files);\r\n  const [task ,setTask] = useState(state[0]);\r\n\r\n  const grade = {\r\n    id: id,\r\n    taskStatus: \"remis\",\r\n  //  listReponse: files,\r\n  };\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const submitTask = () => {\r\n    console.log(\"grade : \");\r\n    console.log(grade);\r\n  \r\n    dispatch(rendreTask(grade)).then(() => {\r\n      dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n  setTask(response.payload[0]);\r\n      });\r\n    });\r\n  };\r\n // console.log(task);\r\n  useEffect(() => {\r\n    \r\n    dispatch(getDetailByTaskByStudent(id)).then((response)=>{\r\n     \r\n      setTask(response.payload[0]);\r\n          });\r\n          console.log(task);\r\n    \r\n  }, [id]);\r\nconst [openModal , setOpenModal] = useState(false);\r\n  return (\r\n    <div>\r\n      {!task ? (\r\n        <></>\r\n      ) : (\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={1}></Grid.Column>\r\n            <Grid.Column width={14}>\r\n              <Grid>\r\n                {\" \"}\r\n                <Grid.Row>\r\n                  {\" \"}\r\n                  <Grid.Column width={12}>\r\n                    <Header as=\"h1\">\r\n                      <Icon circular  name=\"tasks\" />\r\n                      <Header.Content>\r\n                        {task.task.title}\r\n                        <Header.Subheader>\r\n                          <ReactTimeAgo\r\n                            date={task.task.DateAt}\r\n                            locale=\"en-US\"\r\n                          />\r\n                        </Header.Subheader>\r\n                      </Header.Content>\r\n                    </Header>\r\n                    <Divider ></Divider>\r\n                    <br />\r\n                    <Container>\r\n                      <h6>{task.task.description}</h6>\r\n                    </Container><br/>\r\n                   <Divider hidden></Divider>\r\n                   <Divider hidden></Divider>\r\n                    <CommentComponent taskID={id} />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={4}>\r\n                    <Card>\r\n                      <Card.Content>\r\n                       \r\n                        <Card.Header >Your Task -<ReactTimeAgo\r\n                            date={task.task.endDate}\r\n                            locale=\"en-US\"\r\n                          />\r\n\r\n                        \r\n                        </Card.Header>\r\n\r\n                        <Card.Description>\r\n                          {task.taskStatus === \"Remis\" ? (\r\n                            <>\r\n                              <Message positive>\r\n                                <Message.Header>\r\n                                  Task Added Succesfully\r\n                                </Message.Header>\r\n                              </Message>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {\" \"}\r\n                              <Message\r\n                                header=\"Upload Your File Here \"\r\n                                content=\"Good Luck For your assignment\"\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Card.Description>\r\n                        <br />\r\n                   \r\n                      </Card.Content>\r\n                      <Card.Content extra>\r\n                          \r\n                          <Modal\r\n        trigger={ \r\n        ( task.taskStatus === \"Remis\" ? (\r\n        (\r\n        <Link to={\"/Result/\"+task._id}><Button onClick={()=>setOpenModal(true)} color=\"red\" compact  fluid content={\"View Result\"} /> </Link>)\r\n\r\n        ) : ( <Button onClick={()=>setOpenModal(true)} color=\"red\" compact  fluid content={\"Start Quiz\"} /> ) )\r\n      }\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n        closeIcon=\"close\"\r\n        open={openModal}\r\n      >\r\n          <Modal.Header>Start Attempt </Modal.Header>\r\n        <Modal.Content>\r\n            <p>Once you start this Quiz you will no longer be able to do this Quiz Again.\r\n              \r\n    \r\n              \r\n            </p>\r\n        </Modal.Content>\r\n\r\n    \r\n      <Modal.Actions>\r\n          <Link to={\"/TaskQuiz/\"+task._id}>\r\n          <Button color=\"red\">Start</Button>\r\n          </Link>\r\n          <Button color=\"black\"\r\n          onClick={()=>setOpenModal(false)}\r\n          \r\n          >Back</Button>\r\n      </Modal.Actions>\r\n      </Modal>             \r\n                    \r\n                      </Card.Content>\r\n                    </Card>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={1}></Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\question\\UserQuestion.js",["951","952","953"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  \r\n  Header,\r\n  Icon,\r\n  Segment,\r\n  Feed,\r\n  Container,\r\n  Dropdown,\r\n  Message,\r\n  Label,\r\n  List,\r\n} from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddQuestion from \"./AddQuestionComponent\";\r\nimport {\r\n  fetchQuestions,\r\n  selectQuestions,\r\n} from \"../../redux/slices/questionslice\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport EditQuestions from \"./EditQuestionComponent\";\r\n//import io from \"socket.io-client\";\r\nimport { AddquestionsApi } from \"../../api/api\";\r\n\r\n//const ENDPOINT = \"https://closer-server.herokuapp.com/\";\r\n\r\nexport default function UserQuestion(props) {\r\n  const currentClass = JSON.parse(localStorage.getItem(\"idClass\"));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchQuestions(currentClass._id));\r\n  }, [dispatch]);\r\n\r\n  \r\n\r\n\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n\r\n  const [questions] = useSelector(selectQuestions);\r\n\r\n\r\n  const deletee = async (idq) => {\r\n    try {\r\n      const res = await AddquestionsApi.deleteQuestions(idq);\r\n      dispatch(fetchQuestions(currentClass._id));\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\nconst [loadmore, setloadmore] = useState(5)\r\nconst [enableLoadMore, setenableLoadMore] = useState(true)\r\nconst morQuestion =  (nb) => {\r\n      setloadmore(loadmore +5)\r\n      console.log(questions.length)\r\n      if(questions.length-loadmore<=0 )\r\n      {\r\n        setenableLoadMore(false)\r\n      }\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <AddQuestion floated=\"right\" />\r\n      {Number(questions.length) === 0 && (\r\n        <Segment raised color=\"black\" size=\"huge\">\r\n          <Header style={{ marginLeft: \"35%\" }} color=\"grey\" size=\"huge\">\r\n            No Question{\" \"}\r\n          </Header>\r\n        </Segment>\r\n      )}\r\n      {questions.filter(qq=>qq.Writerq._id===documentData._id).slice(0,loadmore).map((question, index) => (\r\n        <Segment key={index} raised color=\"grey\">\r\n          {question.Writerq._id === documentData._id && (\r\n            <Dropdown floated=\"right\" icon=\"ellipsis vertical\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item>\r\n                  <EditQuestions qes={question} />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => deletee(question._id)}>\r\n                  Delete\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          )}\r\n          <Feed>\r\n            <Feed.Event>\r\n              <Feed.Label image={question.Writerq.picture} />\r\n              <Feed.Content>\r\n                <Feed.Date>{question.Date}</Feed.Date>\r\n                <Feed.Summary>\r\n                  <p>{question.Writerq.name} </p>\r\n                </Feed.Summary>\r\n              </Feed.Content>\r\n            </Feed.Event>\r\n          </Feed>\r\n          <Message>\r\n            <Message.Header>{question.Title}</Message.Header>\r\n            <p>{question.Body}</p>\r\n          </Message>{\" \"}\r\n          <Feed.Extra images>\r\n            <List horizontal>\r\n              {question.Filee.map((file, index) => (\r\n                <List.Item key={index}>\r\n                  {(() => {\r\n                    switch (file.split(\".\").pop()) {\r\n                      case \"pdf\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"file pdf\" color=\"red\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"docx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"file word\" color=\"blue\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"pptx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon\r\n                              name=\"file powerpoint\"\r\n                              color=\"red\"\r\n                              size=\"huge\"\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"xlsx\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon\r\n                              name=\"file excel outline\"\r\n                              color=\"green\"\r\n                              size=\"huge\"\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"zip\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"zip\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"js\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"js\" color=\"yellow\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"php\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"zip\" color=\"blue\" size=\"huge\" />\r\n                          </a>\r\n                        );\r\n                      case \"txt\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <Icon name=\"file text\" size=\"huge\" color=\"blue\" />\r\n                          </a>\r\n                        );\r\n\r\n                      case \"jpg\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"jpeg\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n                      case \"png\":\r\n                        return (\r\n                          <a\r\n                            href={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                          >\r\n                            <img\r\n                              style={{\r\n                                minWidth: \"50px\",\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                              }}\r\n                              src={`https://firebasestorage.googleapis.com/v0/b/smart-closer.appspot.com/o/${file}?alt=media`}\r\n                              alt={`scan`}\r\n                            />\r\n                          </a>\r\n                        );\r\n\r\n                      default:\r\n                        return <Icon name=\"File\" color=\"Black\" size=\"huge\" />;\r\n                    }\r\n                  })()}\r\n\r\n                  <p>{file.split(\"_\").pop()}</p>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </Feed.Extra>\r\n          <div style={{ marginTop: \"3%\", marginBottom: \"3%\" }}>\r\n            {question.Hashtags.map((hashtag, index) => (\r\n              <Link to={\"/tags/\" + currentClass._id + \"/\" + hashtag} key={index}>\r\n                <Label  color=\"grey\" as=\"a\" tag>\r\n                  #{hashtag}\r\n                </Label>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n          <Header dividing as=\"h3\" style={{ marginLeft: \"2%\" }}>\r\n          </Header>\r\n          <Segment inverted color=\"red\">\r\n            <Link to={\"/FAQ/\" + question._id} style={{ color: \"white\" }}>\r\n              <h6 style={{ textAlign: \"center\" }}>See more</h6>\r\n            </Link>\r\n          </Segment>\r\n        </Segment>\r\n      ))}\r\n     {enableLoadMore &&(\r\n          <Segment raised color=\"grey\" textAlign='center' onClick={()=>morQuestion(5)}>Load more.</Segment>\r\n\r\n     )}\r\n\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\ReminderTask.js",["954","955","956","957","958"],"C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\GetAllArchivedClassComponent.js",["959"],"import {\r\n  Grid,\r\n  Label,\r\n  Segment,\r\n  Card,\r\n  Dropdown,\r\n  Header,\r\n} from \"semantic-ui-react\";\r\nimport React, {  useEffect } from \"react\";\r\nimport {\r\n  fetchclassArchived,\r\n  selectclassarchived,\r\n} from \"../../redux/slices/classsline\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ActivedClassComponent from \"./ActivedClassComponent\";\r\nexport default function GetAllClassComponent() {\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [archived] = useSelector(selectclassarchived);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchclassArchived(documentData.role, documentData._id,\"Archive\"));\r\n  },[dispatch]);\r\n  const aff = (id) => {\r\n    if (documentData.role === \"Teacher\") return \"Level \" + id + \"th\";\r\n    else if (documentData.role === \"Student\") return \"Year \" + id;\r\n  };\r\n  return (\r\n    <div>\r\n      {archived?.map((cl, index) => (\r\n        <Grid columns={1} key={index}>\r\n          <Grid.Column>\r\n            <Segment raised>\r\n              <Label as=\"a\" color=\"grey\" ribbon>\r\n                {aff(cl._id)}\r\n              </Label>\r\n              <Grid columns={4}>\r\n                {cl.classObjet?.map((co, i) => (\r\n                  <Grid.Column key={i}>\r\n                    <Card.Group stackable>\r\n                      <Card\r\n                        color={co.classColor}\r\n                      >\r\n                        <Card.Content>\r\n                          <Card.Header>\r\n                            <Grid stackable>\r\n                              <Grid.Row>\r\n                                <Grid.Column width={12}>\r\n                                  <Header as=\"h3\" color=\"red\">\r\n                                    {co.className}\r\n                                  </Header>\r\n                                </Grid.Column>\r\n\r\n                                <Grid.Column width={2}>\r\n                                  {co.classOwner === documentData._id ? (\r\n                                    <Dropdown\r\n                                      fluid\r\n                                      pointing\r\n                                      direction=\"left\"\r\n                                      className=\"icon\"\r\n                                      icon=\"ellipsis vertical\"\r\n                                    >\r\n                                      <Dropdown.Menu>\r\n                                        <ActivedClassComponent\r\n                                          headerTitle=\"Active Class\"\r\n                                          buttonTriggerTitle=\"Active\"\r\n                                          classes={co}\r\n                                        />\r\n                                      </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </Grid.Column>\r\n                              </Grid.Row>\r\n                            </Grid>\r\n                          </Card.Header>\r\n                          <Card.Meta>{co.classSection}</Card.Meta>\r\n                          <Card.Description>\r\n                            <p\r\n                              style={{\r\n                                overflow: \"hidden\",\r\n                                whiteSpace: \"nowrap\",\r\n                                textOverflow: \"ellipsis\",\r\n                                maxHeight: 250,\r\n                              }}\r\n                            >\r\n                              {co.classDescription}\r\n                            </p>\r\n                          </Card.Description>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    </Card.Group>\r\n                  </Grid.Column>\r\n                ))}\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      ))} \r\n    </div>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Class\\ActivedClassComponent.js",["960"],"import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Dropdown, Modal } from \"semantic-ui-react\";\r\nimport {  fetchclass,fetchActiveClass,fetchclassArchived } from \"../../redux/slices/classsline\";\r\nimport { AddclassApi} from \"../../api/api\";\r\nexport default function ActivedClassComponent(props) {\r\n  const [modalOpen, SetModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const documentData = JSON.parse(localStorage.getItem(\"user\"));\r\n  const handleOpen = (e) => SetModalOpen(true);\r\n  const handleClose = (e) => SetModalOpen(false);\r\n  const handleSubmit = async (e) => {\r\n    let params = e.target.getAttribute(\"classid\");\r\n    let error = { visible: false, message: \"\" };\r\n    try {\r\n      await AddclassApi.updateClassArchive(params);\r\n      dispatch(fetchclass(documentData.role, documentData._id,\"Active\"));\r\n      dispatch(fetchclassArchived(documentData.role, documentData._id,\"Archive\"));\r\n      dispatch(fetchActiveClass(documentData._id));\r\n      handleClose();\r\n    } catch (err) {\r\n      error = {\r\n        visible: true,\r\n        message: JSON.stringify(err.errors, null, 2),\r\n      };\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        trigger={\r\n          <Dropdown.Item onClick={handleOpen} icon=\"sync alternate\" text=\"Active\" />\r\n        }\r\n        open={modalOpen}\r\n        onClose={handleClose}\r\n        dimmer=\"inverted\"\r\n        size=\"tiny\"\r\n      >\r\n        <Modal.Header>{props.headerTitle}</Modal.Header>\r\n        <Modal.Content>\r\n          <p>\r\n            Are you sure you want to set this as an active class again named{\" \"}\r\n            <strong>{props.classes.className}</strong> ?\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            classid={props.classes._id}\r\n            color=\"red\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"black\">\r\n            No\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Smart-Virtual-Classroom\\client\\src\\Components\\Task\\StateTask.js",["961","962","963","964","965","966"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Grid, Statistic } from 'semantic-ui-react'\r\nimport {  getNbrTasksMissing, getNbrTasksRemis } from '../../redux/slices/Task';\r\n\r\nexport default function StateTask(props) {\r\n \r\n    return (\r\n        <div>\r\n               <Statistic.Group size=\"small\">\r\n                        \r\n                        <Grid.Column>\r\n                            <Statistic color=\"black\">\r\n                              <Statistic.Value>\r\n                            {props.student}\r\n                              </Statistic.Value>\r\n                              <Statistic.Label>Students</Statistic.Label>\r\n                            </Statistic>\r\n                          </Grid.Column>\r\n                          <Statistic color=\"red\">\r\n                            <Statistic.Value>\r\n                         \r\n                              {props.missing}\r\n                            </Statistic.Value>\r\n  \r\n                            <Statistic.Label>Missing</Statistic.Label>\r\n                          </Statistic>\r\n                 \r\n                          <Grid.Column>\r\n                            <Statistic color=\"green\">\r\n                              <Statistic.Value>\r\n                        \r\n                                {props.remis}\r\n                              </Statistic.Value>\r\n                              <Statistic.Label>Done</Statistic.Label>\r\n                            </Statistic>\r\n                          </Grid.Column>\r\n                        </Statistic.Group>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"967","severity":1,"message":"968","line":5,"column":8,"nodeType":"969","messageId":"970","endLine":5,"endColumn":23},{"ruleId":"971","replacedBy":"972"},{"ruleId":"973","replacedBy":"974"},{"ruleId":"975","severity":1,"message":"976","line":148,"column":32,"nodeType":"977","endLine":148,"endColumn":55},{"ruleId":"967","severity":1,"message":"978","line":16,"column":7,"nodeType":"969","messageId":"970","endLine":16,"endColumn":27},{"ruleId":"967","severity":1,"message":"979","line":16,"column":29,"nodeType":"969","messageId":"970","endLine":16,"endColumn":39},{"ruleId":"980","severity":1,"message":"981","line":18,"column":6,"nodeType":"982","endLine":18,"endColumn":8,"suggestions":"983"},{"ruleId":"967","severity":1,"message":"984","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":22},{"ruleId":"967","severity":1,"message":"985","line":7,"column":10,"nodeType":"969","messageId":"970","endLine":7,"endColumn":14},{"ruleId":"980","severity":1,"message":"986","line":25,"column":6,"nodeType":"982","endLine":25,"endColumn":20,"suggestions":"987"},{"ruleId":"967","severity":1,"message":"988","line":26,"column":24,"nodeType":"969","messageId":"970","endLine":26,"endColumn":28},{"ruleId":"967","severity":1,"message":"984","line":5,"column":10,"nodeType":"969","messageId":"970","endLine":5,"endColumn":22},{"ruleId":"967","severity":1,"message":"985","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":14},{"ruleId":"967","severity":1,"message":"985","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":14},{"ruleId":"967","severity":1,"message":"989","line":6,"column":16,"nodeType":"969","messageId":"970","endLine":6,"endColumn":24},{"ruleId":"980","severity":1,"message":"981","line":19,"column":6,"nodeType":"982","endLine":19,"endColumn":8,"suggestions":"990"},{"ruleId":"967","severity":1,"message":"979","line":11,"column":18,"nodeType":"969","messageId":"970","endLine":11,"endColumn":28},{"ruleId":"967","severity":1,"message":"979","line":12,"column":33,"nodeType":"969","messageId":"970","endLine":12,"endColumn":43},{"ruleId":"980","severity":1,"message":"991","line":19,"column":6,"nodeType":"982","endLine":19,"endColumn":8,"suggestions":"992"},{"ruleId":"967","severity":1,"message":"993","line":12,"column":7,"nodeType":"969","messageId":"970","endLine":12,"endColumn":13},{"ruleId":"967","severity":1,"message":"994","line":1,"column":27,"nodeType":"969","messageId":"970","endLine":1,"endColumn":36},{"ruleId":"967","severity":1,"message":"995","line":2,"column":10,"nodeType":"969","messageId":"970","endLine":2,"endColumn":19},{"ruleId":"967","severity":1,"message":"996","line":2,"column":27,"nodeType":"969","messageId":"970","endLine":2,"endColumn":31},{"ruleId":"967","severity":1,"message":"997","line":2,"column":33,"nodeType":"969","messageId":"970","endLine":2,"endColumn":40},{"ruleId":"967","severity":1,"message":"998","line":5,"column":27,"nodeType":"969","messageId":"970","endLine":5,"endColumn":33},{"ruleId":"967","severity":1,"message":"993","line":30,"column":7,"nodeType":"969","messageId":"970","endLine":30,"endColumn":13},{"ruleId":"967","severity":1,"message":"999","line":32,"column":10,"nodeType":"969","messageId":"970","endLine":32,"endColumn":20},{"ruleId":"967","severity":1,"message":"1000","line":33,"column":9,"nodeType":"969","messageId":"970","endLine":33,"endColumn":21},{"ruleId":"967","severity":1,"message":"1001","line":35,"column":9,"nodeType":"969","messageId":"970","endLine":35,"endColumn":24},{"ruleId":"967","severity":1,"message":"1002","line":8,"column":8,"nodeType":"969","messageId":"970","endLine":8,"endColumn":20},{"ruleId":"967","severity":1,"message":"1003","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":23},{"ruleId":"967","severity":1,"message":"1004","line":10,"column":10,"nodeType":"969","messageId":"970","endLine":10,"endColumn":13},{"ruleId":"967","severity":1,"message":"1005","line":11,"column":10,"nodeType":"969","messageId":"970","endLine":11,"endColumn":16},{"ruleId":"980","severity":1,"message":"1006","line":29,"column":6,"nodeType":"982","endLine":29,"endColumn":21,"suggestions":"1007"},{"ruleId":"967","severity":1,"message":"1008","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":26},{"ruleId":"967","severity":1,"message":"1008","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":26},{"ruleId":"967","severity":1,"message":"1009","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":17},{"ruleId":"967","severity":1,"message":"1010","line":3,"column":19,"nodeType":"969","messageId":"970","endLine":3,"endColumn":31},{"ruleId":"967","severity":1,"message":"1011","line":3,"column":33,"nodeType":"969","messageId":"970","endLine":3,"endColumn":42},{"ruleId":"967","severity":1,"message":"1012","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":16},{"ruleId":"967","severity":1,"message":"1013","line":4,"column":3,"nodeType":"969","messageId":"970","endLine":4,"endColumn":11},{"ruleId":"967","severity":1,"message":"1014","line":8,"column":3,"nodeType":"969","messageId":"970","endLine":8,"endColumn":13},{"ruleId":"967","severity":1,"message":"1015","line":11,"column":3,"nodeType":"969","messageId":"970","endLine":11,"endColumn":8},{"ruleId":"967","severity":1,"message":"1016","line":17,"column":10,"nodeType":"969","messageId":"970","endLine":17,"endColumn":19},{"ruleId":"980","severity":1,"message":"1017","line":51,"column":6,"nodeType":"982","endLine":51,"endColumn":8,"suggestions":"1018"},{"ruleId":"967","severity":1,"message":"1019","line":2,"column":10,"nodeType":"969","messageId":"970","endLine":2,"endColumn":22},{"ruleId":"967","severity":1,"message":"1020","line":7,"column":3,"nodeType":"969","messageId":"970","endLine":7,"endColumn":9},{"ruleId":"967","severity":1,"message":"997","line":16,"column":3,"nodeType":"969","messageId":"970","endLine":16,"endColumn":10},{"ruleId":"980","severity":1,"message":"1021","line":36,"column":6,"nodeType":"982","endLine":36,"endColumn":16,"suggestions":"1022"},{"ruleId":"967","severity":1,"message":"1023","line":38,"column":25,"nodeType":"969","messageId":"970","endLine":38,"endColumn":29},{"ruleId":"980","severity":1,"message":"1024","line":77,"column":6,"nodeType":"982","endLine":77,"endColumn":8,"suggestions":"1025"},{"ruleId":"967","severity":1,"message":"1026","line":81,"column":13,"nodeType":"969","messageId":"970","endLine":81,"endColumn":16},{"ruleId":"1027","severity":1,"message":"1028","line":294,"column":13,"nodeType":"977","endLine":294,"endColumn":16},{"ruleId":"980","severity":1,"message":"1029","line":38,"column":5,"nodeType":"982","endLine":38,"endColumn":15,"suggestions":"1030"},{"ruleId":"967","severity":1,"message":"1031","line":67,"column":11,"nodeType":"969","messageId":"970","endLine":67,"endColumn":16},{"ruleId":"967","severity":1,"message":"1032","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":25},{"ruleId":"967","severity":1,"message":"1033","line":7,"column":3,"nodeType":"969","messageId":"970","endLine":7,"endColumn":7},{"ruleId":"967","severity":1,"message":"1034","line":15,"column":3,"nodeType":"969","messageId":"970","endLine":15,"endColumn":18},{"ruleId":"967","severity":1,"message":"1035","line":19,"column":10,"nodeType":"969","messageId":"970","endLine":19,"endColumn":35},{"ruleId":"967","severity":1,"message":"998","line":20,"column":33,"nodeType":"969","messageId":"970","endLine":20,"endColumn":39},{"ruleId":"980","severity":1,"message":"1036","line":31,"column":6,"nodeType":"982","endLine":31,"endColumn":8,"suggestions":"1037"},{"ruleId":"967","severity":1,"message":"1020","line":6,"column":3,"nodeType":"969","messageId":"970","endLine":6,"endColumn":9},{"ruleId":"967","severity":1,"message":"1038","line":7,"column":3,"nodeType":"969","messageId":"970","endLine":7,"endColumn":9},{"ruleId":"967","severity":1,"message":"1039","line":8,"column":3,"nodeType":"969","messageId":"970","endLine":8,"endColumn":11},{"ruleId":"967","severity":1,"message":"1040","line":12,"column":3,"nodeType":"969","messageId":"970","endLine":12,"endColumn":7},{"ruleId":"967","severity":1,"message":"1041","line":22,"column":10,"nodeType":"969","messageId":"970","endLine":22,"endColumn":16},{"ruleId":"967","severity":1,"message":"1042","line":22,"column":18,"nodeType":"969","messageId":"970","endLine":22,"endColumn":23},{"ruleId":"967","severity":1,"message":"1043","line":22,"column":25,"nodeType":"969","messageId":"970","endLine":22,"endColumn":34},{"ruleId":"967","severity":1,"message":"1044","line":25,"column":8,"nodeType":"969","messageId":"970","endLine":25,"endColumn":20},{"ruleId":"967","severity":1,"message":"1045","line":27,"column":10,"nodeType":"969","messageId":"970","endLine":27,"endColumn":29},{"ruleId":"980","severity":1,"message":"1036","line":38,"column":6,"nodeType":"982","endLine":38,"endColumn":8,"suggestions":"1046"},{"ruleId":"967","severity":1,"message":"1047","line":44,"column":11,"nodeType":"969","messageId":"970","endLine":44,"endColumn":16},{"ruleId":"1027","severity":1,"message":"1028","line":81,"column":31,"nodeType":"977","endLine":81,"endColumn":34},{"ruleId":"967","severity":1,"message":"1032","line":5,"column":10,"nodeType":"969","messageId":"970","endLine":5,"endColumn":18},{"ruleId":"967","severity":1,"message":"1048","line":6,"column":21,"nodeType":"969","messageId":"970","endLine":6,"endColumn":28},{"ruleId":"967","severity":1,"message":"1049","line":11,"column":8,"nodeType":"969","messageId":"970","endLine":11,"endColumn":26},{"ruleId":"967","severity":1,"message":"1002","line":6,"column":8,"nodeType":"969","messageId":"970","endLine":6,"endColumn":20},{"ruleId":"967","severity":1,"message":"1020","line":10,"column":3,"nodeType":"969","messageId":"970","endLine":10,"endColumn":9},{"ruleId":"967","severity":1,"message":"1050","line":11,"column":3,"nodeType":"969","messageId":"970","endLine":11,"endColumn":10},{"ruleId":"967","severity":1,"message":"1051","line":14,"column":3,"nodeType":"969","messageId":"970","endLine":14,"endColumn":7},{"ruleId":"967","severity":1,"message":"1052","line":18,"column":3,"nodeType":"969","messageId":"970","endLine":18,"endColumn":8},{"ruleId":"967","severity":1,"message":"1012","line":20,"column":10,"nodeType":"969","messageId":"970","endLine":20,"endColumn":16},{"ruleId":"967","severity":1,"message":"1053","line":23,"column":8,"nodeType":"969","messageId":"970","endLine":23,"endColumn":19},{"ruleId":"967","severity":1,"message":"1054","line":28,"column":9,"nodeType":"969","messageId":"970","endLine":28,"endColumn":13},{"ruleId":"980","severity":1,"message":"1055","line":42,"column":6,"nodeType":"982","endLine":42,"endColumn":10,"suggestions":"1056"},{"ruleId":"967","severity":1,"message":"1057","line":14,"column":3,"nodeType":"969","messageId":"970","endLine":14,"endColumn":14},{"ruleId":"967","severity":1,"message":"1058","line":15,"column":3,"nodeType":"969","messageId":"970","endLine":15,"endColumn":11},{"ruleId":"967","severity":1,"message":"1047","line":34,"column":11,"nodeType":"969","messageId":"970","endLine":34,"endColumn":16},{"ruleId":"980","severity":1,"message":"1059","line":44,"column":6,"nodeType":"982","endLine":44,"endColumn":10,"suggestions":"1060"},{"ruleId":"1027","severity":1,"message":"1028","line":89,"column":31,"nodeType":"977","endLine":89,"endColumn":34},{"ruleId":"967","severity":1,"message":"1061","line":5,"column":8,"nodeType":"969","messageId":"970","endLine":5,"endColumn":13},{"ruleId":"967","severity":1,"message":"1041","line":31,"column":12,"nodeType":"969","messageId":"970","endLine":31,"endColumn":18},{"ruleId":"967","severity":1,"message":"1031","line":51,"column":5,"nodeType":"969","messageId":"970","endLine":51,"endColumn":10},{"ruleId":"967","severity":1,"message":"1062","line":55,"column":5,"nodeType":"969","messageId":"970","endLine":55,"endColumn":19},{"ruleId":"980","severity":1,"message":"1036","line":105,"column":6,"nodeType":"982","endLine":105,"endColumn":17,"suggestions":"1063"},{"ruleId":"967","severity":1,"message":"1064","line":21,"column":3,"nodeType":"969","messageId":"970","endLine":21,"endColumn":7},{"ruleId":"967","severity":1,"message":"1065","line":28,"column":3,"nodeType":"969","messageId":"970","endLine":28,"endColumn":11},{"ruleId":"980","severity":1,"message":"1066","line":49,"column":6,"nodeType":"982","endLine":49,"endColumn":16,"suggestions":"1067"},{"ruleId":"980","severity":1,"message":"1068","line":59,"column":6,"nodeType":"982","endLine":59,"endColumn":8,"suggestions":"1069"},{"ruleId":"967","severity":1,"message":"1023","line":60,"column":21,"nodeType":"969","messageId":"970","endLine":60,"endColumn":25},{"ruleId":"980","severity":1,"message":"1070","line":63,"column":6,"nodeType":"982","endLine":63,"endColumn":16,"suggestions":"1071"},{"ruleId":"967","severity":1,"message":"1072","line":69,"column":29,"nodeType":"969","messageId":"970","endLine":69,"endColumn":31},{"ruleId":"967","severity":1,"message":"1026","line":86,"column":17,"nodeType":"969","messageId":"970","endLine":86,"endColumn":20},{"ruleId":"1073","severity":1,"message":"1074","line":88,"column":29,"nodeType":"1075","messageId":"1076","endLine":88,"endColumn":31},{"ruleId":"967","severity":1,"message":"1077","line":99,"column":19,"nodeType":"969","messageId":"970","endLine":99,"endColumn":23},{"ruleId":"967","severity":1,"message":"1078","line":122,"column":10,"nodeType":"969","messageId":"970","endLine":122,"endColumn":18},{"ruleId":"967","severity":1,"message":"1079","line":128,"column":9,"nodeType":"969","messageId":"970","endLine":128,"endColumn":20},{"ruleId":"967","severity":1,"message":"1026","line":133,"column":13,"nodeType":"969","messageId":"970","endLine":133,"endColumn":16},{"ruleId":"967","severity":1,"message":"1026","line":144,"column":13,"nodeType":"969","messageId":"970","endLine":144,"endColumn":16},{"ruleId":"1027","severity":1,"message":"1028","line":186,"column":23,"nodeType":"977","endLine":186,"endColumn":26},{"ruleId":"967","severity":1,"message":"1080","line":2,"column":24,"nodeType":"969","messageId":"970","endLine":2,"endColumn":29},{"ruleId":"967","severity":1,"message":"1081","line":22,"column":10,"nodeType":"969","messageId":"970","endLine":22,"endColumn":14},{"ruleId":"967","severity":1,"message":"1082","line":22,"column":16,"nodeType":"969","messageId":"970","endLine":22,"endColumn":23},{"ruleId":"967","severity":1,"message":"1031","line":23,"column":10,"nodeType":"969","messageId":"970","endLine":23,"endColumn":15},{"ruleId":"967","severity":1,"message":"1083","line":16,"column":13,"nodeType":"969","messageId":"970","endLine":16,"endColumn":16},{"ruleId":"967","severity":1,"message":"1084","line":31,"column":11,"nodeType":"969","messageId":"970","endLine":31,"endColumn":14},{"ruleId":"980","severity":1,"message":"1085","line":45,"column":6,"nodeType":"982","endLine":45,"endColumn":16,"suggestions":"1086"},{"ruleId":"967","severity":1,"message":"1023","line":51,"column":21,"nodeType":"969","messageId":"970","endLine":51,"endColumn":25},{"ruleId":"967","severity":1,"message":"1026","line":56,"column":13,"nodeType":"969","messageId":"970","endLine":56,"endColumn":16},{"ruleId":"1087","severity":1,"message":"1088","line":84,"column":11,"nodeType":"977","endLine":84,"endColumn":41},{"ruleId":"967","severity":1,"message":"1040","line":6,"column":3,"nodeType":"969","messageId":"970","endLine":6,"endColumn":7},{"ruleId":"967","severity":1,"message":"1015","line":7,"column":3,"nodeType":"969","messageId":"970","endLine":7,"endColumn":8},{"ruleId":"967","severity":1,"message":"1051","line":9,"column":3,"nodeType":"969","messageId":"970","endLine":9,"endColumn":7},{"ruleId":"967","severity":1,"message":"995","line":12,"column":3,"nodeType":"969","messageId":"970","endLine":12,"endColumn":12},{"ruleId":"967","severity":1,"message":"1089","line":13,"column":3,"nodeType":"969","messageId":"970","endLine":13,"endColumn":9},{"ruleId":"967","severity":1,"message":"1012","line":17,"column":10,"nodeType":"969","messageId":"970","endLine":17,"endColumn":16},{"ruleId":"967","severity":1,"message":"1090","line":23,"column":10,"nodeType":"969","messageId":"970","endLine":23,"endColumn":20},{"ruleId":"967","severity":1,"message":"1091","line":24,"column":8,"nodeType":"969","messageId":"970","endLine":24,"endColumn":15},{"ruleId":"967","severity":1,"message":"1092","line":30,"column":10,"nodeType":"969","messageId":"970","endLine":30,"endColumn":18},{"ruleId":"967","severity":1,"message":"1093","line":30,"column":20,"nodeType":"969","messageId":"970","endLine":30,"endColumn":31},{"ruleId":"1073","severity":1,"message":"1074","line":75,"column":34,"nodeType":"1075","messageId":"1076","endLine":75,"endColumn":36},{"ruleId":"980","severity":1,"message":"1055","line":85,"column":6,"nodeType":"982","endLine":85,"endColumn":10,"suggestions":"1094"},{"ruleId":"1073","severity":1,"message":"1074","line":109,"column":35,"nodeType":"1075","messageId":"1076","endLine":109,"endColumn":37},{"ruleId":"1073","severity":1,"message":"1074","line":120,"column":35,"nodeType":"1075","messageId":"1076","endLine":120,"endColumn":37},{"ruleId":"1073","severity":1,"message":"1074","line":133,"column":35,"nodeType":"1075","messageId":"1076","endLine":133,"endColumn":37},{"ruleId":"1073","severity":1,"message":"1074","line":144,"column":35,"nodeType":"1075","messageId":"1076","endLine":144,"endColumn":37},{"ruleId":"1073","severity":1,"message":"1095","line":152,"column":27,"nodeType":"1075","messageId":"1076","endLine":152,"endColumn":29},{"ruleId":"967","severity":1,"message":"1096","line":31,"column":9,"nodeType":"969","messageId":"970","endLine":31,"endColumn":15},{"ruleId":"980","severity":1,"message":"1097","line":37,"column":6,"nodeType":"982","endLine":37,"endColumn":16,"suggestions":"1098"},{"ruleId":"967","severity":1,"message":"1023","line":43,"column":21,"nodeType":"969","messageId":"970","endLine":43,"endColumn":25},{"ruleId":"967","severity":1,"message":"1026","line":47,"column":13,"nodeType":"969","messageId":"970","endLine":47,"endColumn":16},{"ruleId":"1087","severity":1,"message":"1088","line":73,"column":11,"nodeType":"977","endLine":73,"endColumn":41},{"ruleId":"967","severity":1,"message":"1099","line":4,"column":46,"nodeType":"969","messageId":"970","endLine":4,"endColumn":53},{"ruleId":"980","severity":1,"message":"1100","line":26,"column":7,"nodeType":"982","endLine":26,"endColumn":9,"suggestions":"1101"},{"ruleId":"967","severity":1,"message":"1020","line":4,"column":10,"nodeType":"969","messageId":"970","endLine":4,"endColumn":16},{"ruleId":"967","severity":1,"message":"1102","line":4,"column":18,"nodeType":"969","messageId":"970","endLine":4,"endColumn":22},{"ruleId":"967","severity":1,"message":"1040","line":4,"column":47,"nodeType":"969","messageId":"970","endLine":4,"endColumn":51},{"ruleId":"967","severity":1,"message":"1015","line":4,"column":53,"nodeType":"969","messageId":"970","endLine":4,"endColumn":58},{"ruleId":"967","severity":1,"message":"1080","line":4,"column":60,"nodeType":"969","messageId":"970","endLine":4,"endColumn":65},{"ruleId":"967","severity":1,"message":"1103","line":5,"column":10,"nodeType":"969","messageId":"970","endLine":5,"endColumn":30},{"ruleId":"967","severity":1,"message":"998","line":9,"column":20,"nodeType":"969","messageId":"970","endLine":9,"endColumn":26},{"ruleId":"967","severity":1,"message":"1104","line":10,"column":3,"nodeType":"969","messageId":"970","endLine":10,"endColumn":9},{"ruleId":"967","severity":1,"message":"1105","line":11,"column":3,"nodeType":"969","messageId":"970","endLine":11,"endColumn":8},{"ruleId":"967","severity":1,"message":"1106","line":29,"column":11,"nodeType":"969","messageId":"970","endLine":29,"endColumn":22},{"ruleId":"980","severity":1,"message":"1055","line":40,"column":8,"nodeType":"982","endLine":40,"endColumn":12,"suggestions":"1107"},{"ruleId":"967","severity":1,"message":"1108","line":18,"column":10,"nodeType":"969","messageId":"970","endLine":18,"endColumn":14},{"ruleId":"967","severity":1,"message":"1109","line":18,"column":17,"nodeType":"969","messageId":"970","endLine":18,"endColumn":24},{"ruleId":"967","severity":1,"message":"1110","line":51,"column":9,"nodeType":"969","messageId":"970","endLine":51,"endColumn":23},{"ruleId":"967","severity":1,"message":"1032","line":2,"column":28,"nodeType":"969","messageId":"970","endLine":2,"endColumn":36},{"ruleId":"967","severity":1,"message":"1111","line":8,"column":3,"nodeType":"969","messageId":"970","endLine":8,"endColumn":12},{"ruleId":"967","severity":1,"message":"1112","line":17,"column":3,"nodeType":"969","messageId":"970","endLine":17,"endColumn":10},{"ruleId":"967","severity":1,"message":"1113","line":23,"column":3,"nodeType":"969","messageId":"970","endLine":23,"endColumn":21},{"ruleId":"967","severity":1,"message":"1114","line":24,"column":3,"nodeType":"969","messageId":"970","endLine":24,"endColumn":19},{"ruleId":"967","severity":1,"message":"1115","line":26,"column":3,"nodeType":"969","messageId":"970","endLine":26,"endColumn":19},{"ruleId":"967","severity":1,"message":"1116","line":28,"column":3,"nodeType":"969","messageId":"970","endLine":28,"endColumn":18},{"ruleId":"980","severity":1,"message":"1117","line":51,"column":6,"nodeType":"982","endLine":51,"endColumn":8,"suggestions":"1118"},{"ruleId":"967","severity":1,"message":"1020","line":4,"column":10,"nodeType":"969","messageId":"970","endLine":4,"endColumn":16},{"ruleId":"967","severity":1,"message":"1111","line":4,"column":17,"nodeType":"969","messageId":"970","endLine":4,"endColumn":26},{"ruleId":"967","severity":1,"message":"1040","line":4,"column":28,"nodeType":"969","messageId":"970","endLine":4,"endColumn":32},{"ruleId":"967","severity":1,"message":"1119","line":4,"column":43,"nodeType":"969","messageId":"970","endLine":4,"endColumn":47},{"ruleId":"967","severity":1,"message":"1052","line":4,"column":49,"nodeType":"969","messageId":"970","endLine":4,"endColumn":54},{"ruleId":"967","severity":1,"message":"997","line":4,"column":63,"nodeType":"969","messageId":"970","endLine":4,"endColumn":70},{"ruleId":"980","severity":1,"message":"1117","line":32,"column":10,"nodeType":"982","endLine":32,"endColumn":12,"suggestions":"1120"},{"ruleId":"967","severity":1,"message":"1121","line":2,"column":8,"nodeType":"969","messageId":"970","endLine":2,"endColumn":19},{"ruleId":"967","severity":1,"message":"1020","line":7,"column":3,"nodeType":"969","messageId":"970","endLine":7,"endColumn":9},{"ruleId":"967","severity":1,"message":"1015","line":14,"column":3,"nodeType":"969","messageId":"970","endLine":14,"endColumn":8},{"ruleId":"967","severity":1,"message":"1122","line":36,"column":9,"nodeType":"969","messageId":"970","endLine":36,"endColumn":19},{"ruleId":"980","severity":1,"message":"1123","line":56,"column":6,"nodeType":"982","endLine":56,"endColumn":10,"suggestions":"1124"},{"ruleId":"967","severity":1,"message":"1064","line":2,"column":20,"nodeType":"969","messageId":"970","endLine":2,"endColumn":24},{"ruleId":"967","severity":1,"message":"1033","line":6,"column":3,"nodeType":"969","messageId":"970","endLine":6,"endColumn":7},{"ruleId":"967","severity":1,"message":"1040","line":9,"column":3,"nodeType":"969","messageId":"970","endLine":9,"endColumn":7},{"ruleId":"1073","severity":1,"message":"1074","line":62,"column":27,"nodeType":"1075","messageId":"1076","endLine":62,"endColumn":29},{"ruleId":"967","severity":1,"message":"1125","line":16,"column":23,"nodeType":"969","messageId":"970","endLine":16,"endColumn":34},{"ruleId":"967","severity":1,"message":"1126","line":22,"column":10,"nodeType":"969","messageId":"970","endLine":22,"endColumn":25},{"ruleId":"967","severity":1,"message":"1031","line":33,"column":10,"nodeType":"969","messageId":"970","endLine":33,"endColumn":15},{"ruleId":"967","severity":1,"message":"994","line":2,"column":17,"nodeType":"969","messageId":"970","endLine":2,"endColumn":26},{"ruleId":"967","severity":1,"message":"1127","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":21},{"ruleId":"967","severity":1,"message":"1125","line":3,"column":23,"nodeType":"969","messageId":"970","endLine":3,"endColumn":34},{"ruleId":"967","severity":1,"message":"1020","line":5,"column":10,"nodeType":"969","messageId":"970","endLine":5,"endColumn":16},{"ruleId":"967","severity":1,"message":"1052","line":5,"column":47,"nodeType":"969","messageId":"970","endLine":5,"endColumn":52},{"ruleId":"967","severity":1,"message":"1111","line":5,"column":63,"nodeType":"969","messageId":"970","endLine":5,"endColumn":72},{"ruleId":"967","severity":1,"message":"1128","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":22},{"ruleId":"967","severity":1,"message":"994","line":2,"column":17,"nodeType":"969","messageId":"970","endLine":2,"endColumn":26},{"ruleId":"967","severity":1,"message":"1127","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":21},{"ruleId":"967","severity":1,"message":"1125","line":3,"column":23,"nodeType":"969","messageId":"970","endLine":3,"endColumn":34},{"ruleId":"967","severity":1,"message":"1020","line":5,"column":10,"nodeType":"969","messageId":"970","endLine":5,"endColumn":16},{"ruleId":"967","severity":1,"message":"1052","line":5,"column":47,"nodeType":"969","messageId":"970","endLine":5,"endColumn":52},{"ruleId":"967","severity":1,"message":"1111","line":5,"column":63,"nodeType":"969","messageId":"970","endLine":5,"endColumn":72},{"ruleId":"967","severity":1,"message":"1128","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":22},{"ruleId":"967","severity":1,"message":"994","line":2,"column":17,"nodeType":"969","messageId":"970","endLine":2,"endColumn":26},{"ruleId":"967","severity":1,"message":"1127","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":21},{"ruleId":"967","severity":1,"message":"1125","line":3,"column":23,"nodeType":"969","messageId":"970","endLine":3,"endColumn":34},{"ruleId":"967","severity":1,"message":"1020","line":5,"column":10,"nodeType":"969","messageId":"970","endLine":5,"endColumn":16},{"ruleId":"967","severity":1,"message":"1052","line":5,"column":47,"nodeType":"969","messageId":"970","endLine":5,"endColumn":52},{"ruleId":"967","severity":1,"message":"1111","line":5,"column":63,"nodeType":"969","messageId":"970","endLine":5,"endColumn":72},{"ruleId":"967","severity":1,"message":"1128","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":22},{"ruleId":"967","severity":1,"message":"994","line":2,"column":17,"nodeType":"969","messageId":"970","endLine":2,"endColumn":26},{"ruleId":"967","severity":1,"message":"1127","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":21},{"ruleId":"967","severity":1,"message":"1125","line":3,"column":23,"nodeType":"969","messageId":"970","endLine":3,"endColumn":34},{"ruleId":"967","severity":1,"message":"1020","line":5,"column":10,"nodeType":"969","messageId":"970","endLine":5,"endColumn":16},{"ruleId":"967","severity":1,"message":"1052","line":5,"column":47,"nodeType":"969","messageId":"970","endLine":5,"endColumn":52},{"ruleId":"967","severity":1,"message":"1111","line":5,"column":63,"nodeType":"969","messageId":"970","endLine":5,"endColumn":72},{"ruleId":"967","severity":1,"message":"1128","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":22},{"ruleId":"967","severity":1,"message":"1129","line":2,"column":8,"nodeType":"969","messageId":"970","endLine":2,"endColumn":16},{"ruleId":"967","severity":1,"message":"1061","line":5,"column":8,"nodeType":"969","messageId":"970","endLine":5,"endColumn":13},{"ruleId":"967","severity":1,"message":"1130","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":23},{"ruleId":"967","severity":1,"message":"1131","line":6,"column":25,"nodeType":"969","messageId":"970","endLine":6,"endColumn":35},{"ruleId":"967","severity":1,"message":"1127","line":7,"column":10,"nodeType":"969","messageId":"970","endLine":7,"endColumn":21},{"ruleId":"967","severity":1,"message":"1132","line":12,"column":20,"nodeType":"969","messageId":"970","endLine":12,"endColumn":27},{"ruleId":"967","severity":1,"message":"1133","line":4,"column":3,"nodeType":"969","messageId":"970","endLine":4,"endColumn":7},{"ruleId":"967","severity":1,"message":"1121","line":21,"column":8,"nodeType":"969","messageId":"970","endLine":21,"endColumn":19},{"ruleId":"967","severity":1,"message":"1134","line":22,"column":8,"nodeType":"969","messageId":"970","endLine":22,"endColumn":18},{"ruleId":"967","severity":1,"message":"1135","line":25,"column":10,"nodeType":"969","messageId":"970","endLine":25,"endColumn":21},{"ruleId":"967","severity":1,"message":"1136","line":25,"column":23,"nodeType":"969","messageId":"970","endLine":25,"endColumn":37},{"ruleId":"967","severity":1,"message":"1137","line":29,"column":10,"nodeType":"969","messageId":"970","endLine":29,"endColumn":16},{"ruleId":"967","severity":1,"message":"1138","line":31,"column":10,"nodeType":"969","messageId":"970","endLine":31,"endColumn":22},{"ruleId":"967","severity":1,"message":"1139","line":31,"column":24,"nodeType":"969","messageId":"970","endLine":31,"endColumn":39},{"ruleId":"967","severity":1,"message":"1140","line":46,"column":10,"nodeType":"969","messageId":"970","endLine":46,"endColumn":15},{"ruleId":"967","severity":1,"message":"1141","line":46,"column":17,"nodeType":"969","messageId":"970","endLine":46,"endColumn":25},{"ruleId":"967","severity":1,"message":"1142","line":12,"column":18,"nodeType":"969","messageId":"970","endLine":12,"endColumn":29},{"ruleId":"967","severity":1,"message":"1132","line":13,"column":17,"nodeType":"969","messageId":"970","endLine":13,"endColumn":24},{"ruleId":"1143","severity":1,"message":"1144","line":50,"column":9,"nodeType":"1145","messageId":"1146","endLine":64,"endColumn":10},{"ruleId":"967","severity":1,"message":"1147","line":91,"column":10,"nodeType":"969","messageId":"970","endLine":91,"endColumn":15},{"ruleId":"967","severity":1,"message":"1148","line":91,"column":17,"nodeType":"969","messageId":"970","endLine":91,"endColumn":25},{"ruleId":"967","severity":1,"message":"1149","line":92,"column":9,"nodeType":"969","messageId":"970","endLine":92,"endColumn":22},{"ruleId":"967","severity":1,"message":"1150","line":118,"column":10,"nodeType":"969","messageId":"970","endLine":118,"endColumn":22},{"ruleId":"967","severity":1,"message":"1151","line":118,"column":24,"nodeType":"969","messageId":"970","endLine":118,"endColumn":39},{"ruleId":"967","severity":1,"message":"1033","line":2,"column":20,"nodeType":"969","messageId":"970","endLine":2,"endColumn":24},{"ruleId":"967","severity":1,"message":"1040","line":2,"column":26,"nodeType":"969","messageId":"970","endLine":2,"endColumn":30},{"ruleId":"967","severity":1,"message":"1033","line":2,"column":20,"nodeType":"969","messageId":"970","endLine":2,"endColumn":24},{"ruleId":"967","severity":1,"message":"1040","line":2,"column":26,"nodeType":"969","messageId":"970","endLine":2,"endColumn":30},{"ruleId":"967","severity":1,"message":"1152","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":21},{"ruleId":"967","severity":1,"message":"1039","line":8,"column":3,"nodeType":"969","messageId":"970","endLine":8,"endColumn":11},{"ruleId":"967","severity":1,"message":"1153","line":12,"column":3,"nodeType":"969","messageId":"970","endLine":12,"endColumn":7},{"ruleId":"967","severity":1,"message":"1052","line":15,"column":3,"nodeType":"969","messageId":"970","endLine":15,"endColumn":8},{"ruleId":"967","severity":1,"message":"1147","line":41,"column":10,"nodeType":"969","messageId":"970","endLine":41,"endColumn":15},{"ruleId":"967","severity":1,"message":"1148","line":41,"column":17,"nodeType":"969","messageId":"970","endLine":41,"endColumn":25},{"ruleId":"967","severity":1,"message":"1121","line":2,"column":8,"nodeType":"969","messageId":"970","endLine":2,"endColumn":19},{"ruleId":"967","severity":1,"message":"1125","line":3,"column":23,"nodeType":"969","messageId":"970","endLine":3,"endColumn":34},{"ruleId":"967","severity":1,"message":"1064","line":10,"column":3,"nodeType":"969","messageId":"970","endLine":10,"endColumn":7},{"ruleId":"967","severity":1,"message":"1089","line":11,"column":3,"nodeType":"969","messageId":"970","endLine":11,"endColumn":9},{"ruleId":"967","severity":1,"message":"1154","line":16,"column":3,"nodeType":"969","messageId":"970","endLine":16,"endColumn":9},{"ruleId":"967","severity":1,"message":"997","line":17,"column":3,"nodeType":"969","messageId":"970","endLine":17,"endColumn":10},{"ruleId":"967","severity":1,"message":"1012","line":19,"column":10,"nodeType":"969","messageId":"970","endLine":19,"endColumn":16},{"ruleId":"967","severity":1,"message":"1155","line":22,"column":8,"nodeType":"969","messageId":"970","endLine":22,"endColumn":21},{"ruleId":"967","severity":1,"message":"1156","line":26,"column":10,"nodeType":"969","messageId":"970","endLine":26,"endColumn":15},{"ruleId":"967","severity":1,"message":"1157","line":26,"column":17,"nodeType":"969","messageId":"970","endLine":26,"endColumn":25},{"ruleId":"967","severity":1,"message":"1158","line":27,"column":10,"nodeType":"969","messageId":"970","endLine":27,"endColumn":13},{"ruleId":"967","severity":1,"message":"1159","line":27,"column":15,"nodeType":"969","messageId":"970","endLine":27,"endColumn":24},{"ruleId":"980","severity":1,"message":"1055","line":46,"column":6,"nodeType":"982","endLine":46,"endColumn":10,"suggestions":"1160"},{"ruleId":"967","severity":1,"message":"994","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":26},{"ruleId":"967","severity":1,"message":"1032","line":1,"column":28,"nodeType":"969","messageId":"970","endLine":1,"endColumn":36},{"ruleId":"967","severity":1,"message":"1125","line":2,"column":23,"nodeType":"969","messageId":"970","endLine":2,"endColumn":34},{"ruleId":"967","severity":1,"message":"1089","line":4,"column":30,"nodeType":"969","messageId":"970","endLine":4,"endColumn":36},{"ruleId":"967","severity":1,"message":"1080","line":4,"column":51,"nodeType":"969","messageId":"970","endLine":4,"endColumn":56},{"ruleId":"967","severity":1,"message":"997","line":4,"column":71,"nodeType":"969","messageId":"970","endLine":4,"endColumn":78},{"ruleId":"967","severity":1,"message":"1161","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":26},{"ruleId":"967","severity":1,"message":"1162","line":9,"column":7,"nodeType":"969","messageId":"970","endLine":9,"endColumn":11},{"ruleId":"967","severity":1,"message":"1163","line":1,"column":10,"nodeType":"969","messageId":"970","endLine":1,"endColumn":13},{"ruleId":"967","severity":1,"message":"1164","line":4,"column":33,"nodeType":"969","messageId":"970","endLine":4,"endColumn":36},{"ruleId":"967","severity":1,"message":"1165","line":5,"column":10,"nodeType":"969","messageId":"970","endLine":5,"endColumn":15},{"ruleId":"967","severity":1,"message":"1166","line":10,"column":10,"nodeType":"969","messageId":"970","endLine":10,"endColumn":17},{"ruleId":"967","severity":1,"message":"1167","line":10,"column":19,"nodeType":"969","messageId":"970","endLine":10,"endColumn":33},{"ruleId":"980","severity":1,"message":"1168","line":13,"column":3,"nodeType":"969","endLine":13,"endColumn":12,"suggestions":"1169"},{"ruleId":"967","severity":1,"message":"1170","line":31,"column":11,"nodeType":"969","messageId":"970","endLine":31,"endColumn":15},{"ruleId":"967","severity":1,"message":"1171","line":33,"column":11,"nodeType":"969","messageId":"970","endLine":33,"endColumn":17},{"ruleId":"980","severity":1,"message":"1172","line":52,"column":3,"nodeType":"969","endLine":52,"endColumn":12,"suggestions":"1173"},{"ruleId":"980","severity":1,"message":"1174","line":52,"column":13,"nodeType":"1175","endLine":75,"endColumn":4},{"ruleId":"967","severity":1,"message":"1026","line":61,"column":13,"nodeType":"969","messageId":"970","endLine":61,"endColumn":16},{"ruleId":"967","severity":1,"message":"994","line":1,"column":20,"nodeType":"969","messageId":"970","endLine":1,"endColumn":29},{"ruleId":"967","severity":1,"message":"1125","line":2,"column":23,"nodeType":"969","messageId":"970","endLine":2,"endColumn":34},{"ruleId":"1027","severity":1,"message":"1028","line":24,"column":17,"nodeType":"977","endLine":24,"endColumn":20},{"ruleId":"1027","severity":1,"message":"1028","line":45,"column":17,"nodeType":"977","endLine":45,"endColumn":20},{"ruleId":"1027","severity":1,"message":"1028","line":62,"column":21,"nodeType":"977","endLine":62,"endColumn":24},{"ruleId":"1027","severity":1,"message":"1028","line":81,"column":17,"nodeType":"977","endLine":81,"endColumn":20},{"ruleId":"967","severity":1,"message":"994","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":26},{"ruleId":"967","severity":1,"message":"1176","line":9,"column":10,"nodeType":"969","messageId":"970","endLine":9,"endColumn":24},{"ruleId":"967","severity":1,"message":"1134","line":10,"column":8,"nodeType":"969","messageId":"970","endLine":10,"endColumn":18},{"ruleId":"967","severity":1,"message":"1177","line":19,"column":9,"nodeType":"969","messageId":"970","endLine":19,"endColumn":24},{"ruleId":"967","severity":1,"message":"1079","line":23,"column":9,"nodeType":"969","messageId":"970","endLine":23,"endColumn":20},{"ruleId":"967","severity":1,"message":"1178","line":41,"column":10,"nodeType":"969","messageId":"970","endLine":41,"endColumn":12},{"ruleId":"1073","severity":1,"message":"1074","line":60,"column":27,"nodeType":"1075","messageId":"1076","endLine":60,"endColumn":29},{"ruleId":"967","severity":1,"message":"1015","line":9,"column":3,"nodeType":"969","messageId":"970","endLine":9,"endColumn":8},{"ruleId":"967","severity":1,"message":"1052","line":10,"column":3,"nodeType":"969","messageId":"970","endLine":10,"endColumn":8},{"ruleId":"980","severity":1,"message":"1179","line":34,"column":6,"nodeType":"982","endLine":34,"endColumn":16,"suggestions":"1180"},{"ruleId":"967","severity":1,"message":"1072","line":35,"column":21,"nodeType":"969","messageId":"970","endLine":35,"endColumn":23},{"ruleId":"967","severity":1,"message":"1026","line":57,"column":17,"nodeType":"969","messageId":"970","endLine":57,"endColumn":20},{"ruleId":"967","severity":1,"message":"1026","line":72,"column":13,"nodeType":"969","messageId":"970","endLine":72,"endColumn":16},{"ruleId":"967","severity":1,"message":"1164","line":7,"column":3,"nodeType":"969","messageId":"970","endLine":7,"endColumn":6},{"ruleId":"967","severity":1,"message":"1170","line":33,"column":11,"nodeType":"969","messageId":"970","endLine":33,"endColumn":15},{"ruleId":"967","severity":1,"message":"1171","line":35,"column":11,"nodeType":"969","messageId":"970","endLine":35,"endColumn":17},{"ruleId":"980","severity":1,"message":"1181","line":50,"column":3,"nodeType":"969","endLine":50,"endColumn":12,"suggestions":"1182"},{"ruleId":"980","severity":1,"message":"1174","line":50,"column":13,"nodeType":"1175","endLine":79,"endColumn":4},{"ruleId":"967","severity":1,"message":"1039","line":9,"column":3,"nodeType":"969","messageId":"970","endLine":9,"endColumn":11},{"ruleId":"967","severity":1,"message":"1183","line":14,"column":3,"nodeType":"969","messageId":"970","endLine":14,"endColumn":9},{"ruleId":"967","severity":1,"message":"994","line":16,"column":20,"nodeType":"969","messageId":"970","endLine":16,"endColumn":29},{"ruleId":"967","severity":1,"message":"1184","line":25,"column":18,"nodeType":"969","messageId":"970","endLine":25,"endColumn":25},{"ruleId":"967","severity":1,"message":"1185","line":36,"column":10,"nodeType":"969","messageId":"970","endLine":36,"endColumn":17},{"ruleId":"967","severity":1,"message":"1186","line":36,"column":19,"nodeType":"969","messageId":"970","endLine":36,"endColumn":30},{"ruleId":"967","severity":1,"message":"1187","line":37,"column":10,"nodeType":"969","messageId":"970","endLine":37,"endColumn":22},{"ruleId":"967","severity":1,"message":"1188","line":37,"column":24,"nodeType":"969","messageId":"970","endLine":37,"endColumn":39},{"ruleId":"967","severity":1,"message":"1189","line":85,"column":11,"nodeType":"969","messageId":"970","endLine":85,"endColumn":14},{"ruleId":"967","severity":1,"message":"1077","line":100,"column":15,"nodeType":"969","messageId":"970","endLine":100,"endColumn":19},{"ruleId":"967","severity":1,"message":"1125","line":3,"column":23,"nodeType":"969","messageId":"970","endLine":3,"endColumn":34},{"ruleId":"967","severity":1,"message":"1190","line":9,"column":3,"nodeType":"969","messageId":"970","endLine":9,"endColumn":13},{"ruleId":"967","severity":1,"message":"1188","line":16,"column":24,"nodeType":"969","messageId":"970","endLine":16,"endColumn":39},{"ruleId":"980","severity":1,"message":"1191","line":34,"column":6,"nodeType":"982","endLine":34,"endColumn":16,"suggestions":"1192"},{"ruleId":"967","severity":1,"message":"1193","line":15,"column":3,"nodeType":"969","messageId":"970","endLine":15,"endColumn":8},{"ruleId":"967","severity":1,"message":"1185","line":34,"column":10,"nodeType":"969","messageId":"970","endLine":34,"endColumn":17},{"ruleId":"967","severity":1,"message":"1186","line":34,"column":19,"nodeType":"969","messageId":"970","endLine":34,"endColumn":30},{"ruleId":"967","severity":1,"message":"1187","line":35,"column":10,"nodeType":"969","messageId":"970","endLine":35,"endColumn":22},{"ruleId":"967","severity":1,"message":"1188","line":35,"column":24,"nodeType":"969","messageId":"970","endLine":35,"endColumn":39},{"ruleId":"980","severity":1,"message":"1194","line":69,"column":6,"nodeType":"982","endLine":69,"endColumn":16,"suggestions":"1195"},{"ruleId":"967","severity":1,"message":"1196","line":152,"column":13,"nodeType":"969","messageId":"970","endLine":152,"endColumn":17},{"ruleId":"967","severity":1,"message":"1197","line":152,"column":19,"nodeType":"969","messageId":"970","endLine":152,"endColumn":26},{"ruleId":"967","severity":1,"message":"1198","line":152,"column":28,"nodeType":"969","messageId":"970","endLine":152,"endColumn":34},{"ruleId":"1199","severity":1,"message":"1200","line":292,"column":67,"nodeType":"1075","messageId":"1201","endLine":292,"endColumn":68},{"ruleId":"967","severity":1,"message":"1202","line":7,"column":8,"nodeType":"969","messageId":"970","endLine":7,"endColumn":18},{"ruleId":"967","severity":1,"message":"1177","line":16,"column":9,"nodeType":"969","messageId":"970","endLine":16,"endColumn":24},{"ruleId":"967","severity":1,"message":"1079","line":20,"column":9,"nodeType":"969","messageId":"970","endLine":20,"endColumn":20},{"ruleId":"980","severity":1,"message":"1203","line":26,"column":6,"nodeType":"982","endLine":26,"endColumn":16,"suggestions":"1204"},{"ruleId":"967","severity":1,"message":"1205","line":27,"column":10,"nodeType":"969","messageId":"970","endLine":27,"endColumn":19},{"ruleId":"967","severity":1,"message":"1072","line":27,"column":21,"nodeType":"969","messageId":"970","endLine":27,"endColumn":23},{"ruleId":"967","severity":1,"message":"1206","line":28,"column":10,"nodeType":"969","messageId":"970","endLine":28,"endColumn":14},{"ruleId":"967","severity":1,"message":"1207","line":28,"column":16,"nodeType":"969","messageId":"970","endLine":28,"endColumn":23},{"ruleId":"967","severity":1,"message":"1208","line":29,"column":12,"nodeType":"969","messageId":"970","endLine":29,"endColumn":25},{"ruleId":"967","severity":1,"message":"1026","line":44,"column":15,"nodeType":"969","messageId":"970","endLine":44,"endColumn":18},{"ruleId":"967","severity":1,"message":"1209","line":9,"column":9,"nodeType":"969","messageId":"970","endLine":9,"endColumn":21},{"ruleId":"967","severity":1,"message":"994","line":1,"column":20,"nodeType":"969","messageId":"970","endLine":1,"endColumn":29},{"ruleId":"967","severity":1,"message":"1125","line":2,"column":23,"nodeType":"969","messageId":"970","endLine":2,"endColumn":34},{"ruleId":"967","severity":1,"message":"1033","line":3,"column":28,"nodeType":"969","messageId":"970","endLine":3,"endColumn":32},{"ruleId":"967","severity":1,"message":"1040","line":3,"column":34,"nodeType":"969","messageId":"970","endLine":3,"endColumn":38},{"ruleId":"967","severity":1,"message":"1031","line":23,"column":7,"nodeType":"969","messageId":"970","endLine":23,"endColumn":12},{"ruleId":"967","severity":1,"message":"994","line":1,"column":20,"nodeType":"969","messageId":"970","endLine":1,"endColumn":29},{"ruleId":"967","severity":1,"message":"1125","line":2,"column":23,"nodeType":"969","messageId":"970","endLine":2,"endColumn":34},{"ruleId":"967","severity":1,"message":"1033","line":3,"column":28,"nodeType":"969","messageId":"970","endLine":3,"endColumn":32},{"ruleId":"967","severity":1,"message":"1040","line":3,"column":34,"nodeType":"969","messageId":"970","endLine":3,"endColumn":38},{"ruleId":"967","severity":1,"message":"1210","line":4,"column":10,"nodeType":"969","messageId":"970","endLine":4,"endColumn":22},{"ruleId":"967","severity":1,"message":"1211","line":6,"column":10,"nodeType":"969","messageId":"970","endLine":6,"endColumn":19},{"ruleId":"967","severity":1,"message":"1212","line":6,"column":21,"nodeType":"969","messageId":"970","endLine":6,"endColumn":33},{"ruleId":"967","severity":1,"message":"1032","line":2,"column":17,"nodeType":"969","messageId":"970","endLine":2,"endColumn":25},{"ruleId":"967","severity":1,"message":"1004","line":16,"column":22,"nodeType":"969","messageId":"970","endLine":16,"endColumn":25},{"ruleId":"980","severity":1,"message":"1213","line":23,"column":6,"nodeType":"982","endLine":23,"endColumn":16,"suggestions":"1214"},{"ruleId":"967","severity":1,"message":"1026","line":27,"column":13,"nodeType":"969","messageId":"970","endLine":27,"endColumn":16},{"ruleId":"967","severity":1,"message":"1026","line":37,"column":13,"nodeType":"969","messageId":"970","endLine":37,"endColumn":16},{"ruleId":"967","severity":1,"message":"1077","line":38,"column":13,"nodeType":"969","messageId":"970","endLine":38,"endColumn":17},{"ruleId":"1215","severity":1,"message":"1216","line":95,"column":15,"nodeType":"1217","endLine":99,"endColumn":17},{"ruleId":"1073","severity":1,"message":"1074","line":91,"column":29,"nodeType":"1075","messageId":"1076","endLine":91,"endColumn":31},{"ruleId":"967","severity":1,"message":"1218","line":12,"column":9,"nodeType":"969","messageId":"970","endLine":12,"endColumn":19},{"ruleId":"967","severity":1,"message":"1033","line":2,"column":28,"nodeType":"969","messageId":"970","endLine":2,"endColumn":32},{"ruleId":"967","severity":1,"message":"1040","line":2,"column":34,"nodeType":"969","messageId":"970","endLine":2,"endColumn":38},{"ruleId":"967","severity":1,"message":"1219","line":3,"column":8,"nodeType":"969","messageId":"970","endLine":3,"endColumn":15},{"ruleId":"967","severity":1,"message":"1081","line":7,"column":10,"nodeType":"969","messageId":"970","endLine":7,"endColumn":14},{"ruleId":"967","severity":1,"message":"1220","line":1,"column":8,"nodeType":"969","messageId":"970","endLine":1,"endColumn":14},{"ruleId":"967","severity":1,"message":"994","line":2,"column":17,"nodeType":"969","messageId":"970","endLine":2,"endColumn":26},{"ruleId":"967","severity":1,"message":"1125","line":3,"column":23,"nodeType":"969","messageId":"970","endLine":3,"endColumn":34},{"ruleId":"967","severity":1,"message":"1221","line":6,"column":28,"nodeType":"969","messageId":"970","endLine":6,"endColumn":37},{"ruleId":"967","severity":1,"message":"1083","line":8,"column":13,"nodeType":"969","messageId":"970","endLine":8,"endColumn":16},{"ruleId":"967","severity":1,"message":"1222","line":13,"column":7,"nodeType":"969","messageId":"970","endLine":13,"endColumn":15},{"ruleId":"967","severity":1,"message":"1178","line":18,"column":10,"nodeType":"969","messageId":"970","endLine":18,"endColumn":12},{"ruleId":"967","severity":1,"message":"1223","line":18,"column":14,"nodeType":"969","messageId":"970","endLine":18,"endColumn":19},{"ruleId":"967","severity":1,"message":"1224","line":28,"column":12,"nodeType":"969","messageId":"970","endLine":28,"endColumn":20},{"ruleId":"967","severity":1,"message":"1225","line":28,"column":23,"nodeType":"969","messageId":"970","endLine":28,"endColumn":34},{"ruleId":"967","severity":1,"message":"1026","line":63,"column":15,"nodeType":"969","messageId":"970","endLine":63,"endColumn":18},{"ruleId":"967","severity":1,"message":"1226","line":5,"column":27,"nodeType":"969","messageId":"970","endLine":5,"endColumn":43},{"ruleId":"967","severity":1,"message":"1115","line":5,"column":45,"nodeType":"969","messageId":"970","endLine":5,"endColumn":61},{"ruleId":"967","severity":1,"message":"1218","line":11,"column":11,"nodeType":"969","messageId":"970","endLine":11,"endColumn":21},{"ruleId":"1027","severity":1,"message":"1227","line":272,"column":11,"nodeType":"977","endLine":272,"endColumn":23},{"ruleId":"967","severity":1,"message":"994","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":26},{"ruleId":"967","severity":1,"message":"1152","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":21},{"ruleId":"967","severity":1,"message":"1153","line":12,"column":3,"nodeType":"969","messageId":"970","endLine":12,"endColumn":7},{"ruleId":"967","severity":1,"message":"997","line":13,"column":3,"nodeType":"969","messageId":"970","endLine":13,"endColumn":10},{"ruleId":"967","severity":1,"message":"1052","line":15,"column":3,"nodeType":"969","messageId":"970","endLine":15,"endColumn":8},{"ruleId":"967","severity":1,"message":"1228","line":25,"column":10,"nodeType":"969","messageId":"970","endLine":25,"endColumn":25},{"ruleId":"967","severity":1,"message":"1229","line":26,"column":10,"nodeType":"969","messageId":"970","endLine":26,"endColumn":21},{"ruleId":"967","severity":1,"message":"1230","line":49,"column":12,"nodeType":"969","messageId":"970","endLine":49,"endColumn":18},{"ruleId":"967","severity":1,"message":"1140","line":53,"column":12,"nodeType":"969","messageId":"970","endLine":53,"endColumn":17},{"ruleId":"967","severity":1,"message":"1141","line":53,"column":19,"nodeType":"969","messageId":"970","endLine":53,"endColumn":27},{"ruleId":"967","severity":1,"message":"1231","line":56,"column":26,"nodeType":"969","messageId":"970","endLine":56,"endColumn":41},{"ruleId":"967","severity":1,"message":"1232","line":85,"column":11,"nodeType":"969","messageId":"970","endLine":85,"endColumn":21},{"ruleId":"967","severity":1,"message":"1233","line":209,"column":11,"nodeType":"969","messageId":"970","endLine":209,"endColumn":26},{"ruleId":"967","severity":1,"message":"1061","line":1,"column":8,"nodeType":"969","messageId":"970","endLine":1,"endColumn":13},{"ruleId":"967","severity":1,"message":"994","line":2,"column":17,"nodeType":"969","messageId":"970","endLine":2,"endColumn":26},{"ruleId":"967","severity":1,"message":"1129","line":3,"column":8,"nodeType":"969","messageId":"970","endLine":3,"endColumn":16},{"ruleId":"967","severity":1,"message":"1125","line":4,"column":23,"nodeType":"969","messageId":"970","endLine":4,"endColumn":34},{"ruleId":"967","severity":1,"message":"1039","line":7,"column":3,"nodeType":"969","messageId":"970","endLine":7,"endColumn":11},{"ruleId":"967","severity":1,"message":"1033","line":8,"column":3,"nodeType":"969","messageId":"970","endLine":8,"endColumn":7},{"ruleId":"967","severity":1,"message":"1064","line":10,"column":3,"nodeType":"969","messageId":"970","endLine":10,"endColumn":7},{"ruleId":"967","severity":1,"message":"1089","line":11,"column":3,"nodeType":"969","messageId":"970","endLine":11,"endColumn":9},{"ruleId":"967","severity":1,"message":"1015","line":13,"column":3,"nodeType":"969","messageId":"970","endLine":13,"endColumn":8},{"ruleId":"967","severity":1,"message":"1234","line":14,"column":3,"nodeType":"969","messageId":"970","endLine":14,"endColumn":7},{"ruleId":"967","severity":1,"message":"1083","line":17,"column":13,"nodeType":"969","messageId":"970","endLine":17,"endColumn":16},{"ruleId":"967","severity":1,"message":"1012","line":20,"column":10,"nodeType":"969","messageId":"970","endLine":20,"endColumn":16},{"ruleId":"967","severity":1,"message":"1235","line":22,"column":10,"nodeType":"969","messageId":"970","endLine":22,"endColumn":30},{"ruleId":"967","severity":1,"message":"1026","line":78,"column":15,"nodeType":"969","messageId":"970","endLine":78,"endColumn":18},{"ruleId":"967","severity":1,"message":"1236","line":89,"column":9,"nodeType":"969","messageId":"970","endLine":89,"endColumn":19},{"ruleId":"967","severity":1,"message":"994","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":26},{"ruleId":"967","severity":1,"message":"1032","line":1,"column":28,"nodeType":"969","messageId":"970","endLine":1,"endColumn":36},{"ruleId":"967","severity":1,"message":"1121","line":2,"column":8,"nodeType":"969","messageId":"970","endLine":2,"endColumn":19},{"ruleId":"967","severity":1,"message":"1015","line":15,"column":3,"nodeType":"969","messageId":"970","endLine":15,"endColumn":8},{"ruleId":"967","severity":1,"message":"1052","line":16,"column":3,"nodeType":"969","messageId":"970","endLine":16,"endColumn":8},{"ruleId":"967","severity":1,"message":"1234","line":17,"column":3,"nodeType":"969","messageId":"970","endLine":17,"endColumn":7},{"ruleId":"967","severity":1,"message":"1237","line":23,"column":8,"nodeType":"969","messageId":"970","endLine":23,"endColumn":17},{"ruleId":"967","severity":1,"message":"1122","line":39,"column":9,"nodeType":"969","messageId":"970","endLine":39,"endColumn":19},{"ruleId":"980","severity":1,"message":"1123","line":59,"column":6,"nodeType":"982","endLine":59,"endColumn":10,"suggestions":"1238"},{"ruleId":"967","severity":1,"message":"1239","line":21,"column":16,"nodeType":"969","messageId":"970","endLine":21,"endColumn":25},{"ruleId":"980","severity":1,"message":"1066","line":34,"column":6,"nodeType":"982","endLine":34,"endColumn":16,"suggestions":"1240"},{"ruleId":"967","severity":1,"message":"1026","line":47,"column":13,"nodeType":"969","messageId":"970","endLine":47,"endColumn":16},{"ruleId":"967","severity":1,"message":"994","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":26},{"ruleId":"967","severity":1,"message":"1127","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":21},{"ruleId":"967","severity":1,"message":"1128","line":7,"column":10,"nodeType":"969","messageId":"970","endLine":7,"endColumn":22},{"ruleId":"967","severity":1,"message":"1241","line":12,"column":23,"nodeType":"969","messageId":"970","endLine":12,"endColumn":34},{"ruleId":"967","severity":1,"message":"1218","line":14,"column":11,"nodeType":"969","messageId":"970","endLine":14,"endColumn":21},{"ruleId":"980","severity":1,"message":"1029","line":22,"column":5,"nodeType":"982","endLine":22,"endColumn":15,"suggestions":"1242"},{"ruleId":"967","severity":1,"message":"1031","line":22,"column":7,"nodeType":"969","messageId":"970","endLine":22,"endColumn":12},{"ruleId":"967","severity":1,"message":"994","line":1,"column":17,"nodeType":"969","messageId":"970","endLine":1,"endColumn":26},{"ruleId":"967","severity":1,"message":"1127","line":2,"column":10,"nodeType":"969","messageId":"970","endLine":2,"endColumn":21},{"ruleId":"967","severity":1,"message":"1125","line":2,"column":23,"nodeType":"969","messageId":"970","endLine":2,"endColumn":34},{"ruleId":"967","severity":1,"message":"1239","line":3,"column":10,"nodeType":"969","messageId":"970","endLine":3,"endColumn":19},{"ruleId":"967","severity":1,"message":"1113","line":5,"column":11,"nodeType":"969","messageId":"970","endLine":5,"endColumn":29},{"ruleId":"967","severity":1,"message":"1114","line":5,"column":31,"nodeType":"969","messageId":"970","endLine":5,"endColumn":47},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1243"],"no-negated-in-lhs",["1244"],"react/jsx-pascal-case","Imported JSX component Page_404 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'customizedMiddleware' is assigned a value but never used.","'textChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadProfile'. Either include it or remove the dependency array.","ArrayExpression",["1245"],"'authenticate' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["1246"],"'show' is assigned a value but never used.","'Redirect' is defined but never used.",["1247"],"React Hook useEffect has missing dependencies: 'formData' and 'match.params.token'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["1248"],"'server' is assigned a value but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.","'Menu' is defined but never used.","'Segment' is defined but never used.","'Router' is defined but never used.","'activeItem' is assigned a value but never used.","'currentClass' is assigned a value but never used.","'handleItemClick' is assigned a value but never used.","'ScreenRecord' is defined but never used.","'useRef' is defined but never used.","'err' is assigned a value but never used.","'errMsg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentClass._id', 'currentUser.name', and 'history'. Either include them or remove the dependency array.",["1249"],"'Component' is defined but never used.","'getList' is defined but never used.","'updateSeance' is defined but never used.","'addSeance' is defined but never used.","'isAuth' is defined but never used.","'Checkbox' is defined but never used.","'GridColumn' is defined but never used.","'Image' is defined but never used.","'getCookie' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'userById'. Either include them or remove the dependency array.",["1250"],"'GoogleLogout' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["1251"],"'errr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'notifications', 'socket', and 'user._id'. Either include them or remove the dependency array.",["1252"],"'res' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'documentData._id' and 'documentData.role'. Either include them or remove the dependency array.",["1253"],"'error' is assigned a value but never used.","'useState' is defined but never used.","'Feed' is defined but never used.","'RetrieveSeances' is defined but never used.","'RetrieveCoursesByIdSeance' is defined but never used.","React Hook useEffect has missing dependencies: 'CurrentClass._id' and 'dispatch'. Either include them or remove the dependency array.",["1254"],"'Dimmer' is defined but never used.","'Dropdown' is defined but never used.","'Icon' is defined but never used.","'Player' is defined but never used.","'Video' is defined but never used.","'DefaultUi' is defined but never used.","'ModalCourses' is defined but never used.","'GetSeancesByIdClass' is defined but never used.",["1255"],"'louay' is assigned a value but never used.","'Editing' is defined but never used.","'AppointmentTooltip' is defined but never used.","'Comment' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'CommentChat' is defined but never used.","'ress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1256"],"'LabelDetail' is defined but never used.","'Progress' is defined but never used.","React Hook useEffect has missing dependencies: 'courses' and 'dispatch'. Either include them or remove the dependency array.",["1257"],"'axios' is defined but never used.","'getMediaStream' is assigned a value but never used.",["1258"],"'Grid' is defined but never used.","'TextArea' is defined but never used.","React Hook useEffect has a missing dependency: 'currentClass._id'. Either include it or remove the dependency array.",["1259"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'socket'. Either include them or remove the dependency array.",["1260"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1261"],"'er' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'res2' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'Input' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Yup' is defined but never used.","'idd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentClass._id' and 'socket'. Either include them or remove the dependency array.",["1262"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Header' is defined but never used.","'getQuizzes' is defined but never used.","'EndQuiz' is defined but never used.","'objgrade' is assigned a value but never used.","'setObjGrade' is assigned a value but never used.",["1263"],"Expected '===' and instead saw '=='.","'socket' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentClass._id' and 'tag'. Either include them or remove the dependency array.",["1264"],"'Message' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'finalTask', and 'id'. Either include them or remove the dependency array.",["1265"],"'Card' is defined but never used.","'assignGradeToStudent' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'submitGrade' is assigned a value but never used.",["1266"],"'quiz' is assigned a value but never used.","'setQuiz' is assigned a value but never used.","'handleNextStep' is assigned a value but never used.","'Statistic' is defined but never used.","'Confirm' is defined but never used.","'getNbrTasksMissing' is defined but never used.","'getNbrTasksRemis' is defined but never used.","'updateTaskStatus' is defined but never used.","'assignAfterSave' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'taskDetail'. Either include them or remove the dependency array.",["1267"],"'Item' is defined but never used.",["1268"],"'ReactPlayer' is defined but never used.","'submitTask' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'task'. Either include them or remove the dependency array.",["1269"],"'useSelector' is defined but never used.","'selectedClasses' is defined but never used.","'useDispatch' is defined but never used.","'getTasksById' is defined but never used.","'Dropzone' is defined but never used.","'addUploadFile' is defined but never used.","'uploadFile' is defined but never used.","'setTask' is assigned a value but never used.","'Step' is defined but never used.","'FileUpload' is defined but never used.","'activeIndex' is assigned a value but never used.","'setActiveIndex' is assigned a value but never used.","'Images' is assigned a value but never used.","'enableUpload' is assigned a value but never used.","'setEnableUpload' is assigned a value but never used.","'close' is assigned a value but never used.","'setClose' is assigned a value but never used.","'setSelected' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'theme' is assigned a value but never used.","'setTheme' is assigned a value but never used.","'selectedTheme' is assigned a value but never used.","'selectedItem' is assigned a value but never used.","'SetSelectedItem' is assigned a value but never used.","'Multiselect' is defined but never used.","'Rail' is defined but never used.","'Loader' is defined but never used.","'CorrectedTask' is defined but never used.","'grade' is assigned a value but never used.","'setGrade' is assigned a value but never used.","'_id' is assigned a value but never used.","'setIdTask' is assigned a value but never used.",["1270"],"'getCorrectedTask' is defined but never used.","'zero' is assigned a value but never used.","'set' is defined but never used.","'Tab' is defined but never used.","'array' is defined but never used.","'enablee' is assigned a value but never used.","'setUploadfilee' is assigned a value but never used.","React Hook useEffect contains a call to 'setImages'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.upImg, props.listfile, arr] as a second argument to the useEffect Hook.",["1271"],"'file' is assigned a value but never used.","'config' is assigned a value but never used.","React Hook useEffect contains a call to 'SetLoader'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props, endloader, fd] as a second argument to the useEffect Hook.",["1272"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'fetchQuestions' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'up' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.courseID' and 'props.taskID'. Either include them or remove the dependency array.",["1273"],"React Hook useEffect contains a call to 'SetLoader'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props, endloader, fd, Images] as a second argument to the useEffect Hook.",["1274"],"'Select' is defined but never used.","'signout' is defined but never used.","'idSance' is assigned a value but never used.","'SetIdSeance' is assigned a value but never used.","'dateCreation' is assigned a value but never used.","'SetDateCreation' is assigned a value but never used.","'rep' is assigned a value but never used.","'updateById' is defined but never used.","React Hook useEffect has a missing dependency: 'seanceId'. Either include it or remove the dependency array.",["1275"],"'Table' is defined but never used.","React Hook useEffect has missing dependencies: 'coursesId' and 'multiple_resources'. Either include them or remove the dependency array.",["1276"],"'name' is assigned a value but never used.","'percent' is assigned a value but never used.","'status' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'InputEmoji' is defined but never used.","React Hook useEffect has a missing dependency: 'props.courseID'. Either include it or remove the dependency array.",["1277"],"'commentss' is assigned a value but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'handleOnEnter' is defined but never used.","'documentData' is assigned a value but never used.","'DeleteSeance' is defined but never used.","'addClasss' is defined but never used.","'updateClasss' is defined but never used.","React Hook useEffect has a missing dependency: 'documentData._id'. Either include it or remove the dependency array.",["1278"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'taskDetail' is assigned a value but never used.","'AddTask' is defined but never used.","'moment' is defined but never used.","'taskSlice' is defined but never used.","'listFile' is defined but never used.","'setUp' is assigned a value but never used.","'taskEdit' is assigned a value but never used.","'setTaskEdit' is assigned a value but never used.","'getTaskByTeacher' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AddquestionsApi' is defined but never used.","'addQuestion' is defined but never used.","'cancel' is assigned a value but never used.","'SetErrorMessage' is assigned a value but never used.","'clicCancel' is assigned a value but never used.","'clicCloseCancel' is assigned a value but never used.","'List' is defined but never used.","'UpdateProfilePicture' is defined but never used.","'closeModel' is assigned a value but never used.","'ModalTask' is defined but never used.",["1279"],"'useParams' is defined but never used.",["1280"],"'setReminder' is assigned a value but never used.",["1281"],"no-global-assign","no-unsafe-negation",{"desc":"1282","fix":"1283"},{"desc":"1284","fix":"1285"},{"desc":"1282","fix":"1286"},{"desc":"1287","fix":"1288"},{"desc":"1289","fix":"1290"},{"desc":"1291","fix":"1292"},{"desc":"1293","fix":"1294"},{"desc":"1295","fix":"1296"},{"desc":"1297","fix":"1298"},{"desc":"1299","fix":"1300"},{"desc":"1299","fix":"1301"},{"desc":"1302","fix":"1303"},{"desc":"1304","fix":"1305"},{"desc":"1306","fix":"1307"},{"desc":"1308","fix":"1309"},{"desc":"1310","fix":"1311"},{"desc":"1302","fix":"1312"},{"desc":"1313","fix":"1314"},{"desc":"1302","fix":"1315"},{"desc":"1316","fix":"1317"},{"desc":"1318","fix":"1319"},{"desc":"1302","fix":"1320"},{"desc":"1321","fix":"1322"},{"desc":"1321","fix":"1323"},{"desc":"1324","fix":"1325"},{"desc":"1302","fix":"1326"},{"desc":"1327","fix":"1328"},{"desc":"1329","fix":"1330"},{"desc":"1331","fix":"1332"},{"desc":"1333","fix":"1334"},{"desc":"1335","fix":"1336"},{"desc":"1337","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1341","fix":"1342"},{"desc":"1324","fix":"1343"},{"desc":"1308","fix":"1344"},{"desc":"1297","fix":"1345"},"Update the dependencies array to be: [loadProfile]",{"range":"1346","text":"1347"},"Update the dependencies array to be: [formData, match.params]",{"range":"1348","text":"1349"},{"range":"1350","text":"1347"},"Update the dependencies array to be: [formData, match.params.token]",{"range":"1351","text":"1352"},"Update the dependencies array to be: [currentClass._id, currentUser.name, history, props.history]",{"range":"1353","text":"1354"},"Update the dependencies array to be: [dispatch, id, userById]",{"range":"1355","text":"1356"},"Update the dependencies array to be: [dispatch, user._id]",{"range":"1357","text":"1358"},"Update the dependencies array to be: [dispatch, notifications, socket, user._id]",{"range":"1359","text":"1360"},"Update the dependencies array to be: [dispatch, documentData._id, documentData.role]",{"range":"1361","text":"1362"},"Update the dependencies array to be: [CurrentClass._id, dispatch]",{"range":"1363","text":"1364"},{"range":"1365","text":"1364"},"Update the dependencies array to be: [dispatch, id]",{"range":"1366","text":"1367"},"Update the dependencies array to be: [courses, dispatch, id]",{"range":"1368","text":"1369"},"Update the dependencies array to be: [CurrentClass._id, dispatch, mediaBlob]",{"range":"1370","text":"1371"},"Update the dependencies array to be: [currentClass._id, dispatch]",{"range":"1372","text":"1373"},"Update the dependencies array to be: [dispatch, id, socket]",{"range":"1374","text":"1375"},{"range":"1376","text":"1367"},"Update the dependencies array to be: [currentClass._id, dispatch, socket]",{"range":"1377","text":"1378"},{"range":"1379","text":"1367"},"Update the dependencies array to be: [currentClass._id, dispatch, tag]",{"range":"1380","text":"1381"},"Update the dependencies array to be: [dispatch, finalTask, id]",{"range":"1382","text":"1383"},{"range":"1384","text":"1367"},"Update the dependencies array to be: [dispatch, taskDetail]",{"range":"1385","text":"1386"},{"range":"1387","text":"1386"},"Update the dependencies array to be: [dispatch, id, task]",{"range":"1388","text":"1389"},{"range":"1390","text":"1367"},"Add dependencies array: [props.upImg, props.listfile, arr]",{"range":"1391","text":"1392"},"Add dependencies array: [props, endloader, fd]",{"range":"1393","text":"1394"},"Update the dependencies array to be: [dispatch, props.courseID, props.taskID]",{"range":"1395","text":"1396"},"Add dependencies array: [props, endloader, fd, Images]",{"range":"1397","text":"1398"},"Update the dependencies array to be: [dispatch, seanceId]",{"range":"1399","text":"1400"},"Update the dependencies array to be: [coursesId, dispatch, multiple_resources]",{"range":"1401","text":"1402"},"Update the dependencies array to be: [dispatch, props.courseID]",{"range":"1403","text":"1404"},"Update the dependencies array to be: [dispatch, documentData._id]",{"range":"1405","text":"1406"},{"range":"1407","text":"1389"},{"range":"1408","text":"1373"},{"range":"1409","text":"1362"},[497,499],"[loadProfile]",[685,699],"[formData, match.params]",[547,549],[561,563],"[formData, match.params.token]",[877,892],"[currentClass._id, currentUser.name, history, props.history]",[1649,1651],"[dispatch, id, userById]",[971,981],"[dispatch, user._id]",[2045,2047],"[dispatch, notifications, socket, user._id]",[1244,1254],"[dispatch, documentData._id, documentData.role]",[971,973],"[CurrentClass._id, dispatch]",[1272,1274],[1396,1400],"[dispatch, id]",[1283,1287],"[courses, dispatch, id]",[2666,2677],"[CurrentClass._id, dispatch, mediaBlob]",[1573,1583],"[currentClass._id, dispatch]",[1796,1798],"[dispatch, id, socket]",[1920,1930],[1230,1240],"[currentClass._id, dispatch, socket]",[2506,2510],[1050,1060],"[currentClass._id, dispatch, tag]",[906,908],"[dispatch, finalTask, id]",[1177,1181],[1048,1050],"[dispatch, taskDetail]",[993,995],[1446,1450],"[dispatch, id, task]",[1203,1207],[745,745],", [props.upImg, props.listfile, arr]",[2057,2057],", [props, endloader, fd]",[917,927],"[dispatch, props.courseID, props.taskID]",[1966,1966],", [props, endloader, fd, Images]",[1125,1135],"[dispatch, seanceId]",[2080,2090],"[coursesId, dispatch, multiple_resources]",[776,786],"[dispatch, props.courseID]",[730,740],"[dispatch, documentData._id]",[1508,1512],[927,937],[678,688]]